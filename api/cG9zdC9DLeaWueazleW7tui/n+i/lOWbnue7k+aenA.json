{"title":"C#方法延迟返回结果","date":"2012-04-13T07:52:12.000Z","slug":"C-方法延迟返回结果","updated":"2019-05-23T03:17:36.066Z","content":"<p>不知道标题恰不恰当，只不过我的需求是这个样子的：</p>\n<p>例如一个方法A，返回值是bool类型的，但是方法执行过程中，需要另一个方法B执行结束，但是还不能直接调用B方法，可是B是等待外部信号才执行。所以需要延迟一下，等B方法执行了才返回结果。</p>\n<p>找了些资料，找到了AutoResetEvent，可以达到我的目的，但是否是最适合的，就不知道了，由于我的项目中所谓的B方法是RS232端口读数据的，然后解析出来的返回值。并不是时时的，可能有点时间差，于是我采用了下面的方式。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 标志位，用来等待返回</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">AutoResetEvent are = <span class=\"keyword\">new</span> AutoResetEvent(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 返回结果，可以是任意需要的类型</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">object</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">A</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/****Begin**/</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        * 数据的拼装</span></span><br><span class=\"line\"><span class=\"comment\">        * 数据的发送</span></span><br><span class=\"line\"><span class=\"comment\">        **/</span></span><br><span class=\"line\">    Send(<span class=\"string\">\"要传输的数据\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">/****End****/</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//等待信号，-1代表无限等待，可以更改为其他值，单位是毫秒，等待时间过后为超时</span></span><br><span class=\"line\">    are.WaitOne(<span class=\"number\">-1</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">B</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">byte</span>[] bytes = Read();</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        * 此处解析bytes中的数据</span></span><br><span class=\"line\"><span class=\"comment\">        * 根据解析出来的数据</span></span><br><span class=\"line\"><span class=\"comment\">        * 得到想要的结果</span></span><br><span class=\"line\"><span class=\"comment\">        * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//得到需要的结果</span></span><br><span class=\"line\">    result = Encoding.UTF8.GetString(bytes);</span><br><span class=\"line\">    <span class=\"comment\">//给信号</span></span><br><span class=\"line\">    are.Set();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"残篇『十二』","slug":"canpian-12"},"next":{"title":"毁灭童年！还原童话故事恐怖面目","slug":"毁灭童年！还原童话故事恐怖面目"},"link":"http://ojdev.github.io/post/C-方法延迟返回结果/"}