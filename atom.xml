<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>后山</title>
  
  
  <link href="https://oujun.work/atom.xml" rel="self"/>
  
  <link href="https://oujun.work/"/>
  <updated>2024-01-31T03:35:57.057Z</updated>
  <id>https://oujun.work/</id>
  
  <author>
    <name>欧俊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>猫国建设者作弊</title>
    <link href="https://oujun.work/2024/01/22/%E7%8C%AB%E5%9B%BD%E5%BB%BA%E8%AE%BE%E8%80%85%E4%BD%9C%E5%BC%8A.html"/>
    <id>https://oujun.work/2024/01/22/%E7%8C%AB%E5%9B%BD%E5%BB%BA%E8%AE%BE%E8%80%85%E4%BD%9C%E5%BC%8A.html</id>
    <published>2024-01-22T01:08:16.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改资源"><a href="#修改资源" class="headerlink" title="修改资源"></a>修改资源</h1><p>用浏览器玩游戏的时候，按F12，进入浏览器的控制台，猫国建设者运行的时候是JavaScript脚本的，其起源都在<code>this.gamePage.resPool</code>对象中，直接输出就能看到资源的相关属性和值，我们就可以对它直接进行修改，例如修改资源数量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>.<span class="hljs-property">length</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>[i].<span class="hljs-property">unlocked</span>==<span class="hljs-literal">true</span>)<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>[i].<span class="hljs-property">name</span>).<span class="hljs-property">value</span>+=<span class="hljs-number">9999999999999999999999999999999999999999999999999999999999999999999</span><br>&#125;<br></code></pre></td></tr></table></figure><p>这里为了游戏体验，做了资源是否已经解锁的限制<code>.unlocked==true</code>,防止直接刷出所有资源，<code>.value+=9999999999999999999999999999999999999999999999999999999999999999999</code>这里可以进行修改增加多少或者是资源&#x3D;多少<code>.value=9999999999999999999999999999999999999999999999999999999999999999999</code></p><p>此外，还有一个就是将资源修改到当前限制的最大值的方法，但是有一个弊端，就是工坊里的一些资源会变成0；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>.<span class="hljs-property">length</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>[i].<span class="hljs-property">unlocked</span>==<span class="hljs-literal">true</span>)<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-title function_">get</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>[i].<span class="hljs-property">name</span>).<span class="hljs-property">value</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">resources</span>[i].<span class="hljs-property">maxValue</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="修改建筑数量"><a href="#修改建筑数量" class="headerlink" title="修改建筑数量"></a>修改建筑数量</h1><p><strong>不建议使用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">game</span>.<span class="hljs-property">bld</span>.<span class="hljs-property">meta</span>[<span class="hljs-number">0</span>].<span class="hljs-property">meta</span>.<span class="hljs-property">length</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">game</span>.<span class="hljs-property">bld</span>.<span class="hljs-property">meta</span>[<span class="hljs-number">0</span>].<span class="hljs-property">meta</span>[i].<span class="hljs-property">unlocked</span>==<span class="hljs-literal">true</span>)<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">game</span>.<span class="hljs-property">bld</span>.<span class="hljs-property">meta</span>[<span class="hljs-number">0</span>].<span class="hljs-property">meta</span>[i].<span class="hljs-property">on</span>+=<span class="hljs-number">100</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">game</span>.<span class="hljs-property">bld</span>.<span class="hljs-property">meta</span>[<span class="hljs-number">0</span>].<span class="hljs-property">meta</span>[i].<span class="hljs-property">togglable</span>==<span class="hljs-literal">true</span>)<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">gamePage</span>.<span class="hljs-property">resPool</span>.<span class="hljs-property">game</span>.<span class="hljs-property">bld</span>.<span class="hljs-property">meta</span>[<span class="hljs-number">0</span>].<span class="hljs-property">meta</span>[i].<span class="hljs-property">val</span>+=<span class="hljs-number">100</span><br>&#125;<br></code></pre></td></tr></table></figure><p>同样增加了建筑是否解锁的判断<code>.unlocked==true</code>,如果解锁了，就增加100个，也就是<code>.on+=100</code>;同时判断是否是又开关的<code>.togglable==true</code>有的话就直接增加<code>.val+=100</code>,就是建筑上的那种’100&#x2F;100’。</p><p>但是有一点小问题就是即使你的资源不够，建筑依然能升级，所以不如直接修改游戏<code>选项</code>中的<code>更多设置</code>-<code>批处理次数（Ctrl+单击）</code>，然后按住ctrl点建筑的升级方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;修改资源&quot;&gt;&lt;a href=&quot;#修改资源&quot; class=&quot;headerlink&quot; title=&quot;修改资源&quot;&gt;&lt;/a&gt;修改资源&lt;/h1&gt;&lt;p&gt;用浏览器玩游戏的时候，按F12，进入浏览器的控制台，猫国建设者运行的时候是JavaScript脚本的，其起源都在&lt;code&gt;</summary>
      
    
    
    
    <category term="知识储备" scheme="https://oujun.work/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
    <category term="游戏" scheme="https://oujun.work/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="作弊" scheme="https://oujun.work/tags/%E4%BD%9C%E5%BC%8A/"/>
    
    <category term="猫国建设者" scheme="https://oujun.work/tags/%E7%8C%AB%E5%9B%BD%E5%BB%BA%E8%AE%BE%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>将微信文件夹下的dat转回图片</title>
    <link href="https://oujun.work/2023/07/02/%E5%B0%86%E5%BE%AE%E4%BF%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84dat%E8%BD%AC%E5%9B%9E%E5%9B%BE%E7%89%87.html"/>
    <id>https://oujun.work/2023/07/02/%E5%B0%86%E5%BE%AE%E4%BF%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84dat%E8%BD%AC%E5%9B%9E%E5%9B%BE%E7%89%87.html</id>
    <published>2023-07-02T01:24:00.000Z</published>
    <updated>2023-07-02T01:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>into_path = <span class="hljs-string">r&#x27;E:\Documents\WeChat Files\luacloud\FileStorage\Image\\&#x27;</span>[:-<span class="hljs-number">1</span>]  <span class="hljs-comment">#请将想导入的dat文件的路径复制到引号里面，修改此处代码</span><br>out_path = <span class="hljs-string">r&quot;D:\WeixinImages\\&quot;</span>[:-<span class="hljs-number">1</span>]  <span class="hljs-comment">#运行代码前记得修改导出路径</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">imageDecode</span>(<span class="hljs-params">f, fn</span>):<br>    dat_read = <span class="hljs-built_in">open</span>(f, <span class="hljs-string">&quot;rb&quot;</span>)  <br>    xo = Format(f)  <br>    out = out_path + fn + <span class="hljs-string">&quot;.jpg&quot;</span>  <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;导出文件的路径&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(out), end=<span class="hljs-string">&#x27;\n\n&#x27;</span>)<br>    png_write = <span class="hljs-built_in">open</span>(out, <span class="hljs-string">&quot;wb&quot;</span>)  <br>    dat_read.seek(<span class="hljs-number">0</span>)  <br><br>    <span class="hljs-keyword">for</span> now <span class="hljs-keyword">in</span> dat_read:  <br>        <span class="hljs-keyword">for</span> nowByte <span class="hljs-keyword">in</span> now:<br>            newByte = nowByte ^ xo  <br>            png_write.write(<span class="hljs-built_in">bytes</span>([newByte])) <br><br>    dat_read.close()<br>    png_write.close()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">findFile</span>(<span class="hljs-params">f</span>):<br>    fsdir = os.listdir(f)  <br>    <span class="hljs-comment"># print(fsdir)</span><br>    <span class="hljs-keyword">for</span> finfo <span class="hljs-keyword">in</span> fsdir:  <br>        <span class="hljs-built_in">print</span>(into_path + finfo)<br>        fsinfo = os.listdir(into_path + finfo) <br>        <span class="hljs-keyword">for</span> fn <span class="hljs-keyword">in</span> fsinfo:  <br>            temp_path = os.path.join(into_path + finfo, fn)  <br>            <span class="hljs-keyword">if</span> os.path.isfile(temp_path):  <br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;导入的文件路径是&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(temp_path))<br>                fn = fn[:-<span class="hljs-number">4</span>]  <br>                imageDecode(temp_path, fn)  <br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">pass</span> <br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Format</span>(<span class="hljs-params">f</span>):<br>    dat_r = <span class="hljs-built_in">open</span>(f, <span class="hljs-string">&quot;rb&quot;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        a = [(<span class="hljs-number">0x89</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x4e</span>), (<span class="hljs-number">0x47</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x46</span>), (<span class="hljs-number">0xff</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0xff</span>)]<br>        <span class="hljs-keyword">for</span> now <span class="hljs-keyword">in</span> dat_r:<br>            <span class="hljs-keyword">for</span> xor <span class="hljs-keyword">in</span> a:<br>                i = <span class="hljs-number">0</span><br>                res = []<br>                nowg = now[:<span class="hljs-number">3</span>]<br>                <span class="hljs-keyword">for</span> nowByte <span class="hljs-keyword">in</span> nowg:<br>                    res.append(nowByte ^ xor[i])<br>                    i += <span class="hljs-number">1</span><br>                <span class="hljs-keyword">if</span> res[<span class="hljs-number">0</span>] == res[<span class="hljs-number">1</span>] == res[<span class="hljs-number">2</span>]:<br>                    <span class="hljs-keyword">return</span> res[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">finally</span>:<br>        dat_r.close()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    findFile(into_path)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="知识储备" scheme="https://oujun.work/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
    <category term="python" scheme="https://oujun.work/tags/python/"/>
    
    <category term="微信" scheme="https://oujun.work/tags/%E5%BE%AE%E4%BF%A1/"/>
    
    <category term="图片" scheme="https://oujun.work/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="解密" scheme="https://oujun.work/tags/%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Linux中开启samba</title>
    <link href="https://oujun.work/2023/06/30/Linux%E4%B8%AD%E5%BC%80%E5%90%AFsamba.html"/>
    <id>https://oujun.work/2023/06/30/Linux%E4%B8%AD%E5%BC%80%E5%90%AFsamba.html</id>
    <published>2023-06-30T06:46:09.000Z</published>
    <updated>2023-06-30T06:46:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更新与安装"><a href="#更新与安装" class="headerlink" title="更新与安装"></a>更新与安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt upgrade -y<br>apt install nano samba -y<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>切换目录到<code>/etc/samba</code>,编辑配置文件<code>nano smb.conf</code>,在文件的最后添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf">[datacenter]<br>    comment = 描述<br>    path  = /路径<br>    guest ok = no  ;或yes<br>    browsable = no ;或yes<br>    ;write list = root<br></code></pre></td></tr></table></figure><p>保存后添加账户<code>smbpasswd -a root</code>输入新的密码，然后重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart smdb<br>systemctl restart samba<br>systemctl <span class="hljs-built_in">enable</span> --now smbd<br></code></pre></td></tr></table></figure><h1 id="添加新账号"><a href="#添加新账号" class="headerlink" title="添加新账号"></a>添加新账号</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd user1<br><br>smbpasswd -a user1<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;更新与安装&quot;&gt;&lt;a href=&quot;#更新与安装&quot; class=&quot;headerlink&quot; title=&quot;更新与安装&quot;&gt;&lt;/a&gt;更新与安装&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="家庭服务" scheme="https://oujun.work/categories/%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="NAS" scheme="https://oujun.work/tags/NAS/"/>
    
    <category term="Jellyfin" scheme="https://oujun.work/tags/Jellyfin/"/>
    
    <category term="Proxmox VE" scheme="https://oujun.work/tags/Proxmox-VE/"/>
    
    <category term="PVE" scheme="https://oujun.work/tags/PVE/"/>
    
  </entry>
  
  <entry>
    <title>用chatgpt做架构设计</title>
    <link href="https://oujun.work/2023/03/01/%E7%94%A8chatgpt%E5%81%9A%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html"/>
    <id>https://oujun.work/2023/03/01/%E7%94%A8chatgpt%E5%81%9A%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html</id>
    <published>2023-03-01T15:00:00.000Z</published>
    <updated>2023-03-01T15:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<p> 用chatgpt做架构设计</p><h1 id="用户故事"><a href="#用户故事" class="headerlink" title="用户故事"></a>用户故事</h1><blockquote><p>我们要开发一个系统，我们从用户故事开始，需要设计一个管理系统的模型，其中包括用户账号的基本信息实体，手机号验证实体，登录记录实体，设备绑定信息实体，用户的角色实体，用户的组织机构实体以及变更记录实体。</p></blockquote><hr><p>好的，让我帮您分析和设计这个系统。</p><p>首先，我们需要了解用户的需求和用户故事，然后根据这些需求和故事设计实体和其属性。基于您提供的信息，我们可以设计出以下实体和其属性：</p><ol><li>用户账号实体</li></ol><ul><li>ID</li><li>用户名</li><li>密码</li><li>姓名</li><li>电子邮件</li><li>创建时间</li><li>上次修改时间</li></ul><ol start="2"><li>手机号验证实体</li></ol><ul><li>ID</li><li>手机号</li><li>验证码</li><li>创建时间</li></ul><ol start="3"><li>登录记录实体</li></ol><ul><li>ID</li><li>用户ID</li><li>IP地址</li><li>登录时间</li></ul><ol start="4"><li>设备绑定信息实体</li></ol><ul><li>ID</li><li>用户ID</li><li>设备名称</li><li>设备ID</li><li>绑定时间</li></ul><ol start="5"><li>用户角色实体</li></ol><ul><li>ID</li><li>角色名称<br>· 描述</li></ul><ol start="6"><li>用户组织机构实体</li></ol><ul><li>ID</li><li>组织机构名称</li><li>描述</li><li>父节点ID</li></ul><ol start="7"><li>变更记录实体</li></ol><ul><li>ID</li><li>实体名称</li><li>实体ID</li><li>变更前属性值</li><li>变更后属性值</li><li>变更人</li><li>变更时间</li></ul><p>以上实体和属性是根据您提供的信息进行设计的。您可以根据具体情况进行调整和完善。</p><p>接下来，我们需要根据实体之间的关系设计出模型。以下是一个简单的模型示意图：</p><p>在这个模型中，用户账号实体是核心实体，其他实体都是围绕用户账号实体而建立的。手机号验证实体、登录记录实体和设备绑定信息实体都是用户账号的附属信息，用户角色实体和用户组织机构实体则是用于管理用户账号的角色和组织机构信息，变更记录实体用于记录实体属性的变更历史。</p><p>希望这个设计可以对您有所帮助。</p><hr><blockquote><p>用户组织机构实体中还要增加层级、编号、是否隐藏</p></blockquote><hr><p>好的，根据您的需求，我们可以将用户组织机构实体的属性扩展为：</p><ol><li>用户组织机构实体</li></ol><ul><li>ID</li><li>组织机构名称</li><li>描述</li><li>父节点ID</li><li>层级</li><li>编号</li><li>是否隐藏</li></ul><p>这样设计可以更好地支持组织机构之间的层级关系，并且可以通过编号快速定位和查找组织机构。同时，是否隐藏属性可以支持对某些敏感的组织机构进行隐藏和保护。</p><hr><h1 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h1><blockquote><p>好，将上面的设计转化为数据模型，字段使用英文字段与中文注释，数据库采用postgresql，使用markdown表格的形式来描述输出，并直接给出markdown代码</p></blockquote><hr><p>好的，以下是根据您提供的信息设计的PostgreSQL数据库的数据模型。您可以将以下Markdown代码复制到Markdown编辑器中进行查看和编辑。</p><h2 id="用户账号实体"><a href="#用户账号实体" class="headerlink" title="用户账号实体"></a>用户账号实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>用户账号ID</td></tr><tr><td>username</td><td>varchar(50)</td><td>用户名</td></tr><tr><td>password</td><td>varchar(50)</td><td>密码</td></tr><tr><td>name</td><td>varchar(50)</td><td>姓名</td></tr><tr><td>email</td><td>varchar(50)</td><td>电子邮件</td></tr><tr><td>created_at</td><td>timestamp</td><td>创建时间</td></tr><tr><td>last_modified_at</td><td>timestamp</td><td>上次修改时间</td></tr></tbody></table><h2 id="手机号验证实体"><a href="#手机号验证实体" class="headerlink" title="手机号验证实体"></a>手机号验证实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>手机号验证ID</td></tr><tr><td>user_id</td><td>integer</td><td>用户账号ID</td></tr><tr><td>phone_number</td><td>varchar(20)</td><td>手机号</td></tr><tr><td>verification_code</td><td>varchar(10)</td><td>验证码</td></tr><tr><td>created_at</td><td>timestamp</td><td>创建时间</td></tr></tbody></table><h2 id="登录记录实体"><a href="#登录记录实体" class="headerlink" title="登录记录实体"></a>登录记录实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>登录记录ID</td></tr><tr><td>user_id</td><td>integer</td><td>用户账号ID</td></tr><tr><td>ip_address</td><td>varchar(20)</td><td>IP地址</td></tr><tr><td>login_time</td><td>timestamp</td><td>登录时间</td></tr></tbody></table><h2 id="设备绑定信息实体"><a href="#设备绑定信息实体" class="headerlink" title="设备绑定信息实体"></a>设备绑定信息实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>设备绑定信息ID</td></tr><tr><td>user_id</td><td>integer</td><td>用户账号ID</td></tr><tr><td>device_name</td><td>varchar(50)</td><td>设备名称</td></tr><tr><td>device_id</td><td>varchar(50)</td><td>设备ID</td></tr><tr><td>binding_time</td><td>timestamp</td><td>绑定时间</td></tr></tbody></table><h2 id="用户角色实体"><a href="#用户角色实体" class="headerlink" title="用户角色实体"></a>用户角色实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>用户角色ID</td></tr><tr><td>role_name</td><td>varchar(50)</td><td>角色名称</td></tr><tr><td>description</td><td>varchar(255)</td><td>描述</td></tr></tbody></table><h2 id="用户组织机构实体"><a href="#用户组织机构实体" class="headerlink" title="用户组织机构实体"></a>用户组织机构实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>用户组织机构ID</td></tr><tr><td>organization_name</td><td>varchar(50)</td><td>组织机构名称</td></tr><tr><td>description</td><td>varchar(255)</td><td>描述</td></tr><tr><td>parent_id</td><td>integer</td><td>父节点ID</td></tr><tr><td>level</td><td>integer</td><td>层级</td></tr><tr><td>number</td><td>varchar(50)</td><td>编号</td></tr><tr><td>is_hidden</td><td>boolean</td><td>是否隐藏</td></tr></tbody></table><h2 id="变更记录实体"><a href="#变更记录实体" class="headerlink" title="变更记录实体"></a>变更记录实体</h2><table><thead><tr><th>字段名</th><th>数据类型</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>serial</td><td>变更记录ID</td></tr><tr><td>entity_name</td><td>varchar(50)</td><td>实体名称</td></tr><tr><td>entity_id</td><td>integer</td><td>实体ID</td></tr><tr><td>before_change_value</td><td>varchar(255)</td><td>变更前属性值</td></tr><tr><td>after_change_value</td><td>varchar(255)</td><td>变更后属性值</td></tr><tr><td>change_by</td><td>varchar(50)</td><td>变更人</td></tr><tr><td>change_time</td><td>timestamp</td><td>变更时间</td></tr></tbody></table><p>以上是一个简单的数据模型示例，您可以根据具体的业务需求进行调整和完善。注意，这里采用了PostgreSQL的数据类型和字段命名方式，您可以根据具体的数据库类型和规范进行调整。</p><hr><h1 id="关系图"><a href="#关系图" class="headerlink" title="关系图"></a>关系图</h1><blockquote><p>输出类之间的关系图，用markdown的格式，输出符合Mermaid的脚本代码</p></blockquote><hr><p>好的，以下是使用Mermaid的脚本代码，用Markdown输出用户账号实体、用户角色实体、用户组织机构实体之间的关系图：</p><pre><code class=" mermaid">classDiagram    Account --|&gt; PhoneNumberVerification    Account --|&gt; LoginRecord    Account --|&gt; DeviceBindingInformation    Account --* Role    Account --* Organization    Account --|&gt; ChangeRecord    class Account&#123;        +id: int        +username: string        +password: string        +name: string        +email: string        +created_at: timestamp        +last_modified_at: timestamp    &#125;    class PhoneNumberVerification&#123;        +id: int        +user_id: int        +phone_number: string        +verification_code: string        +created_at: timestamp    &#125;    class LoginRecord&#123;        +id: int        +user_id: int        +ip_address: string        +login_time: timestamp    &#125;    class DeviceBindingInformation&#123;        +id: int        +user_id: int        +device_name: string        +device_id: string        +binding_time: timestamp    &#125;    class Role&#123;        +id: int        +role_name: string        +description: string    &#125;    class Organization&#123;        +id: int        +organization_name: string        +description: string        +parent_id: int        +level: int        +number: string        +is_hidden: boolean    &#125;    class ChangeRecord&#123;        +id: int        +entity_name: string        +entity_id: int        +before_change_value: string        +after_change_value: string        +change_by: string        +change_time: timestamp    &#125;</code></pre><p>以上是一个简单的类之间关系图的示例，您可以根据具体的业务需求进行调整和完善。注意，这里采用了Mermaid的语法，您需要将其复制到Mermaid编辑器中进行查看和编辑。</p><hr><h1 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h1><blockquote><p>帮我输出序列图图，用markdown的格式，输出符合Mermaid的脚本代码</p></blockquote><hr><p>以下是符合Mermaid的脚本代码，用于输出序列图，您可以将其复制到Mermaid编辑器中进行查看和编辑。</p><pre><code class=" mermaid">sequenceDiagram    participant User    participant System    participant Database    User-&gt;&gt;+System: Login Request    System-&gt;&gt;+Database: Query User Information    Database--&gt;&gt;-System: Return User Information    alt Invalid Username or Password        System-&gt;&gt;+User: Show Error Message    else Valid Username and Password        System-&gt;&gt;+User: Show Home Page        User-&gt;&gt;+System: Browse Organization Information        System-&gt;&gt;+Database: Query Organization Information        Database--&gt;&gt;-System: Return Organization Information        System--&gt;&gt;-User: Show Organization Information    end    User-&gt;&gt;+System: Logout Request    System-&gt;&gt;+Database: Update User Status    Database--&gt;&gt;-System: Update Success    System--&gt;&gt;-User: Redirect to Login Page</code></pre><p>以上是一个简单的序列图的示例，模拟了用户登录系统、浏览组织机构信息和退出系统的过程。您可以根据具体的业务需求进行调整和完善。注意，这里采用了Mermaid的语法，您需要将其复制到Mermaid编辑器中进行查看和编辑。</p><hr><h1 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h1><h1 id="产品积压项"><a href="#产品积压项" class="headerlink" title="产品积压项"></a>产品积压项</h1><blockquote></blockquote><p>使用敏捷开发的形式对这个系统进行产品积压项拆解</p><hr><p>好的，我们可以使用敏捷开发的形式来对这个系统进行产品积压项拆解。以下是一些可能的产品积压项，您可以根据实际情况进行适当调整和完善。</p><ol><li>用户账号管理功能</li></ol><ul><li>用户账号的创建、修改、删除等基本操作</li><li>用户密码的加密、解密和重置等操作</li><li>用户个人信息的编辑和展示功能</li><li>用户权限管理和角色分配功能</li><li>用户登录日志和设备绑定信息的记录和查询功能</li><li>用户账号变更记录的记录和查询功能</li></ul><ol start="2"><li>手机号验证功能</li></ol><ul><li>手机号的验证和保存功能</li><li>手机号的验证码发送和验证功能</li><li>手机号的修改和删除功能</li></ul><ol start="3"><li>组织机构管理功能</li></ol><ul><li>组织机构的创建、修改、删除等基本操作</li><li>组织机构的层级结构和编号的展示和维护功能</li><li>组织机构的隐藏和显示功能</li><li>组织机构成员的添加、删除和查询功能</li><li>组织机构变更记录的记录和查询功能</li></ul><ol start="4"><li>角色管理功能</li></ol><ul><li>角色的创建、修改、删除等基本操作</li><li>角色的权限分配和管理功能</li><li>角色成员的添加、删除和查询功能</li></ul><ol start="5"><li>变更记录管理功能</li></ol><ul><li>系统各项实体的变更记录的记录和查询功能</li><li>变更记录的导出和打印功能</li></ul><p>以上是一些可能的产品积压项，您可以根据实际情况进行适当调整和完善。在实际开发过程中，可以将这些积压项分解成更小的任务，便于团队成员协作和实现敏捷开发。</p><hr><h1 id="任务拆解"><a href="#任务拆解" class="headerlink" title="任务拆解"></a>任务拆解</h1><blockquote><p>对情景用户账号管理功能进行开发任务拆解</p></blockquote><hr><p>好的，下面是对情景用户账号管理功能进行开发任务拆解的一些可能的任务：</p><ol><li>创建用户账号</li></ol><ul><li>设计用户账号创建界面和交互流程</li><li>实现用户账号创建逻辑和数据验证</li><li>实现用户密码加密和存储逻辑</li><li>实现用户权限和角色分配逻辑</li></ul><ol start="2"><li>修改用户账号</li></ol><ul><li>设计用户账号编辑界面和交互流程</li><li>实现用户账号编辑逻辑和数据验证</li><li>实现用户密码修改逻辑和数据验证</li><li>实现用户权限和角色分配逻辑</li></ul><ol start="3"><li>删除用户账号</li></ol><ul><li>设计用户账号删除界面和交互流程</li><li>实现用户账号删除逻辑和数据验证</li><li>实现用户相关信息（如登录记录、设备绑定信息、变更记录等）的删除逻辑</li></ul><ol start="4"><li>用户个人信息管理</li></ol><ul><li>设计用户个人信息界面和交互流程</li><li>实现用户个人信息的展示逻辑</li><li>实现用户个人信息的编辑逻辑和数据验证</li></ul><ol start="5"><li>用户权限管理</li></ol><ul><li>设计用户权限管理界面和交互流程</li><li>实现用户权限和角色分配逻辑</li><li>实现权限和角色的查询和删除逻辑</li></ul><ol start="6"><li>用户登录日志和设备绑定信息管理</li></ol><ul><li>设计用户登录日志和设备绑定信息界面和交互流程</li><li>实现用户登录日志和设备绑定信息的查询和删除逻辑</li><li>实现登录日志和设备绑定信息的导出和打印逻辑</li></ul><ol start="7"><li>用户账号变更记录管理</li></ol><ul><li>设计用户账号变更记录界面和交互流程</li><li>实现用户账号变更记录的查询和删除逻辑</li><li>实现用户账号变更记录的导出和打印逻辑</li></ul><p>以上是一些可能的开发任务，您可以根据实际情况进行适当调整和完善。在实际开发过程中，可以将这些任务进一步拆分为更小的子任务，便于团队成员协作和实现敏捷开发。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 用chatgpt做架构设计&lt;/p&gt;
&lt;h1 id=&quot;用户故事&quot;&gt;&lt;a href=&quot;#用户故事&quot; class=&quot;headerlink&quot; title=&quot;用户故事&quot;&gt;&lt;/a&gt;用户故事&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们要开发一个系统，我们从用户故事开始，需要设计一个管</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="架构" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="chatgpt" scheme="https://oujun.work/tags/chatgpt/"/>
    
    <category term="架构设计" scheme="https://oujun.work/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL导出数据库文档</title>
    <link href="https://oujun.work/2023/02/24/PostgreSQL%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E6%A1%A3.html"/>
    <id>https://oujun.work/2023/02/24/PostgreSQL%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E6%A1%A3.html</id>
    <published>2023-02-24T12:16:00.000Z</published>
    <updated>2023-02-24T12:16:00.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql">DO $$ <span class="hljs-keyword">DECLARE</span><br>tab RECORD;<br>rec RECORD;<br><span class="hljs-keyword">BEGIN</span><br><br><span class="hljs-keyword">FOR</span>  tab <span class="hljs-keyword">IN</span> <span class="hljs-keyword">SELECT</span> schemaname<span class="hljs-operator">||</span><span class="hljs-string">&#x27;.&#x27;</span><span class="hljs-operator">||</span><span class="hljs-string">&#x27;&quot;&#x27;</span><span class="hljs-operator">||</span>tablename<span class="hljs-operator">||</span><span class="hljs-string">&#x27;&quot;&#x27;</span> <span class="hljs-keyword">AS</span> &quot;TBName&quot;,t.tablename,obj_description(c.oid) <span class="hljs-keyword">AS</span> &quot;Description&quot; <span class="hljs-keyword">FROM</span> pg_tables t <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> pg_class c <span class="hljs-keyword">ON</span> t.tablename <span class="hljs-operator">=</span> c.relname <span class="hljs-keyword">WHERE</span> t.schemaname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;public&#x27;</span> <span class="hljs-keyword">AND</span> t.tablename<span class="hljs-operator">!=</span><span class="hljs-string">&#x27;__EFMigrationsHistory&#x27;</span> LOOP<br>  RAISE NOTICE <span class="hljs-string">&#x27;表名：%&#x27;</span>,tab.&quot;TBName&quot;;<br>RAISE NOTICE <span class="hljs-string">&#x27;&#x27;</span>;<br>RAISE NOTICE <span class="hljs-string">&#x27;&gt; %&#x27;</span>,tab.&quot;Description&quot;;<br>RAISE NOTICE <span class="hljs-string">&#x27;&#x27;</span>;<br>RAISE notice <span class="hljs-string">&#x27;| 序号 | 字段名称 | 类型及长度 | 是否可空 | 注释 |&#x27;</span>;<br>    RAISE notice <span class="hljs-string">&#x27;|----|----|----|----|----|&#x27;</span>;<br><span class="hljs-keyword">FOR</span> rec <span class="hljs-keyword">IN</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">ROW_NUMBER</span> ( ) <span class="hljs-keyword">OVER</span> ( ) <span class="hljs-keyword">AS</span> 序号, A.attname <span class="hljs-keyword">AS</span> 字段名称, format_type ( A.atttypid, A.atttypmod ) <span class="hljs-keyword">AS</span> 类型及长度, A.attnotnull <span class="hljs-keyword">AS</span> 是否可空, col_description ( A.attrelid, A.attnum ) <span class="hljs-keyword">AS</span> 注释 <span class="hljs-keyword">FROM</span> pg_class <span class="hljs-keyword">AS</span> C, pg_attribute <span class="hljs-keyword">AS</span> A <span class="hljs-keyword">WHERE</span> C.relname <span class="hljs-operator">=</span> tab.&quot;tablename&quot; <span class="hljs-keyword">AND</span> A.attrelid <span class="hljs-operator">=</span> C.oid <span class="hljs-keyword">AND</span> A.attnum <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><br>LOOP<br>RAISE notice <span class="hljs-string">&#x27;| % | % | % | % | % |&#x27;</span>, rec.&quot;序号&quot;, rec.&quot;字段名称&quot;, rec.&quot;类型及长度&quot;, rec.&quot;是否可空&quot;, rec.&quot;注释&quot;;<br><span class="hljs-keyword">END</span> LOOP;<br>RAISE NOTICE <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">END</span> LOOP;<br><span class="hljs-keyword">END</span>;<br>$$ <span class="hljs-keyword">LANGUAGE</span> plpgsql;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="知识储备" scheme="https://oujun.work/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
    <category term="PostgreSQL" scheme="https://oujun.work/tags/PostgreSQL/"/>
    
    <category term="数据库文档" scheme="https://oujun.work/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch查询group by maxdate的一个写法</title>
    <link href="https://oujun.work/2023/02/14/ElasticSearch.01.html"/>
    <id>https://oujun.work/2023/02/14/ElasticSearch.01.html</id>
    <published>2023-02-14T02:19:02.000Z</published>
    <updated>2023-02-14T02:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>ElasticSearch如果只是用来做查询当然是很好的，但是往往还有很多需要用来做统计的地方，然而对于了解不深的人来说，有些查询很难去写，比如我们的一个需求是这样的</p><table><thead><tr><th>date</th><th>exportData.交易类型</th><th>exportData.业绩类型.keyword</th><th>jYCode</th><th>brokerId</th><th>exportData.订单总应收</th><th>exportData.成交价格</th><th>exportData.分边业绩</th></tr></thead><tbody><tr><td>2022-01-02</td><td>二手</td><td>正业绩</td><td>0000001</td><td>人员1</td><td>10086</td><td>1000000</td><td>100</td></tr><tr><td>2022-01-01</td><td>二手</td><td>正业绩</td><td>0000001</td><td>人员1</td><td>10088</td><td>1000000</td><td>150</td></tr><tr><td>2022-01-02</td><td>二手</td><td>正业绩</td><td>0000001</td><td>人员2</td><td>10086</td><td>1000000</td><td>8</td></tr><tr><td>2022-01-01</td><td>二手</td><td>正业绩</td><td>0000001</td><td>人员2</td><td>10088</td><td>1000000</td><td>0.5</td></tr></tbody></table><p>统计要求是这样的，先按照人员为分组单位，然后将业绩累加，然后按照时间倒序取最新一条的总计，这就涉及到一个group by 和group by 内部的查询，起初我用了scripted_metric，但是当我取10年的数据时如果是单字段还好，但是需求中涉及到20多个字段，那么就有了性能问题。</p><p>而且由于是 ElasticSearch6.x的限制，很多7以上的新API也无法使用，查阅多方资料加上ChatGPT进行修正后得到了一个性能相对好一些的写法。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs json">GET trans_performance_day_snapshot/_search<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;bool&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;must&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;term&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;companyId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>              <span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;range&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>              <span class="hljs-attr">&quot;gte&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2000-10-01&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;lte&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2077-01-01&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;time_zone&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;+08:00&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;format&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yyyy-MM-dd&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;brokerId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;terms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;brokerId&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">99999</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;brokerInfo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;top_hits&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;sort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>              <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                  <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;desc&quot;</span><br>                <span class="hljs-punctuation">&#125;</span><br>              <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;_source&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>              <span class="hljs-string">&quot;userOrganization.brokerName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.storeName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.storeLeaderName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.regionId&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.regionName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.regionLeaderName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.bigRegionId&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.bigRegionName&quot;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-string">&quot;userOrganization.bigRegionLeaderName&quot;</span><br>            <span class="hljs-punctuation">]</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;trade&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;terms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;exportData.交易类型.keyword&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;performanceType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>              <span class="hljs-attr">&quot;terms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;exportData.业绩类型.keyword&quot;</span><br>              <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>              <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;performance&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                  <span class="hljs-attr">&quot;sum&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;exportData.分边业绩&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;totalCount&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                  <span class="hljs-attr">&quot;cardinality&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jYCode&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;listingCommission&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">1</span> 这里，按照订单编号分组<br>                  <span class="hljs-attr">&quot;terms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jYCode&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                  <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;group_by_date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">2</span> 在按照时间分组<br>                      <span class="hljs-attr">&quot;terms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;date&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;order&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                          <span class="hljs-attr">&quot;max_date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;desc&quot;</span><br>                        <span class="hljs-punctuation">&#125;</span><br>                      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                      <span class="hljs-attr">&quot;aggs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;max_date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">3</span> 聚合出最大的日期的那条数据<br>                          <span class="hljs-attr">&quot;max&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                            <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;date&quot;</span><br>                          <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;sum_order_receivable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">4</span> 累加，但是因为只有一条数据，其实就是取值<br>                          <span class="hljs-attr">&quot;sum&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                            <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;exportData.订单总应收&quot;</span><br>                          <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;sum_transaction_price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">4</span> 累加，但是因为只有一条数据，其实就是取值<br>                          <span class="hljs-attr">&quot;sum&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                            <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;exportData.成交价格&quot;</span><br>                          <span class="hljs-punctuation">&#125;</span><br>                        <span class="hljs-punctuation">&#125;</span><br>                      <span class="hljs-punctuation">&#125;</span><br>                    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;sum_order_receivable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">5</span> 将这里是为了外层的统计，虽然也是累加，但是取值依然是订单编号中最新的那条数据的值<br>                      <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;group_by_date&gt;sum_order_receivable&quot;</span><br>                      <span class="hljs-punctuation">&#125;</span><br>                    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;sum_transaction_price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">5</span> 将这里是为了外层的统计，虽然也是累加，但是取值依然是订单编号中最新的那条数据的值<br>                      <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                        <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;group_by_date&gt;sum_transaction_price&quot;</span><br>                      <span class="hljs-punctuation">&#125;</span><br>                    <span class="hljs-punctuation">&#125;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;sum_order_receivable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">6</span> 在这里，才是是按照exportData.业绩类型.keyword 分组后  将改人员涉及到的每个订单中的最新一条数据中的值累加起来的和<br>                  <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;listingCommission&gt;sum_order_receivable&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;sum_transaction_price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">6</span> 在这里，才是是按照exportData.业绩类型.keyword 分组后 将改人员涉及到的每个订单中的最新一条数据中的值累加起来的和<br>                  <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;listingCommission&gt;sum_transaction_price&quot;</span><br>                  <span class="hljs-punctuation">&#125;</span><br>                <span class="hljs-punctuation">&#125;</span><br>              <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;sum_order_receivable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>  ## <span class="hljs-number">7</span> 在这里，是按照exportData.交易类型.keyword 分组后的 ##<span class="hljs-number">6</span> 这个步骤的值的和<br>              <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;performanceType&gt;sum_order_receivable&quot;</span><br>              <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;sum_transaction_price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> ## <span class="hljs-number">7</span> 在这里，是按照exportData.交易类型.keyword 分组后的 ##<span class="hljs-number">6</span> 这个步骤的值的和<br>              <span class="hljs-attr">&quot;sum_bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;buckets_path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;performanceType&gt;sum_transaction_price&quot;</span><br>              <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">&#125;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>上面内容的aggs与之对应的C#部分的代码如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">async</span> Task&lt;AggregationDictionary&gt; <span class="hljs-title">GenerateAggregationDictionary</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> groupByName, Field field, <span class="hljs-built_in">int</span> skip, <span class="hljs-built_in">int</span> take</span>)</span><br>&#123;<br>    <span class="hljs-keyword">var</span> aggs = <span class="hljs-keyword">new</span> AggregationDictionary();<br>    <span class="hljs-keyword">await</span> _elastic.IndexPutAsync&lt;StringResponse&gt;(IndexTypeName.PerformanceDaySnapshot, <span class="hljs-string">&quot;_settings&quot;</span>, PostData.String(<span class="hljs-string">&quot;&#123;\&quot;index.max_result_window\&quot;:99999,\&quot;index.max_inner_result_window\&quot;:99999&#125;&quot;</span>));<br>    <span class="hljs-keyword">await</span> _elastic.IndexPutAsync&lt;StringResponse&gt;(<span class="hljs-string">&quot;/_cluster&quot;</span>, <span class="hljs-string">&quot;_settings&quot;</span>, PostData.String(<span class="hljs-string">&quot;&#123; \&quot;persistent\&quot;: &#123; \&quot;search.max_buckets\&quot;: 99999 &#125;&#125;&quot;</span>));<br>    <span class="hljs-keyword">var</span> c_group = <span class="hljs-keyword">new</span> AggregationDictionary<br>    &#123;<br>        &#123;<br>            <span class="hljs-string">&quot;brokerInfo&quot;</span>,<br>                <span class="hljs-keyword">new</span> TopHitsAggregation(<span class="hljs-string">&quot;brokerInfo&quot;</span>)<br>                &#123;<br>                    Size = <span class="hljs-number">1</span>,<br>                    Sort = <span class="hljs-keyword">new</span> List&lt;ISort&gt;<br>                    &#123;<br>                        <span class="hljs-keyword">new</span> SortField &#123; Field = Infer.Field&lt;PerformanceDaySnapshot&gt;(p =&gt; p.Date), Order = SortOrder.Descending &#125;<br>                    &#125;,<br>                    Source = <span class="hljs-keyword">new</span> SourceFilter<br>                    &#123;<br>                        Includes = <span class="hljs-keyword">new</span>[] &#123;<br>                            <span class="hljs-string">&quot;userOrganization.brokerName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.storeId&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.storeName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.storeLeaderName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.regionId&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.regionName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.regionLeaderName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.bigRegionId&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.bigRegionName&quot;</span>,<br>                            <span class="hljs-string">&quot;userOrganization.bigRegionLeaderName&quot;</span><br>                        &#125;<br>                    &#125;<br>                &#125;<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;trade&quot;</span>,<br>                <span class="hljs-keyword">new</span> TermsAggregation(<span class="hljs-string">&quot;trade&quot;</span>)<br>                &#123;<br>                    Field = <span class="hljs-keyword">new</span> Field(<span class="hljs-string">&quot;exportData.交易类型.keyword&quot;</span>),<br>                    Aggregations = <span class="hljs-keyword">new</span> TermsAggregation(<span class="hljs-string">&quot;performanceType&quot;</span>)<br>                    &#123;<br>                        Field = <span class="hljs-keyword">new</span> Field(<span class="hljs-string">&quot;exportData.业绩类型.keyword&quot;</span>),<br>                        Aggregations =<br>                            <span class="hljs-keyword">new</span> SumAggregation(<span class="hljs-string">&quot;performance&quot;</span>, <span class="hljs-keyword">new</span> Field(<span class="hljs-string">&quot;exportData.分边业绩&quot;</span>)) &#123; Missing = <span class="hljs-number">0</span> &#125;<br>                            &amp;&amp; <span class="hljs-keyword">new</span> CardinalityAggregation(<span class="hljs-string">&quot;totalCount&quot;</span>, Infer.Field&lt;PerformanceDaySnapshot&gt;(f=&gt;f.JYCode))<br>                            &amp;&amp; <span class="hljs-keyword">new</span> TermsAggregation(<span class="hljs-string">&quot;listingCommission&quot;</span>)<br>                            &#123;<br>                                Field = Infer.Field&lt;PerformanceDaySnapshot&gt;(f=&gt;f.JYCode),<br>                                Aggregations = <span class="hljs-keyword">new</span> TermsAggregation(<span class="hljs-string">&quot;group_by_date&quot;</span>)<br>                                &#123;<br>                                    Field = Infer.Field&lt;PerformanceDaySnapshot&gt;(f=&gt;f.Date),<br>                                    Order = <span class="hljs-keyword">new</span> TermsOrder[]<br>                                    &#123;<br>                                        <span class="hljs-keyword">new</span> TermsOrder &#123; Key = <span class="hljs-string">&quot;max_date&quot;</span>, Order = SortOrder.Descending &#125;<br>                                    &#125;,<br>                                    Aggregations = <span class="hljs-keyword">new</span> MaxAggregation(<span class="hljs-string">&quot;max_date&quot;</span>, Infer.Field&lt;PerformanceDaySnapshot&gt;(f=&gt;f.Date))<br>                                                   &amp;&amp; <span class="hljs-keyword">new</span> SumAggregation(<span class="hljs-string">&quot;sum_order_receivable&quot;</span>, <span class="hljs-keyword">new</span> Field(<span class="hljs-string">&quot;exportData.订单总应收&quot;</span>))<br>                                                   &amp;&amp; <span class="hljs-keyword">new</span> SumAggregation(<span class="hljs-string">&quot;sum_transaction_price&quot;</span>, <span class="hljs-keyword">new</span> Field(<span class="hljs-string">&quot;exportData.成交价格&quot;</span>))<br>                                &#125;<br>                                &amp;&amp; <span class="hljs-keyword">new</span> SumBucketAggregation(<span class="hljs-string">&quot;sum_order_receivable&quot;</span>, <span class="hljs-keyword">new</span> SingleBucketsPath(<span class="hljs-string">&quot;group_by_date&gt;sum_order_receivable&quot;</span>))<br>                                &amp;&amp; <span class="hljs-keyword">new</span> SumBucketAggregation(<span class="hljs-string">&quot;sum_transaction_price&quot;</span>, <span class="hljs-keyword">new</span> SingleBucketsPath(<span class="hljs-string">&quot;group_by_date&gt;sum_transaction_price&quot;</span>))<br>                            &#125;<br>                            &amp;&amp; <span class="hljs-keyword">new</span> SumBucketAggregation(<span class="hljs-string">&quot;commission&quot;</span>, <span class="hljs-keyword">new</span> SingleBucketsPath(<span class="hljs-string">&quot;listingCommission&gt;sum_order_receivable&quot;</span>))<br>                            &amp;&amp; <span class="hljs-keyword">new</span> SumBucketAggregation(<span class="hljs-string">&quot;transactionPrice&quot;</span>, <span class="hljs-keyword">new</span> SingleBucketsPath(<span class="hljs-string">&quot;listingCommission&gt;sum_transaction_price&quot;</span>))<br>                    &#125;<br>                &#125;<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;c_bucket_sort&quot;</span>,<br>            <span class="hljs-keyword">new</span> BucketSortAggregation(<span class="hljs-string">&quot;c_bucket_sort&quot;</span>)<br>            &#123;<br>                From = skip, <span class="hljs-comment">//分页skip</span><br>                Size = take  <span class="hljs-comment">//分页take</span><br>            &#125;<br>        &#125;<br>    &#125;;<br><br>    aggs.Add(<span class="hljs-string">&quot;item_count&quot;</span>, <span class="hljs-keyword">new</span> CardinalityAggregation(<span class="hljs-string">&quot;item_count&quot;</span>, <span class="hljs-keyword">new</span> Field(groupByName))); <span class="hljs-comment">//group by 中的totalCount</span><br>    aggs.Add(groupByName, <span class="hljs-keyword">new</span> TermsAggregation(groupByName)<br>    &#123;<br>        Field = field,<span class="hljs-comment">//group by 的列</span><br>        Size = <span class="hljs-number">10000</span>,<br>        Aggregations = c_group<br>    &#125;);<br>    <span class="hljs-keyword">return</span> aggs;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ElasticSearch如果只是用来做查询当然是很好的，但是往往还有很多需要用来做统计的地方，然而对于了解不深的人来说，有些查询很难去写，比如我们的一个需求是这样的&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;date&lt;/th&gt;
&lt;th&gt;exportData</summary>
      
    
    
    
    <category term="知识储备" scheme="https://oujun.work/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
    <category term="ElasticSearch" scheme="https://oujun.work/tags/ElasticSearch/"/>
    
    <category term="聚合桶" scheme="https://oujun.work/tags/%E8%81%9A%E5%90%88%E6%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>Freenow申请的域名申请letsencrypt证书的方法</title>
    <link href="https://oujun.work/2022/12/23/freenom-and-letsencrypt.html"/>
    <id>https://oujun.work/2022/12/23/freenom-and-letsencrypt.html</id>
    <published>2022-12-23T06:24:02.000Z</published>
    <updated>2022-12-29T03:07:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>freenow申请的域名，直接使用进行<code>cloudflare</code>解析是可以的，但是申请证书的时候却无法直接使用<code>certbot/dns-cloudflare</code>选择dns的方式直接通过api申请和续期。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs log">Saving debug log to /var/log/letsencrypt/letsencrypt.log<br><br>How would you like to authenticate with the ACME CA?<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>1: Obtain certificates using a DNS TXT record (if you are using Cloudflare for<br>DNS). (dns-cloudflare)<br>2: Spin up a temporary webserver (standalone)<br>3: Place files in webroot directory (webroot)<br>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -<br>Select the appropriate number [1-3] then [enter] (press &#x27;c&#x27; to cancel): 1<br>Requesting a certificate for *.****.**<br>Encountered CloudFlareAPIError adding TXT record: 1038 You cannot use this API for domains with a .cf, .ga, .gq, .ml, or .tk TLD (top-level domain). To configure the DNS settings for this domain, use the Cloudflare Dashboard.<br>Error communicating with the Cloudflare API: You cannot use this API for domains with a .cf, .ga, .gq, .ml, or .tk TLD (top-level domain). To configure the DNS settings for this domain, use the Cloudflare Dashboard.<br>Ask for help or search for solutions at https://community.letsencrypt.org. See the logfile /var/log/letsencrypt/letsencrypt.log or re-run Certbot with -v for more details.<br></code></pre></td></tr></table></figure><p>只能通过手动添加txt解析记录的方式进行证书申请。</p><p>我选择了使用acme的申请方式进行申请，但是依然无法做到全自动，因为上面提到了，cloudflare的api不能对<code>.cf, .ga, .gq, .ml, or .tk TLD (top-level domain).</code>顶级域名进行api申请。</p><p>由于不喜欢在服务器上安装东西，所以还是采用docker的方式。</p><h1 id="第一步：编写docker-compose-yml"><a href="#第一步：编写docker-compose-yml" class="headerlink" title="第一步：编写docker-compose.yml"></a>第一步：编写docker-compose.yml</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">nginx:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">nginx:alpine</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shanghai</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;443:443&quot;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config/nginx/nginx/nginx.conf:/etc/nginx/nginx.conf:ro</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config/nginx/nginx/conf.d:/etc/nginx/conf.d</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config/nginx/www/html:/usr/share/nginx/html</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./letsencrypt/etc/:/etc/letsencrypt/</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/dev/shm/:/dev/shm/</span><br>  <span class="hljs-attr">acme.sh:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">neilpang/acme.sh:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">acme.sh</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">daemon</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./acmeout:/acme.sh</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config/nginx/www/html:/www</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./letsencrypt/etc/live:/letsencrypt</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/var/run/docker.sock:/var/run/docker.sock</span><br></code></pre></td></tr></table></figure><p><code>nginx</code>容器挂载的解释：</p><ul><li><code>./config/nginx/nginx/nginx.conf:/etc/nginx/nginx.conf:ro</code> 是默认的<code>nginx.conf</code>文件的映射</li><li><code>./config/nginx/nginx/conf.d:/etc/nginx/conf.d</code> 是网站配置文件的路径，也就是nginx.conf 中include部分的路径</li><li><code>./config/nginx/www/html:/usr/share/nginx/html</code> 默认的网页文件存放路径</li><li><code>./letsencrypt/etc/:/etc/letsencrypt/</code> 证书存放路径</li></ul><p><code> acme.sh</code>容器挂载的解释：</p><ul><li><code>./acmeout:/acme.sh</code> acme.sh 执行文件的路径</li><li><code>./config/nginx/www/html:/www</code> nginx中网页文件的路径，申请证书时使用<code>--webroot</code>方便</li><li><code>- ./letsencrypt/etc/live:/letsencrypt</code> 证书路径，方便存放</li></ul><h1 id="第二步：启动容器"><a href="#第二步：启动容器" class="headerlink" title="第二步：启动容器"></a>第二步：启动容器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker-compose up -d<br>docker exec acme.sh --set-default-ca --server letsencrypt<br></code></pre></td></tr></table></figure><h1 id="第三步：申请证书"><a href="#第三步：申请证书" class="headerlink" title="第三步：申请证书"></a>第三步：申请证书</h1><p>由于acme.sh不会自动创建路径，所以我们在申请证书前需要手动创建路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p ./letsencrypt/etc/live/google.域名<br></code></pre></td></tr></table></figure><p>然后再申请证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec acme.sh --issue -d google.域名 --standalone /www --key-file /letsencrypt/google.域名/privkey.pem --fullchain-file /letsencrypt/google.域名/fullchain.pem --keylength 4096<br></code></pre></td></tr></table></figure><p>为了方便申请，我们写一个脚本来执行上面的两个步骤</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p ./letsencrypt/etc/live/$1<br>docker exec acme.sh --issue -d $1 --standalone /www --key-file /letsencrypt/$1/privkey.pem --fullchain-file /letsencrypt/$1/fullchain.pem --keylength 4096<br></code></pre></td></tr></table></figure><p>保存为<code>regssl.sh</code>,我们再使用的时候就可以<code>bash regssl.sh google.域名</code>的方式使用了。<br>[update] 这里申请方式用webroot修改为standalone，我把nginx的80端口映射去掉了，我的nginx只开放443端口，从而把80端口留给acme来专门申请证书使用。</p><h1 id="第四步：编写网站的conf文件"><a href="#第四步：编写网站的conf文件" class="headerlink" title="第四步：编写网站的conf文件"></a>第四步：编写网站的conf文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>    server_name google.域名;<br>    listen 443 ssl http2;<br>    ssl_certificate /etc/letsencrypt/live/google.域名/fullchain.pem; <br>    ssl_certificate_key /etc/letsencrypt/live/google.域名/privkey.pem; <br>    location / &#123;<br>        proxy_pass https://www.google.com;<br>        proxy_redirect https://www.google.com https://google.域名;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker restart nginx<br></code></pre></td></tr></table></figure><h1 id="第五步：设置自动更新证书"><a href="#第五步：设置自动更新证书" class="headerlink" title="第五步：设置自动更新证书"></a>第五步：设置自动更新证书</h1><p><code>crontab -e</code><br>添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cron">44 0 * * * docker exec acme.sh --cron<br></code></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>不能申请泛域名证书</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;freenow申请的域名，直接使用进行&lt;code&gt;cloudflare&lt;/code&gt;解析是可以的，但是申请证书的时候却无法直接使用&lt;code&gt;certbot/dns-cloudflare&lt;/code&gt;选择dns的方式直接通过api申请和续期。&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="运维" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Freenom" scheme="https://oujun.work/tags/Freenom/"/>
    
    <category term="SSL证书" scheme="https://oujun.work/tags/SSL%E8%AF%81%E4%B9%A6/"/>
    
    <category term="letsencrypt" scheme="https://oujun.work/tags/letsencrypt/"/>
    
    <category term="免费顶级域名" scheme="https://oujun.work/tags/%E5%85%8D%E8%B4%B9%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>C# 遗传算法：文字匹配</title>
    <link href="https://oujun.work/2022/12/06/WordMatchGeneticAlgorithm.html"/>
    <id>https://oujun.work/2022/12/06/WordMatchGeneticAlgorithm.html</id>
    <published>2022-12-06T06:06:02.000Z</published>
    <updated>2022-12-06T06:52:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="遗传算法"><a href="#遗传算法" class="headerlink" title="遗传算法"></a>遗传算法</h1><blockquote><p>遗传算法（Genetic Algorithm，GA）最早是由美国的 John holland于20世纪70年代提出,该算法是根据大自然中生物体进化规律而设计提出的。是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。该算法通过数学的方式,利用计算机仿真运算,将问题的求解过程转换成类似生物进化中的染色体基因的交叉、变异等过程。在求解较为复杂的组合优化问题时,相对一些常规的优化算法,通常能够较快地获得较好的优化结果。遗传算法已被人们广泛地应用于组合优化、机器学习、信号处理、自适应控制和人工生命等领域。</p><p>————摘自《<a href="https://baike.baidu.com/item/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/838140">百度百科</a>》</p></blockquote><p>有一个有趣的小趣闻，一只猴子在打字机上乱敲，如果可以时间无限，那么他可能在某一个时间点，敲出来一套完整的《莎士比亚》全集，猴子敲键盘有随机性的，那么我们增加猴子的数量，就有可能缩短时间。</p><p>我们不需要一套完整的《莎士比亚》，使用编程，我们可以用一个简单的句子来模拟这个实验。</p><h1 id="遗传算法的步骤"><a href="#遗传算法的步骤" class="headerlink" title="遗传算法的步骤"></a>遗传算法的步骤</h1><pre><code class=" mermaid">flowchart TD  A[编码] --&gt; B[初始化种群]  B --&gt; C[评估种群中的个体适应度]  C --&gt; D[选择优秀个体]  D --&gt; E[杂交]  E --&gt; F[变异]  F --&gt; G&#123;种群中的最优个体&#125;  G -- 不匹配 --&gt;C  G -- 完全匹配 --&gt;Q[结束]</code></pre><h1 id="创造猴子"><a href="#创造猴子" class="headerlink" title="创造猴子"></a>创造猴子</h1><p>种群中的每一个个体都是一个猴子，也可以说是一个染色体，染色体中的基因片段就是猴子敲出来的随机字符，我们给定了基因片段的长度，让猴子每次只能敲出这些字符，算出适应度，也就是匹配度。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">GAConsoleApp</span>;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 染色体（猴子）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Chromosome</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 基因片段</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">char</span>[] Genes &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 适应度</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Fitness &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;length&quot;&gt;</span>基因长度<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Chromosome</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> length</span>)</span><br>    &#123;<br>        Genes = <span class="hljs-keyword">new</span> <span class="hljs-built_in">char</span>[length];<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CalcFitness</span>(<span class="hljs-params">Func&lt;Chromosome, <span class="hljs-built_in">double</span>&gt; action</span>)</span><br>    &#123;<br>        Fitness = action.Invoke(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="初始化种群"><a href="#初始化种群" class="headerlink" title="初始化种群"></a>初始化种群</h1><p>种群数量，也就是要有多少只猴子，种群，就是把这些猴子都集中到一起，然后把种群进行初始化，创建出一定数量的猴子。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 种群数量</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _populationSize;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 种群</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; Population &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> DNA长度</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _dnaSize;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 从匹配度中选中匹配度最高的多少个作为下一代的父母</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _selectionCount;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Random random;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">char</span>[] _target;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 文字匹配遗传算法</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;populationSize&quot;&gt;</span>种群数量，越多匹配出的越快（人多力量大），但是速度越慢（人多不好统计）<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span>要匹配出的目标字符串<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;selectionCount&quot;&gt;</span>每次进化选出多少个作为父母种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">WordMatchGeneticAlgorithm</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> populationSize, <span class="hljs-built_in">string</span> target, <span class="hljs-built_in">int</span> selectionCount = <span class="hljs-number">50</span></span>)</span><br>&#123;<br>    _populationSize = populationSize;<br>    Population = <span class="hljs-keyword">new</span> List&lt;Chromosome&gt;();<br>    _dnaSize = target.Length;<br>    _target = target.ToArray();<br>    random = <span class="hljs-keyword">new</span> Random();<br>    _selectionCount = selectionCount;<br>    InitialPopulation();<br>&#125;<br><br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 种群初始化</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">InitialPopulation</span>()</span><br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _populationSize; i++)<br>        Population.Add(<span class="hljs-keyword">new</span> Chromosome(_dnaSize)<br>        &#123;<br>            Genes = Enumerable.Range(<span class="hljs-number">0</span>, _dnaSize).Select((t, i) =&gt; Gene).ToArray()<br>        &#125;);<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 基因</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">private</span> <span class="hljs-built_in">char</span> Gene =&gt; (<span class="hljs-built_in">char</span>)random.Next(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>);<br></code></pre></td></tr></table></figure><h1 id="评估适应度"><a href="#评估适应度" class="headerlink" title="评估适应度"></a>评估适应度</h1><p>文字匹配是遗传算法中我个人认为最简单的一种了，适应度匹配也就是让基因片段与我们的目标片段每一个位置都能对应上，对应上的数量越多，匹配度就越高。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 计算匹配度</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Fitness</span>()</span><br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _populationSize; i++)<br>        Population[i].CalcFitness(t =&gt; t.Genes.Select((d, idx) =&gt; d == _target[idx]).Where(t =&gt; t).Count());<br>    <span class="hljs-keyword">return</span> Population;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h1><p> 选出匹配度最高的N个个体作为接下来交叉使用的群体。也就是选出猴子敲出来的字符里面与目标最接近的个体。</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 选择最优种群</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Selection</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> Fitness().OrderByDescending(t =&gt; t.Fitness).Skip(<span class="hljs-number">0</span>).Take(_selectionCount).ToList();<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="交叉"><a href="#交叉" class="headerlink" title="交叉"></a>交叉</h1><p>这里采用的是随机取基因中的某个片段进行交叉生成一个新的个体，注释的部分是有些算法中带有这个交叉概率，模拟更真实的进化。所作的就是把猴子敲出来的最好的个体中随机取出两个，把他们中间的一些字符对调成一个新的内容。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 随机交叉（杂交）</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;parents&quot;&gt;</span>筛选出的最优种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">CrossOver</span>(<span class="hljs-params">List&lt;Chromosome&gt; parents</span>)</span><br>&#123;<br>    List&lt;Chromosome&gt; children = <span class="hljs-keyword">new</span>();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> k = <span class="hljs-number">0</span>; k &lt; _populationSize; k++)<br>    &#123;<br>        <span class="hljs-comment">//if (random.NextDouble() &lt; 0.04) //交叉概率</span><br>        <span class="hljs-comment">//&#123;</span><br>        Chromosome f = parents[random.Next(_selectionCount)];<br>        Chromosome m = parents[random.Next(_selectionCount)];<br><br>        Chromosome newChild = <span class="hljs-keyword">new</span>(_dnaSize);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _dnaSize; i++)<br>            newChild.Genes[i] = random.Next(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>) == <span class="hljs-number">1</span> ? f.Genes[i] : m.Genes[i];<br>        children.Add(newChild);<br>        <span class="hljs-comment">//&#125;</span><br>        <span class="hljs-comment">//else</span><br>        <span class="hljs-comment">//&#123;</span><br>        <span class="hljs-comment">//    children.Add(Population[k]);</span><br>        <span class="hljs-comment">//&#125;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> children;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="变异"><a href="#变异" class="headerlink" title="变异"></a>变异</h1><p>我们人为的把猴子敲出的字符中的某一个换成一个新的随机字符，让它有几率更接近我们的目标。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 变异</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;children&quot;&gt;</span>杂交后的新种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Mutation</span>(<span class="hljs-params">List&lt;Chromosome&gt; children</span>)</span><br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; children.Count; i++)<br>        <span class="hljs-keyword">if</span> (random.NextDouble() &lt;= <span class="hljs-number">0.1</span>)<br>            children[i].Genes[random.Next(_dnaSize)] = Gene;<br>    <span class="hljs-keyword">return</span> children;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="进化过程"><a href="#进化过程" class="headerlink" title="进化过程"></a>进化过程</h1><p>这个过程就是，选择-&gt;交叉-&gt;变异。不断的重复。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 进化</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Evolve</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> parents = Selection();<br>    <span class="hljs-keyword">var</span> children = CrossOver(parents);<br>    Population = Mutation(children);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="完整的代码"><a href="#完整的代码" class="headerlink" title="完整的代码"></a>完整的代码</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 文字匹配遗传算法</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">WordMatchGeneticAlgorithm</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 种群数量</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _populationSize;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 种群</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> List&lt;Chromosome&gt; Population &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> DNA长度</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _dnaSize;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 从匹配度中选中匹配度最高的多少个作为下一代的父母</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _selectionCount;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Random random;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">char</span>[] _target;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 文字匹配遗传算法</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;populationSize&quot;&gt;</span>种群数量，越多匹配出的越快（人多力量大），但是速度越慢（人多不好统计）<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span>要匹配出的目标字符串<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;selectionCount&quot;&gt;</span>每次进化选出多少个作为父母种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">WordMatchGeneticAlgorithm</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> populationSize, <span class="hljs-built_in">string</span> target, <span class="hljs-built_in">int</span> selectionCount = <span class="hljs-number">50</span></span>)</span><br>    &#123;<br>        _populationSize = populationSize;<br>        Population = <span class="hljs-keyword">new</span> List&lt;Chromosome&gt;();<br>        _dnaSize = target.Length;<br>        _target = target.ToArray();<br>        random = <span class="hljs-keyword">new</span> Random();<br>        _selectionCount = selectionCount;<br>        InitialPopulation();<br>    &#125;<br><br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 种群初始化</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">InitialPopulation</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _populationSize; i++)<br>            Population.Add(<span class="hljs-keyword">new</span> Chromosome(_dnaSize)<br>            &#123;<br>                Genes = Enumerable.Range(<span class="hljs-number">0</span>, _dnaSize).Select((t, i) =&gt; Gene).ToArray()<br>            &#125;);<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">char</span> Gene =&gt; (<span class="hljs-built_in">char</span>)random.Next(<span class="hljs-number">32</span>, <span class="hljs-number">127</span>);<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 计算匹配度</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Fitness</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _populationSize; i++)<br>            Population[i].CalcFitness(t =&gt; t.Genes.Select((d, idx) =&gt; d == _target[idx]).Where(t =&gt; t).Count());<br>        <span class="hljs-keyword">return</span> Population;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 选择最优种群</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Selection</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> Fitness().OrderByDescending(t =&gt; t.Fitness).Skip(<span class="hljs-number">0</span>).Take(_selectionCount).ToList();<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 随机交叉（杂交）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;parents&quot;&gt;</span>筛选出的最优种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">CrossOver</span>(<span class="hljs-params">List&lt;Chromosome&gt; parents</span>)</span><br>    &#123;<br>        List&lt;Chromosome&gt; children = <span class="hljs-keyword">new</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> k = <span class="hljs-number">0</span>; k &lt; _populationSize; k++)<br>        &#123;<br>            <span class="hljs-comment">//if (random.NextDouble() &lt; 0.04) //交叉概率</span><br>            <span class="hljs-comment">//&#123;</span><br>            Chromosome f = parents[random.Next(_selectionCount)];<br>            Chromosome m = parents[random.Next(_selectionCount)];<br><br>            Chromosome newChild = <span class="hljs-keyword">new</span>(_dnaSize);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; _dnaSize; i++)<br>                newChild.Genes[i] = random.Next(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>) == <span class="hljs-number">1</span> ? f.Genes[i] : m.Genes[i];<br>            children.Add(newChild);<br>            <span class="hljs-comment">//&#125;</span><br>            <span class="hljs-comment">//else</span><br>            <span class="hljs-comment">//&#123;</span><br>            <span class="hljs-comment">//    children.Add(Population[k]);</span><br>            <span class="hljs-comment">//&#125;</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> children;<br>    &#125;<br><br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 变异</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;children&quot;&gt;</span>杂交后的新种群<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Chromosome&gt; <span class="hljs-title">Mutation</span>(<span class="hljs-params">List&lt;Chromosome&gt; children</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; children.Count; i++)<br>            <span class="hljs-keyword">if</span> (random.NextDouble() &lt;= <span class="hljs-number">0.1</span>)<br>                children[i].Genes[random.Next(_dnaSize)] = Gene;<br>        <span class="hljs-keyword">return</span> children;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 最优解</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Best</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> fitness = Population.OrderByDescending(x =&gt; x.Fitness).First();<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Concat(fitness.Genes);<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 进化</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Evolve</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> parents = Selection();<br>        <span class="hljs-keyword">var</span> children = CrossOver(parents);<br>        Population = Mutation(children);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="模拟开始"><a href="#模拟开始" class="headerlink" title="模拟开始"></a>模拟开始</h1><p>创建一个10000只猴子的种群，每次选择取1&#x2F;3的最优个体，进行10000次的进化。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System.Diagnostics;<br>Stopwatch stopwatch = Stopwatch.StartNew();<br><br><span class="hljs-keyword">var</span> target = <span class="hljs-string">&quot;It was the best of times, it was blurst of times (It was the best of times, it was worst of times) .&quot;</span>;<br><br>WordMatchGeneticAlgorithm ga = <span class="hljs-keyword">new</span>(<span class="hljs-number">10000</span>, target, <span class="hljs-number">10000</span> / <span class="hljs-number">3</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++)<br>&#123;<br>    <span class="hljs-keyword">var</span> gen = i + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">var</span> best = ga.Best();<br>    <span class="hljs-keyword">if</span> (best == target)<br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;gen&#125;</span>\t<span class="hljs-subst">&#123;best&#125;</span>\t成功&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;gen&#125;</span>\t<span class="hljs-subst">&#123;best&#125;</span>&quot;</span>);<br>    ga.Evolve();<br>&#125;<br>stopwatch.Stop();<br>Console.WriteLine(<span class="hljs-string">$&quot;耗时:<span class="hljs-subst">&#123;stopwatch.ElapsedMilliseconds / <span class="hljs-number">1000.0</span>&#125;</span>秒&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">1       ;`&lt;jGnQ<span class="hljs-variable">$Jy</span>%zTc$:aZ+f]P-*FNah1_=,PeV`N)&lt;zf*~xP!jl&#125;4v<span class="hljs-variable">$nYIbHN7IL</span>&gt;W`A+E)o&gt;FXNbe15G&lt;~@Ga?eb9%5E,dngGW6ed~<br>2       [`Ei,&lt;T6SK6N6AeY:y, !SVta&#123;[aIFRR kE;k<span class="hljs-comment">#7liT|]~+G:Pp&#125;^@h@zw%o`JmCjiJ]KUXO6OEeLJ|0V_ZjVX5vh&lt;@1FgDQ&lt;|oZP</span><br>3       .rxh)2&#125;5%n!<span class="hljs-variable">$ba_EM99r</span>)m1M7OS_=w&#123;gv[?ursgL^c4HFHIf<span class="hljs-string">&quot;I.F,2p7Z`m:p/\1\78dg 5l&amp;s6cML9zr8 1v:/L-on|ag&#125;s LYg</span><br><span class="hljs-string">4       t&amp;0PF3XF9IXb9a%&#x27;Yfs~PP+qJ &gt;&lt;mTZ&#125;ccl-zDnKxdK&lt;\Ii3q%6&gt;R`&#125;ny&#125;o!tSfhj7S-0.jU8qy(Y(]3-5I-8&gt;`txSU2Cim~&gt;\@q</span><br><span class="hljs-string">5       Ib X<span class="hljs-variable">$d</span>[.7JY4&amp;Ut Rm=O*Yd.m=UM&#x27;?AsM:lhl*bKlJ&lt;RIT&quot;</span>&lt;r&gt;H5M :sJ9&#123;`=gL,t\[D7w[4a p<span class="hljs-string">&#x27;&#125;B n&lt;s73!bI0e1&#125;xJoZK&gt;\L&#125;</span><br><span class="hljs-string">6       6!l&quot;?2Mg(4BlEIC[o;*Ns]&#x27;</span> <span class="hljs-variable">$_veeUt</span>&lt;IzyEalQt+f&gt;!smkW (,s\+x6Z,KiG66swPt^(<span class="hljs-string">&#x27;&#125;~irLpisHdHx,8Tr-A ,&#125;cn0O@Mx#2</span><br><span class="hljs-string">7       -u9:T 5XLOV%&gt;Lef3f(mitAc hJO@&#x27;</span>N&#125; o?u\w&amp;:JC&amp;,6jfTB8dt=w;os!h<span class="hljs-comment">#:!2&gt;+ e,0)ibk(-dtV )gfQ[e@&#x27;KT7-q&gt;iX&gt;VtWY</span><br>8       oL-Ym%V7g/^V`ZtSjO.r<span class="hljs-comment">#C:A,p:HYhT/4RBKrR]%Q^%AAT$N &gt;r~\&quot;&quot;mFdA%nC.&gt;7r*fpeF-jN,3gIbwa,\^,Bm%UQ -oP&#123;e`) Y</span><br>9       s:o<span class="hljs-string">&quot;a5n9z1~wS&gt;UdoP&gt;v&amp;H&lt;oqp?S;|a64tyuEJz&lt;=[hiN&#123;w&#123;C&#123;\~hBKmQnhJKTc h xf5tYEOa1 q5;Qnnx%o6#,P.WE]_m&lt;k) \</span><br><span class="hljs-string">10      ItF&#x27;@/-tGe y|WttOogqX*e,jvi5 /f)gG&quot;</span>.7sy[-D6[du3~:(yt Iws&#123;tRh|GWsz=q\ qUc]s<span class="hljs-variable">$q</span>:yfQs9b6ErP&#125;+of/PONemcMR<br>11      N?BwEE-&lt;hf7b$(t\of kAveUc %HG&#125;aJ co.rnsKoP?8xdeZ /WrtwOsFm`emr&amp; 3!M4Ti6;eM,rZg <span class="hljs-string">&quot;o9# EWs.&#123;%,ht]Igr)go</span><br><span class="hljs-string">12      Y``ww_[9%eVx;vtCoc Z4OVy3e:v /=O M[Mr[B of(t?4)sp(It &amp;ms Tho&gt;&lt;eQbHXv =ames/Dut*FfiVNoysU )%:t]meKX &amp;</span><br><span class="hljs-string">13      &amp;t!has[a&#125;T~bY0t df tiUzgbb[G wa3jw[qt7t[q2 &#x27;<span class="hljs-variable">$A</span>*s 9I&lt; wnbYtC+<span class="hljs-variable">$9e</span>&quot;</span>;?4S dAme&#123;x4P  iasK:B2Jt7o4T9,~es)C~<br>14      &amp;k dalB^4eNbe2Sgop6+?mfgR.&amp;u uf@g~ST&lt;sgko;ptH]9<span class="hljs-variable">$B</span>(2tLP!sb<span class="hljs-string">&quot;|,jx4s% o&#125;1tfOOfT 30 nLs :o4Zt&lt;ExR0%F]sz .</span><br><span class="hljs-string">15      <span class="hljs-variable">$1</span>-was&#125;Jh|Nbes! ofE&gt;im0s7&#x27;#tf!-;/bl_rsM`iY t6me*\ottM*1? ~hj7bev[ ot tGmeDf Stewa&amp;!FoBs;\p@S;i^~sr3.</span><br><span class="hljs-string">16      y] Mayz`h3 b1at ov timeK, TeXHa^BKlX6st 6f4-d<span class="hljs-variable">$esvdIt</span> ,&#x27;oqthe &lt;qstck# FJmeF,oiTjTa,kw=rst 7f tPdeaTO&#123;</span><br><span class="hljs-string">17      wtlnxs*th( b^dt 11H&quot;</span>iVeA7 5t6cBRM59u&#125;sSvTfBtlmesaB=Gsww-Vt+e.Hesg Lfp-tqbZ<span class="hljs-comment">#`it :asN&#x27;Mrst ~f&amp;yRm_6( .</span><br>18      ntWt!s HLe bdrJ opctiCe],U0t wa8jklwuIt O_ wEme8 AUt wbsK=X&#125; 9eTr zA ji+es,^gA &#125;a/awFXstjFI B=meZ) z<br>19      IQkwas thg ueUtb<span class="hljs-string">&#x27;f tikes, 3S UaJfS5urC&quot;qef&#125;\4m]e ?It was the]b\&quot;~ oJ ti&#123;eJFMi$iwLsKmAAOt7\B timHs)/.</span><br><span class="hljs-string">20      I4Bwas the bO\tTzf 5ime&gt;, it~wT* &#123;lur*tRofntimes (&#x27;</span>t wWs 9ne be5a oD ylGes\ /H Ta$&gt;Gou*tp,fUtiBm8wy.<br>21      It wavSthe beNtjof ti.e(, it waApblrrs?^of tgf-[ 0,t ya&#123;)Uhe se8u rf timesm;;tqna0.wo@sE YN <span class="hljs-comment">#ames)|:</span><br>22      Ir w6s th; bOs&amp; o_9time0, |J was91lur<span class="hljs-comment">#. of&gt;tqmesE(et was q?e be&#125;/ oE times,4iGLPashwdrst/]f (imes) .</span><br>23      It\fFs t^( yOs&#125; o9%timesK]iQ8wassbluUst of t`mer (st<span class="hljs-string">&#x27;was t&lt;e b&gt;sc o6 ti$\s, it ]asGworbt of tikbs) .</span><br><span class="hljs-string">24      St w+s the b-sX=of tiUds, it das &#123;lurst of 9imeH (_t was qhe best Et3timus,Tie w&amp;s&gt;worst ,&#125; tim=rP .</span><br><span class="hljs-string">25      It was tS7qbe~V=of tKmes, 8t wasp~luvst Lf tim9sD(St w$s the bes: ,@Tti/es, it wasSworstGof tiHesw .</span><br><span class="hljs-string">26      It -asIthe Mpwt ol uimeV, it was blurst of#1imesu(|t was the bhst o2 times,  t was qorst )f time1) J</span><br><span class="hljs-string">27      I] was the best of times, it was blurst of times (Itiw[sbthe best o6jtimes] it was wpIst  f tEmes) .</span><br><span class="hljs-string">28      It wa&quot; the best o&#x27;</span> tiUes, itLwOs blur6t of <span class="hljs-built_in">times</span> (IFxwas the besc of yimVs, iD was worst of <span class="hljs-built_in">times</span>)A.<br>29      It was the b`*t of <span class="hljs-built_in">times</span>, itlVas blur(t of tymes (ItUwas the best of Eimes, it was wTSst of :imes)Q.<br>30      It _as the best of tiQes, itEwas blurst of <span class="hljs-built_in">times</span> (It was the %est of <span class="hljs-built_in">times</span>, it was yorQt [f aieeg) .<br>31      It was tLe best of <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It was the nkst of <span class="hljs-built_in">times</span>, it was wonst o3 <span class="hljs-built_in">times</span>) .<br>32      It was the best of <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It 6as the best of tiMes, it was worst of <span class="hljs-built_in">times</span>) .<br>33      It wab the best of <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It was  he best of <span class="hljs-built_in">times</span>, it[was worst of <span class="hljs-built_in">times</span>) .<br>34      It was the bestoof <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It was the best of <span class="hljs-built_in">times</span>, it was worst of <span class="hljs-built_in">times</span>) .<br>35      It was`the best of <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It was the best of <span class="hljs-built_in">times</span>, it was worst of <span class="hljs-built_in">times</span>) .<br>36      It was the best of <span class="hljs-built_in">times</span>, it was blurst of <span class="hljs-built_in">times</span> (It was the best of <span class="hljs-built_in">times</span>, it was worst of <span class="hljs-built_in">times</span>) .    成功<br>耗时:1.961秒<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;遗传算法&quot;&gt;&lt;a href=&quot;#遗传算法&quot; class=&quot;headerlink&quot; title=&quot;遗传算法&quot;&gt;&lt;/a&gt;遗传算法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;遗传算法（Genetic Algorithm，GA）最早是由美国的 John holland于20</summary>
      
    
    
    
    <category term=".Net" scheme="https://oujun.work/categories/Net/"/>
    
    
    <category term="C#" scheme="https://oujun.work/tags/C/"/>
    
    <category term=".net" scheme="https://oujun.work/tags/net/"/>
    
    <category term="遗传算法" scheme="https://oujun.work/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
    <category term="文字匹配" scheme="https://oujun.work/tags/%E6%96%87%E5%AD%97%E5%8C%B9%E9%85%8D/"/>
    
    <category term="密码匹配" scheme="https://oujun.work/tags/%E5%AF%86%E7%A0%81%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>什么是实体</title>
    <link href="https://oujun.work/2022/10/26/what-is-an-entity.html"/>
    <id>https://oujun.work/2022/10/26/what-is-an-entity.html</id>
    <published>2022-10-26T03:00:00.000Z</published>
    <updated>2022-10-26T03:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实体是什么"><a href="#实体是什么" class="headerlink" title="实体是什么"></a>实体是什么</h1><p>实体本身就是一个<code>class</code>，一个类，只是它是作为一个对应到现实中的实际个体的类，比如人类，比如猫，在软件开发中则大多对应的是数据库表，在面向对象的设计中，我们大多配合五项基本原则（SOLID）</p><h2 id="单一职责"><a href="#单一职责" class="headerlink" title="单一职责"></a>单一职责</h2><p>单一的职责，这个人就是保安、这个人就是会计、这个人就是保洁，而不是通过if else来判断这个人是做什么的。</p><h2 id="开放封闭"><a href="#开放封闭" class="headerlink" title="开放封闭"></a>开放封闭</h2><p>简单理解，就是我们调用方法的对象都是由接口创建的，我们提供出去的接口可以被重新实现已替换接口的实际内容；或者提供抽象重写的方式。</p><h1 id="里氏替换"><a href="#里氏替换" class="headerlink" title="里氏替换"></a>里氏替换</h1><h1 id="依赖倒置"><a href="#依赖倒置" class="headerlink" title="依赖倒置"></a>依赖倒置</h1><p>顶部设计不应该依赖底层实现，这个的意思就是顶层设计是键盘，底层实现则是机械键盘、膜键盘，108键键盘，87键键盘；现有键盘才有的不同类型的键盘。</p><h1 id="接口隔离"><a href="#接口隔离" class="headerlink" title="接口隔离"></a>接口隔离</h1><p>还是用上面的键盘举例子，键盘的作用就是打字，所以提供的接口也就是打字的功能，至于机械键盘的可更换键帽、可更换轴这些，如果用户不需要则不应该暴露给用户。</p><p>然而大多数的在动手开发前虽然设计的很好，但是往往开发过程中为了加速开发进程就会造成放飞自我的行为导致实体中出现多余内容，虽然也不是不行，但是这就会造成虽然做了架构，但是没有完全做架构的行为对后续的维护交接都会引起一些不可避免的问题。</p><h1 id="怎么做实体"><a href="#怎么做实体" class="headerlink" title="怎么做实体"></a>怎么做实体</h1><p>首先明白了实体是对应现实中的某中实际个体，那么就是明确它有哪些属性，它能做什么；以前流行一种贫血设计模式，就是实体类，只是类，里面只有构造方法，没有其他内容，产生的变更都是通过其他的Service或者Manager进行的。</p><p>我们后来的开发中都采用的满血的设计或者说是残血的设计，实体中的属性都是<code>private set</code>的，这样保证了外部无法进行更改，我们会提供一个修改该属性的接口来保证属性的变更都是满足限制的，且有的时候进行一个属性的变更可可以直接联动其他的属性变更或者行为；</p><p>例如我们常用的鼠标，它的属性包括规格，重量，连接方式等，但是它的行为之后滚轮滚动，左键按下，右键按下；拖动、双击都是由外界的人为产生的而不是鼠标本身的功能</p><pre><code class=" mermaid">classDiagram    class Mouse    Mouse : +LeftButtonDown()    Mouse : +LeftButtonDown()</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实体是什么&quot;&gt;&lt;a href=&quot;#实体是什么&quot; class=&quot;headerlink&quot; title=&quot;实体是什么&quot;&gt;&lt;/a&gt;实体是什么&lt;/h1&gt;&lt;p&gt;实体本身就是一个&lt;code&gt;class&lt;/code&gt;，一个类，只是它是作为一个对应到现实中的实际个体的类，比如人类，</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="架构" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="微服务" scheme="https://oujun.work/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="软件开发" scheme="https://oujun.work/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>使用Python的pyecharts包画关系图</title>
    <link href="https://oujun.work/2022/07/13/python-pyecharts-graph.html"/>
    <id>https://oujun.work/2022/07/13/python-pyecharts-graph.html</id>
    <published>2022-07-13T13:16:00.000Z</published>
    <updated>2024-01-31T03:35:57.053Z</updated>
    
    <content type="html"><![CDATA[<p>我们使用csv格式的文件存储关系，第一个为主节点，第二列为子节点，就像如下的形式</p><table><thead><tr><th>主节点</th><th>子节点</th></tr></thead><tbody><tr><td>节点1</td><td>节点A</td></tr><tr><td>节点1</td><td>节点B</td></tr><tr><td>节点1</td><td>节点C</td></tr><tr><td>节点B</td><td>节点N</td></tr><tr><td>节点C</td><td>节点N</td></tr></tbody></table><p>下面是python代码，先安装pyecharts<code>pip(3) install pyecharts</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> color<br><span class="hljs-keyword">from</span> pyecharts <span class="hljs-keyword">import</span> options <span class="hljs-keyword">as</span> opts<br><span class="hljs-keyword">from</span> pyecharts.charts <span class="hljs-keyword">import</span> Graph<br><br>csv_reader = csv.reader(<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./relation.csv&quot;</span>))<br>systems = []<br>relation=[]<br><span class="hljs-keyword">for</span> left <span class="hljs-keyword">in</span> csv_reader:<br>    l = left[<span class="hljs-number">0</span>]; r = left[<span class="hljs-number">1</span>];<br>    relation.append(&#123;<span class="hljs-string">&quot;main&quot;</span>:l,<span class="hljs-string">&quot;sub&quot;</span>:r&#125;)<br>    systems.append(l)  <br>    systems.append(r) <br><br><span class="hljs-comment"># 节点</span><br>nodes = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(systems)):<br>    nodes.append(&#123;<span class="hljs-string">&quot;name&quot;</span>: i, <span class="hljs-string">&quot;symbolSize&quot;</span>: <span class="hljs-number">15</span>&#125;)<span class="hljs-comment">#systems.count(i) 10就是点的大小</span><br><br><span class="hljs-comment"># 关系</span><br>links = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> nodes:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> relation:<br>        <span class="hljs-keyword">if</span>(i.get(<span class="hljs-string">&quot;name&quot;</span>) == j.get(<span class="hljs-string">&quot;main&quot;</span>)):<br>            links.append(&#123;<span class="hljs-string">&quot;source&quot;</span>: i.get(<span class="hljs-string">&quot;name&quot;</span>), <span class="hljs-string">&quot;target&quot;</span>: j.get(<span class="hljs-string">&quot;sub&quot;</span>)&#125;)<br><br><span class="hljs-comment">#输出网页</span><br>c = (<br>    Graph(init_opts=opts.InitOpts(         <br>        width=<span class="hljs-string">&quot;1800px&quot;</span>,  <span class="hljs-comment"># 网页分辨率</span><br>        height=<span class="hljs-string">&quot;1000px&quot;</span>,  <span class="hljs-comment"># 网页分辨率</span><br>        bg_color=<span class="hljs-string">&quot;#F2F2F2&quot;</span>, <span class="hljs-comment"># 背景色 注释掉就没颜色</span><br>        ))<br>    .add(<br>        <span class="hljs-comment"># https://pyecharts.org/#/zh-cn/basic_charts?id=graph%ef%bc%9a%e5%85%b3%e7%b3%bb%e5%9b%be</span><br>        <span class="hljs-string">&quot;&quot;</span>, <br>        nodes, <br>        links, <br>        repulsion = <span class="hljs-number">100</span>, <span class="hljs-comment">#引力值 数越大，点之间弹的越大</span><br>       <span class="hljs-comment"># edge_length = 30, # 调整点之间的距离，受上面的repulsion影响</span><br>        symbol=<span class="hljs-string">&quot;roundRect&quot;</span>, <span class="hljs-comment"># 点的形状 triangle 三角形 ，circle 圆形， rect 方形，roundRect 圆角方形， diamond 菱形，pin 图钉 ，arrow 箭头,none 只有线</span><br>       <span class="hljs-comment"># layout=&quot;circular&quot;, # 布局 是环形， force 是引力型</span><br>       <span class="hljs-comment"># linestyle_opts=opts.LineStyleOpts(curve=0.2), #直线或者弧线</span><br>       <span class="hljs-comment"># label_opts=opts.LabelOpts(is_show=False), # 直接显示标签或者鼠标放上去显示标签，</span><br>       <span class="hljs-comment"># linestyle_opts=opts.LineStyleOpts(color=&quot;#feb64d&quot;), # 线颜色</span><br>       itemstyle_opts=opts.ItemStyleOpts(color=<span class="hljs-string">&quot;#151EBF&quot;</span>), <span class="hljs-comment"># 图标颜色 注释掉就是红色</span><br>       <span class="hljs-comment"># 挑配色的网站  https://color.adobe.com/zh/explore/newest/</span><br><br>    )<br>    .set_global_opts(<br>        title_opts=opts.TitleOpts(title=<span class="hljs-string">&quot;自己改名&quot;</span>), <span class="hljs-comment"># 标题</span><br>        ) <br>    .render(<span class="hljs-string">&quot;graph_base.html&quot;</span>)<br>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们使用csv格式的文件存储关系，第一个为主节点，第二列为子节点，就像如下的形式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;主节点&lt;/th&gt;
&lt;th&gt;子节点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;节点1&lt;/td&gt;
&lt;td&gt;节</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="python" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/python/"/>
    
    <category term="小技巧" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/python/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="架构" scheme="https://oujun.work/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="Python" scheme="https://oujun.work/tags/Python/"/>
    
    <category term="pyecharts" scheme="https://oujun.work/tags/pyecharts/"/>
    
    <category term="关系图" scheme="https://oujun.work/tags/%E5%85%B3%E7%B3%BB%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>台电玲珑S小主机做旁路由</title>
    <link href="https://oujun.work/2022/06/16/teclast-n5095-pve.html"/>
    <id>https://oujun.work/2022/06/16/teclast-n5095-pve.html</id>
    <published>2022-06-16T13:38:00.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="台电-玲珑S-2-5L小主机"><a href="#台电-玲珑S-2-5L小主机" class="headerlink" title="台电 玲珑S 2.5L小主机"></a>台电 玲珑S 2.5L小主机</h1><p>之前用的是星际蜗牛矿渣，一直放在哈尔滨的家里，到上海工作后买了个小米ax1800，没有U口，所以，也就没有什么扩展性，后来虽然找到了shell版的openclash，但是性能还是太差，配置起来也比较麻烦，所以前几天发现了618的活动，899入手了<a href="https://www.intel.cn/content/www/cn/zh/products/sku/212322/intel-celeron-processor-n5095-4m-cache-up-to-2-90-ghz/specifications.html">N5095</a>+8G D4+256G固态，因为是做nas的所以没选择wifi模块。到货后感觉还不错，送了硬盘线，鼠标垫和键鼠套，还带了根成品网线。</p><p>系统自带的windows 10 家庭版，所以直接系统就做了proxmox ve，所以也没仔细看配置，后续找了下相关的配置。</p><table><thead><tr><th>硬件</th><th>参数</th><th>其他</th></tr></thead><tbody><tr><td>CPU</td><td>Intel(R) Celeron(R) N5095 @ 2.00GHz</td><td>11代，4核，15w，支持虚拟化，21年第一季度发布</td></tr><tr><td>内存</td><td>8G</td><td>台电自己的</td></tr><tr><td>硬盘</td><td>256G</td><td>Teclast YT 256GB SSD</td></tr><tr><td>网卡</td><td>Realtek Semiconductor Co., Ltd. RTL8111&#x2F;8168&#x2F;8411</td><td></td></tr></tbody></table><p>没播放视频，不知道是否真的能做到4k60硬解，但是看了一些其他的评测，据说不行。顺便说，BIOS是台电自己定制的，而且直接有超频选项，虽然对于我来说没用处。不过相对其他多口软路由的那种不知道啥主板的BIOS，也没啥设置的，甚至连虚拟化配置都阉割掉（曾经买的一台I5 5210U的6口软路由，写的I5 4200U，发的I5 5210U）的，这个好多了。</p><h1 id="ProxmoxVE"><a href="#ProxmoxVE" class="headerlink" title="ProxmoxVE"></a>ProxmoxVE</h1><p>安装过程略过，进入系统后两件事，第一是修改源，第二还是修改源<br><code>nano /etc/apt/source.list</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">deb</span> http://mirrors.aliyun.<span class="hljs-keyword">com</span>/debian bullseye main contrib<br><br><span class="hljs-keyword">deb</span> http://mirrors.aliyun.<span class="hljs-keyword">com</span>/debian bullseye-updates main contrib<br><br># security updates<br><span class="hljs-keyword">deb</span> http://mirrors.aliyun.<span class="hljs-keyword">com</span>/debian-security bullseye-security main contrib<br></code></pre></td></tr></table></figure><p><code>ctrl + x ,y</code>保存，更换成阿里云的源。</p><p>我们再更换一个源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak<br>nano /etc/apt/sources.list.d/pve-no-enterprise.list<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">deb</span> http://download.proxmox.com/debian/pve bullseye pve-<span class="hljs-literal">no</span>-subscription<br></code></pre></td></tr></table></figure><p><code>ctrl + x ,y</code>保存后我们再进行更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt update<br>apt upgrade -y<br></code></pre></td></tr></table></figure><h1 id="定制一个自己的openwrt"><a href="#定制一个自己的openwrt" class="headerlink" title="定制一个自己的openwrt"></a>定制一个自己的openwrt</h1><p>现在有了可以在线定制的openwrt，这是真的很方便的，<a href="https://supes.top/">https://supes.top/</a>，根据自己的需要对其进行定制，目前没有专门的xray的客户端插件，所以还是选择了SSR-Plus ，看过一些评测，我比较懒，没有专门去做测试，据说性能是<code>SSR-Plus &gt;PassWall2 &gt;OpenClash</code>。<br>一般的选项如下</p><table><thead><tr><th>内容</th><th>值</th></tr></thead><tbody><tr><td>所需软件包 (包名用空格隔开)</td><td></td></tr><tr><td>互联网</td><td>SSR-Plus</td></tr><tr><td>默认主题</td><td>Argon</td></tr><tr><td>后台地址</td><td>设置自己的本地环境的IP地址,例如 192.168.0.253</td></tr><tr><td>后台密码</td><td></td></tr><tr><td>Web服务器</td><td>Uhttpd</td></tr><tr><td>旁路由模式</td><td>√</td></tr><tr><td>IPv4 网关</td><td>主路由的地址，例如192.168.0.1</td></tr><tr><td>DHCP 服务器</td><td>不要勾选</td></tr><tr><td>EFI镜像</td><td>√</td></tr><tr><td>主机名</td><td>随你喜欢</td></tr><tr><td>ROOTFS.TAR.GZ (用于Docker或LXC等容器)</td><td>√ 仅限赞助用户</td></tr></tbody></table><p>我赞助了10元，一个月的有效期，所以直接构建后得到了<code>openwrt-月.日.年-x86-64-generic-rootfs.tar.gz</code> 文件。</p><p>下载后打开pve的管理端，选中local(pve)存储上，选择右边的CT模板，点上传，选择我们得到的tar.gz文件，点击确定，我们就得到了一个ct模板。</p><p>不能用右上角的那个创建CT按钮创建主机，会报错。我们ssh登录到pve中使用命令进行创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">pct create 100 \<br>local:local:vztmpl/openwrt-月.日.年-x86-64-generic-rootfs.tar.gz \<br>--rootfs local-lvm:2 \<br>--ostype unmanaged \<br>--hostname openwrt \<br>--arch amd64 \<br>--cores 1 \<br>--memory 512 \<br>--swap 0 \<br>-net0 bridge=vmbr0,name=eth0<br></code></pre></td></tr></table></figure><p>然后回到web端的管理界面启动就好了，因为IP是我们前面定制好的，所以不需要进行修改，如果需要的话，直接选中控制台，然后按回车使用<code>vi /etc/config/network</code>进行修改，改完之后记得重启，可以使用<code>reboot</code>直接重启，或者使用<code>/etc/init.d/network restart</code>只重启网络。</p><p>然后我们在浏览器就可以使用<code>192.168.0.253</code>登录到openwrt中了。</p><h1 id="旁路由配置"><a href="#旁路由配置" class="headerlink" title="旁路由配置"></a>旁路由配置</h1><p>我喜欢最少的更改，就是dhcp依然是主路由，但是网关由旁路由来做。</p><table><thead><tr><th>旁路由</th><th>主路由</th></tr></thead><tbody><tr><td>网络-&gt;LAN-&gt;编辑-&gt;常规设置</td><td>(小米ax1800)常用设置-&gt;局域网设置，定位到DHCP服务</td></tr><tr><td>（高级设置）使用自定义的 DNS 服务器：223.5.5.5</td><td>DNS1 ：192.168.0.253</td></tr><tr><td>IPv4 网关: 192.168.0.1</td><td>默认网关：192.168.0.253</td></tr></tbody></table><p>主路由设置完之后需要重启，路由下的网络设备会重新获取IP，获取到的网络配置中网关就自动更新为旁路由的IP地址，就可以正常使用了。</p><h1 id="附加价值1"><a href="#附加价值1" class="headerlink" title="附加价值1"></a>附加价值1</h1><p>配置<code>SSR-Plus</code>，直接生效，N5095油管8k效果很稳定。<br><img src="/assets/xray-ytb-statistics.png"></p><h1 id="附加价值2：docker"><a href="#附加价值2：docker" class="headerlink" title="附加价值2：docker"></a>附加价值2：docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get -y install apt-transport-https ca-certificates curl software-properties-common<br>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo apt-key add -<br>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | apt-key add -<br>lsb_release -cs<br>add-apt-repository &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/debian $(lsb_release -cs) stable&quot;<br>apt update<br>apt upgrade -y<br>apt install docker-ce<br>apt install docker-compose<br></code></pre></td></tr></table></figure><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><ul><li><input checked="" disabled="" type="checkbox"> frpc</li><li><input checked="" disabled="" type="checkbox"> jellyfin</li><li><input checked="" disabled="" type="checkbox"> qbittorrent</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;2.1&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">frpc:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">snowdreamtech/frpc:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">frpc</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">&#x27;host&#x27;</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shanghai</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config/frpc/frpc.ini:/etc/frp/frpc.ini</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>  <span class="hljs-attr">jellyfin:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">lscr.io/linuxserver/jellyfin:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">jellyfin</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PUID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PGID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shangehai</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config/jellyfin/library:/config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config/tvseries:/data/tvshows</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config/movies:/data/movies</span><br>    <span class="hljs-attr">devices:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/dev/dri:/dev/dri</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8096</span><span class="hljs-string">:8096</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8920</span><span class="hljs-string">:8920</span> <span class="hljs-comment">#optional</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">7359</span><span class="hljs-string">:7359/udp</span> <span class="hljs-comment">#optional</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">1900</span><span class="hljs-string">:1900/udp</span> <span class="hljs-comment">#optional</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br>  <span class="hljs-attr">qbittorrent:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">lscr.io/linuxserver/qbittorrent:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">qbittorrent</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PUID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PGID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shangehai</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">WEBUI_PORT=8080</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config/qbittorrent/config:/config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/docker-config:/downloads</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">6881</span><span class="hljs-string">:6881</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">6881</span><span class="hljs-string">:6881/udp</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;台电-玲珑S-2-5L小主机&quot;&gt;&lt;a href=&quot;#台电-玲珑S-2-5L小主机&quot; class=&quot;headerlink&quot; title=&quot;台电 玲珑S 2.5L小主机&quot;&gt;&lt;/a&gt;台电 玲珑S 2.5L小主机&lt;/h1&gt;&lt;p&gt;之前用的是星际蜗牛矿渣，一直放在哈尔滨的家里</summary>
      
    
    
    
    <category term="家庭服务" scheme="https://oujun.work/categories/%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="Openwrt" scheme="https://oujun.work/tags/Openwrt/"/>
    
    <category term="ProxmoxVE" scheme="https://oujun.work/tags/ProxmoxVE/"/>
    
    <category term="旁路由" scheme="https://oujun.work/tags/%E6%97%81%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>【Devops】 - Azure Devops的代理池：封装一个自己的代理池镜像</title>
    <link href="https://oujun.work/2022/06/11/devops-build-agent-pool.html"/>
    <id>https://oujun.work/2022/06/11/devops-build-agent-pool.html</id>
    <published>2022-06-11T13:08:08.000Z</published>
    <updated>2024-01-31T03:35:57.053Z</updated>
    
    <content type="html"><![CDATA[<p>生成代理也是一台机器，是可以给AzureDevops远程调用的机器，它的功能就是想手动对程序进行生成编译一样的封装的自动化操作，它的动作包括拉取代码，按照生成逻辑进行编译，封装镜像，推送镜像，部署的过程，但是如果编译频繁，那么一台生成代理可能是不够的，所以我们封装一个docker镜像，随时部署，或者部署到多个地方进行分摊。</p><p>新建一个<code>start.sh</code>,将下面的代码段存入其中，它的主要功能就是使用环境变量对代理池进行配置与启动，就是我们新建代理池的时候要执行的<code>./config.sh</code>配置与<code>./run.sh</code>启动代理池的操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">set</span> -e<br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_URL</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> 1&gt;&amp;2 <span class="hljs-string">&quot;error: missing AZP_URL environment variable&quot;</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_TOKEN_FILE</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_TOKEN</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> 1&gt;&amp;2 <span class="hljs-string">&quot;error: missing AZP_TOKEN environment variable&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br>  <span class="hljs-keyword">fi</span><br><br>  AZP_TOKEN_FILE=/azp/.token<br>  <span class="hljs-built_in">echo</span> -n <span class="hljs-variable">$AZP_TOKEN</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_TOKEN_FILE</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">unset</span> AZP_TOKEN<br><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_WORK</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_WORK</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">export</span> AGENT_ALLOW_RUNASROOT=<span class="hljs-string">&quot;1&quot;</span><br><br><span class="hljs-function"><span class="hljs-title">cleanup</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> [ -e config.sh ]; <span class="hljs-keyword">then</span><br>    print_header <span class="hljs-string">&quot;Cleanup. Removing Azure Pipelines agent...&quot;</span><br><br>    <span class="hljs-comment"># If the agent has some running jobs, the configuration removal process will fail.</span><br>    <span class="hljs-comment"># So, give it some time to finish the job.</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">do</span><br>      ./config.sh remove --unattended --auth PAT --token $(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_TOKEN_FILE</span>&quot;</span>) &amp;&amp; <span class="hljs-built_in">break</span><br><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Retrying in 30 seconds...&quot;</span><br>      <span class="hljs-built_in">sleep</span> 30<br>    <span class="hljs-keyword">done</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">print_header</span></span>() &#123;<br>  lightcyan=<span class="hljs-string">&#x27;\033[1;36m&#x27;</span><br>  nocolor=<span class="hljs-string">&#x27;\033[0m&#x27;</span><br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;lightcyan&#125;</span>$1<span class="hljs-variable">$&#123;nocolor&#125;</span>&quot;</span><br>&#125;<br><br><span class="hljs-comment"># Let the agent ignore the token env variables</span><br><span class="hljs-built_in">export</span> VSO_AGENT_IGNORE=AZP_TOKEN,AZP_TOKEN_FILE<br><br>print_header <span class="hljs-string">&quot;1. Determining matching Azure Pipelines agent...&quot;</span><br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_AGENT_PACKAGE_LATEST_URL</span>&quot;</span> -o <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_AGENT_PACKAGE_LATEST_URL</span>&quot;</span> == <span class="hljs-string">&quot;null&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> 1&gt;&amp;2 <span class="hljs-string">&quot;error: could not determine a matching Azure Pipelines agent&quot;</span><br>  <span class="hljs-built_in">echo</span> 1&gt;&amp;2 <span class="hljs-string">&quot;check that account &#x27;<span class="hljs-variable">$AZP_URL</span>&#x27; is correct and the token is valid for that account&quot;</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br>print_header <span class="hljs-string">&quot;2. Downloading and extracting Azure Pipelines agent...&quot;</span><br><br>curl -LsS <span class="hljs-variable">$AZP_AGENT_PACKAGE_LATEST_URL</span> | tar -xz &amp; <span class="hljs-built_in">wait</span> $!<br><br>bash ./bin/installdependencies.sh<br><br><span class="hljs-built_in">source</span> ./env.sh<br><br>print_header <span class="hljs-string">&quot;3. Configuring Azure Pipelines agent...&quot;</span><br><br>./config.sh --unattended \<br>  --agent <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AZP_AGENT_NAME:-$(hostname)&#125;</span>&quot;</span> \<br>  --url <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_URL</span>&quot;</span> \<br>  --auth PAT \<br>  --token $(<span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$AZP_TOKEN_FILE</span>&quot;</span>) \<br>  --pool <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AZP_POOL:-Default&#125;</span>&quot;</span> \<br>  --work <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;AZP_WORK:-_work&#125;</span>&quot;</span> \<br>  --replace \<br>  --acceptTeeEula &amp; <span class="hljs-built_in">wait</span> $!<br><br>print_header <span class="hljs-string">&quot;4. Running Azure Pipelines agent...&quot;</span><br><br><span class="hljs-built_in">trap</span> <span class="hljs-string">&#x27;cleanup; exit 0&#x27;</span> EXIT<br><span class="hljs-built_in">trap</span> <span class="hljs-string">&#x27;cleanup; exit 130&#x27;</span> INT<br><span class="hljs-built_in">trap</span> <span class="hljs-string">&#x27;cleanup; exit 143&#x27;</span> TERM<br><br><span class="hljs-built_in">chmod</span> +x ./run.sh<br><br><span class="hljs-comment"># To be aware of TERM and INT signals call run.sh</span><br><span class="hljs-comment"># Running it with the --once flag at the end will shut down the agent after the build is executed</span><br>./run.sh <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span> &amp; <span class="hljs-built_in">wait</span> $!<br></code></pre></td></tr></table></figure><p>随后我们在同目录下创建一个dockerfile文件，用来对环境进行镜像封装。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> debian:<span class="hljs-number">11.3</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&quot;s@http://ftp.debian.org@http://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&quot;s@http://security.debian.org@http://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&quot;s@http://deb.debian.org@http://mirrors.aliyun.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get upgrade -y</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get install -y -qq --no-install-recommends \</span><br><span class="language-bash">    apt-transport-https \</span><br><span class="language-bash">    apt-utils \</span><br><span class="language-bash">    ca-certificates \</span><br><span class="language-bash">    curl \</span><br><span class="language-bash">    git \</span><br><span class="language-bash">    iputils-ping \</span><br><span class="language-bash">    jq \</span><br><span class="language-bash">    lsb-release \</span><br><span class="language-bash">    tar \</span><br><span class="language-bash">    software-properties-common</span><br><br><span class="hljs-comment"># Can be &#x27;linux-x64&#x27;, &#x27;linux-arm64&#x27;, &#x27;linux-arm&#x27;, &#x27;rhel.6-x64&#x27;.</span><br><span class="hljs-keyword">ENV</span> TARGETARCH=linux-x64<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /azp</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./start.sh .</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">chmod</span> +x start.sh</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [ <span class="hljs-string">&quot;./start.sh&quot;</span> ]</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t azp-azent:debian.11.3 .<br>docker push azp-azent:debian.11.3<br><br><br><span class="hljs-comment">#docker build -t privatedocker.xxx.xxx/namespace/azp-azent:debian.11.3 .</span><br><span class="hljs-comment">#docker push privatedocker.xxx.xxx/namespace/azp-azent:debian.11.3</span><br></code></pre></td></tr></table></figure><p>如此就打包完成了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;生成代理也是一台机器，是可以给AzureDevops远程调用的机器，它的功能就是想手动对程序进行生成编译一样的封装的自动化操作，它的动作包括拉取代码，按照生成逻辑进行编译，封装镜像，推送镜像，部署的过程，但是如果编译频繁，那么一台生成代理可能是不够的，所以我们封装一个doc</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="运维" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Docker" scheme="https://oujun.work/tags/Docker/"/>
    
    <category term="Azure Devops" scheme="https://oujun.work/tags/Azure-Devops/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法学习</title>
    <link href="https://oujun.work/2022/05/31/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://oujun.work/2022/05/31/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0.html</id>
    <published>2022-05-31T13:56:08.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是遗传算法"><a href="#什么是遗传算法" class="headerlink" title="什么是遗传算法"></a>什么是遗传算法</h1><p>遗传算法一般的解释就是模拟达尔文生物进化论和遗传学对生物的进化过程的模拟，用迭代进化的方式得到最优解的方法，其实我了解这个东西有段时间了，但是一直也没有完整的去学习过。</p><p>遗传算法的执行过程一般是先有一个<code>种群</code>，不论什么东西进化都是从一个种群进化到另一个种群，优胜劣汰，<code>种群</code>中的每一个个体都有一组<code>基因</code>，也有把这个叫做<code>染色体</code>的。</p><p>生物都有染色体，他们繁殖出的后代都是从父母双亲的染色体中各取一部分生成一个新的个体。</p><p>中间略过……</p><p>编码-&gt;初始化种群</p><p>评估种群中个体适应度-&gt;选择-&gt;交叉-&gt;变异-&gt;回到评估</p><pre><code class=" mermaid">graph TD  编码 --&gt; 初始化种群  初始化种群 --&gt; 评估适应度  评估适应度 --&gt; 选择  选择 --&gt; 交叉  交叉 --&gt; 变异  变异 --&gt; 评估适应度</code></pre><p>我个人感觉，其中难度最大的是适应度这个地方，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是遗传算法&quot;&gt;&lt;a href=&quot;#什么是遗传算法&quot; class=&quot;headerlink&quot; title=&quot;什么是遗传算法&quot;&gt;&lt;/a&gt;什么是遗传算法&lt;/h1&gt;&lt;p&gt;遗传算法一般的解释就是模拟达尔文生物进化论和遗传学对生物的进化过程的模拟，用迭代进化的方式得到最优解</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term=".Net" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/"/>
    
    <category term="算法" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="C#" scheme="https://oujun.work/tags/C/"/>
    
    <category term="遗传算法" scheme="https://oujun.work/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
    <category term=".Net" scheme="https://oujun.work/tags/Net/"/>
    
  </entry>
  
  <entry>
    <title>使用IHostedService时间简单的定时任务功能</title>
    <link href="https://oujun.work/2022/05/30/%E4%BD%BF%E7%94%A8IHostedService%E6%97%B6%E9%97%B4%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%9F%E8%83%BD.html"/>
    <id>https://oujun.work/2022/05/30/%E4%BD%BF%E7%94%A8IHostedService%E6%97%B6%E9%97%B4%E7%AE%80%E5%8D%95%E7%9A%84%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8A%9F%E8%83%BD.html</id>
    <published>2022-05-30T03:29:10.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有些时候再开发过程中会遇到定时执行任务的情况，这种需求功能很小，如果采用<code>hangfire</code>或者<code>Quartz.NET</code>之类的框架，就有些庞大，不值得建库建表去进行配置管理，使用<code>while</code>或者<code>timer</code>又不够具有封装性，所以微软.net core提供了<code>IHostedService</code>（<a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-6.0&tabs=visual-studio">在 ASP.NET Core 中使用托管服务实现后台任务</a>）托管服务时间简单的后台任务管理器。</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>我们采用<code>IHostedService</code> 基类进行封装以满足我们的简单需求，这个接口有两个实现。</p><ul><li>StartAsync(CancellationToken)</li><li>StopAsync(CancellationToken)</li></ul><h2 id="StartAsync"><a href="#StartAsync" class="headerlink" title="StartAsync"></a>StartAsync</h2><p>简单的描述，就是启动任务，再这里对任务的逻辑进行处理。</p><h2 id="StopAsync"><a href="#StopAsync" class="headerlink" title="StopAsync"></a>StopAsync</h2><p>终止任务，一般来讲就是服务本身或者说应用本身停止的时候自动调用该接口。对后台任务涉及到的资源进行释放或者其他需要的逻辑进行处理的。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>我们的需求很简单，就是再每周五上午8点的时候查询报表，然后通过邮件发送给指定的接收人。</p><p>实现的原理依然是在启动的时候开启一个<code>Timer</code>定时器，然后定时进行轮询，判断时间，时间到此范围的时候就执行<code>DoWork</code>方法进行逻辑处理。由于<code>IHostedService</code>是单例的，所以没有办法进行依赖注入，但是有另一个方法，就是在这里注入一个同为单例的<code>IServiceScopeFactory</code>，需要使用其他类的时候，通过<code>using var scope = _serviceScopeFactory.CreateScope();var cache = scope.ServiceProvider.GetRequiredService&lt;IDistributedCache&gt;()</code>的形式进行对象获取。这里还有一点小瑕疵，就是目前的<code>Timer</code>中的<code>TimerCallback</code>还不支持异步的形式，有点遗憾。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">Email.Report.Infrastructure.BackgroundTasks</span>;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 门店(中心)周报</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">StatisticWeeklyDoWork</span> : <span class="hljs-title">IHostedService</span>, <span class="hljs-title">IAsyncDisposable</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Title = <span class="hljs-string">&quot;周报&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Task _completedTask = Task.CompletedTask;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;StatisticWeeklyDoWork&gt; _logger;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IServiceScopeFactory _serviceScopeFactory;<br>    <span class="hljs-keyword">private</span> Timer? _timer;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;logger&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;serviceScopeFactory&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">StatisticWeeklyDoWork</span>(<span class="hljs-params">ILogger&lt;StatisticWeeklyDoWork&gt; logger, IServiceScopeFactory serviceScopeFactory</span>)</span><br>    &#123;<br>        _logger = logger;<br>        _serviceScopeFactory = serviceScopeFactory;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;cancellationToken&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Task <span class="hljs-title">StartAsync</span>(<span class="hljs-params">CancellationToken cancellationToken</span>)</span><br>    &#123;<br>        _logger.LogInformation(<span class="hljs-string">&quot;&#123;Title&#125; &#123;Service&#125; is running.&quot;</span>, Title, <span class="hljs-keyword">nameof</span>(StatisticWeeklyDoWork));<br>        _timer = <span class="hljs-keyword">new</span> Timer(DoWork, <span class="hljs-literal">null</span>, TimeSpan.Zero, TimeSpan.FromSeconds(<span class="hljs-number">30</span>));<br>        <span class="hljs-keyword">return</span> _completedTask;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DoWork</span>(<span class="hljs-params"><span class="hljs-built_in">object</span>? state</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> now = DateTimeOffset.Now;<br>        <span class="hljs-keyword">if</span> (now.DayOfWeek == DayOfWeek.Friday &amp;&amp; now.Hour == <span class="hljs-number">8</span> &amp;&amp; now.Minute &lt; <span class="hljs-number">10</span>)   <span class="hljs-comment">// 每周五的上午8点</span><br>        &#123;<br>            <span class="hljs-keyword">using</span> <span class="hljs-keyword">var</span> scope = _serviceScopeFactory.CreateScope();<br>            <span class="hljs-keyword">var</span> cache = scope.ServiceProvider.GetRequiredService&lt;IDistributedCache&gt;();<br>            cache.BackgroundCheck(<span class="hljs-string">$&quot;StatisticWeeklyDoWork_<span class="hljs-subst">&#123;now:yyyyMMddHH&#125;</span>&quot;</span>, () =&gt;<br>            &#123;<br>                <span class="hljs-keyword">var</span> service = scope.ServiceProvider.GetRequiredService&lt;IEmaliByExcelManager&gt;();<br>                _logger.LogInformation(<span class="hljs-string">&quot;&#123;Title&#125; is working, 当前时间：&#123;time&#125;&quot;</span>, Title, now.ToString(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));<br>                <span class="hljs-comment">// 实际逻辑处理</span><br>                _logger.LogInformation(<span class="hljs-string">&quot;&#123;Title&#125; is complete, 当前时间：&#123;time&#125;&quot;</span>, Title, now.ToString(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));<br>            &#125;);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;cancellationToken&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Task <span class="hljs-title">StopAsync</span>(<span class="hljs-params">CancellationToken cancellationToken</span>)</span><br>    &#123;<br>        _logger.LogInformation(<span class="hljs-string">&quot;&#123;Title&#125; &#123;Service&#125; is stopping.&quot;</span>, Title, <span class="hljs-keyword">nameof</span>(StatisticWeeklyDoWork));<br>        _timer?.Change(Timeout.Infinite, <span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">return</span> _completedTask;<br>    &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> ValueTask <span class="hljs-title">DisposeAsync</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (_timer <span class="hljs-keyword">is</span> IAsyncDisposable timer)<br>        &#123;<br>            <span class="hljs-keyword">await</span> timer.DisposeAsync();<br>        &#125;<br>        _timer = <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="防止重复执行"><a href="#防止重复执行" class="headerlink" title="防止重复执行"></a>防止重复执行</h2><p>其实也没有这个必要，我们可以在<code>Timer</code>的最后一个参数改为1秒一次，我们只要判断时间因素到秒级一般不会出现问题，但是如果操作失败了，就会出现邮件没有发出的情况，所以我们还是增加了一个判断，时间拉长到30秒，任务执行时间也比较长，例如10秒20秒的情况，甚至有些耗时任务，可能或执行2分钟，那么每30秒的判断就会重复进入任务中，这里用到了一个<code> cache.BackgroundCheck(****</code>来对任务的执行进行管理，使用了分布式缓存<code>IDistributedCache</code>进行二次封装满足调用需求。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">Email.Report.Infrastructure.Extensions</span>;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IDistributedCacheExtensions</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 任务执行检查</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;cache&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;key&quot;&gt;</span>任务检查key<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;action&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">BackgroundCheck</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IDistributedCache cache, <span class="hljs-built_in">string</span> key, Action action</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> workingKey = key + <span class="hljs-string">&quot;_working&quot;</span>;<br>        <span class="hljs-keyword">var</span> isWorkingKey = cache.GetString(key);<br>        <span class="hljs-keyword">if</span> (isWorkingKey == <span class="hljs-string">&quot;working&quot;</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        cache.SetString(workingKey, <span class="hljs-string">&quot;working&quot;</span>, <span class="hljs-keyword">new</span> DistributedCacheEntryOptions().SetAbsoluteExpiration(TimeSpan.FromMinutes(<span class="hljs-number">5</span>)));<br>        <span class="hljs-keyword">var</span> complete = cache.GetString(key);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(complete))<br>        &#123;<br>            action?.Invoke();<br>            cache.SetString(key, <span class="hljs-string">&quot;complete&quot;</span>, <span class="hljs-keyword">new</span> DistributedCacheEntryOptions().SetAbsoluteExpiration(TimeSpan.FromHours(<span class="hljs-number">2</span>)));<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码中每个任务执行，我们都有一个独立的key，调用到的时候就先写入一个working的key，这样重复进入的时候判断在执行中就会自动返回了，然后执行在判断是否已经执行结束，如果还没有，则开始执行逻辑，执行完之后就写入完成的key，这样就不会重复判断了，要注意的是，key的写入时间，与任务的实行时间，不能出现太小的差距，否则就会出现重复进入的情况。</p><h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><p>我们可以有多个这样的后台任务，在服务启动的时候进行注册，就可以自动启动了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">namespace</span> <span class="hljs-title">Email.Report.API</span>;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;args&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> builder = WebApplication.CreateBuilder(args);<br><br>        <span class="hljs-comment">// Add services to the container.</span><br><br>        builder.Services.AddControllers();<br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 定时任务</span><br>        builder.Services.AddDistributedMemoryCache(); <span class="hljs-comment">//缓存</span><br>        builder.Services.AddHostedService&lt;StatisticWeeklyDoWork&gt;();<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>        <span class="hljs-keyword">var</span> app = builder.Build();<br><br>        <span class="hljs-comment">// Configure the HTTP request pipeline.</span><br><br>        app.UseAuthorization();<br>        app.MapControllers();<br>        app.Run();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;有些时候再开发过程中会遇到定时执行任务的情况，这种需求功能很小，如果采用&lt;code&gt;hangfire&lt;/code&gt;或者&lt;code&gt;Quart</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term=".Net" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/"/>
    
    <category term="小技巧" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="C#" scheme="https://oujun.work/tags/C/"/>
    
    <category term=".Net Core" scheme="https://oujun.work/tags/Net-Core/"/>
    
    <category term="定时任务" scheme="https://oujun.work/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Github中的代码自动部署发布到nuget的流程</title>
    <link href="https://oujun.work/2022/02/07/github-to-nuget.html"/>
    <id>https://oujun.work/2022/02/07/github-to-nuget.html</id>
    <published>2022-02-07T05:26:41.000Z</published>
    <updated>2024-01-31T03:35:57.053Z</updated>
    
    <content type="html"><![CDATA[<p>时序图</p><pre><code class=" mermaid">sequenceDiagram  Dev -&gt;&gt;+ Github :拉取代码  Github --&gt;&gt;- Dev : git clone -b dev  Dev -&gt;&gt; Dev : code  Dev -&gt;&gt; Dev : commit  Dev -&gt;&gt; Github : push  Github -&gt;&gt; Github : pull request master  Github -&gt;&gt; Github : publish release  Github -&gt;&gt; Github : tag v.*.*.*  Github -&gt;&gt; Github Actions : on:   push:    tags:    - v*  Github Actions -&gt;&gt; Github Actions : actions/setup-dotnet@v1  Github Actions -&gt;&gt; Github Actions : dawidd6/action-get-tag@v1  Github Actions -&gt;&gt; Github Actions : dotnet build --configuration Release  Github Actions -&gt;&gt; Github Actions : dotnet pack  -p:PackageVersion=$&#123;&#123;steps.tag.outputs.tag&#125;&#125; -o  Github Actions -&gt;&gt; Github Actions : dotnet nuget push --api-key $&#123;&#123;secrets.NUGET_API_KEY&#125;&#125;</code></pre><p><code>.github\workflows</code>中加入<code>dotnet.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">.NET</span><br><br><span class="hljs-attr">on:</span> <br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">v*</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>  <br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span>    <br>    <span class="hljs-attr">env:</span><br>      <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">.NET</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-dotnet@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">dotnet-version:</span> <span class="hljs-number">6.0</span><span class="hljs-number">.101</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Get</span> <span class="hljs-string">Tag</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">tag</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">dawidd6/action-get-tag@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-comment"># Optionally strip `v` prefix</span><br>        <span class="hljs-attr">strip_v:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">with</span> <span class="hljs-string">dotnet</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">dotnet</span> <span class="hljs-string">build</span> <span class="hljs-string">--configuration</span> <span class="hljs-string">Release</span> <span class="hljs-string">src/RabbitMQ.EventBus.AspNetCore</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Pack</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">dotnet</span> <span class="hljs-string">pack</span> <span class="hljs-string">src/RabbitMQ.EventBus.AspNetCore</span> <span class="hljs-string">-c</span> <span class="hljs-string">Release</span> <span class="hljs-string">--include-symbols</span> <span class="hljs-string">--include-source</span>  <span class="hljs-string">-p:PackageVersion=$&#123;&#123;steps.tag.outputs.tag&#125;&#125;</span> <span class="hljs-string">-o</span> <span class="hljs-string">artifacts/</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Publish</span> <span class="hljs-string">Symbols</span> <span class="hljs-string">to</span> <span class="hljs-string">NuGet</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">dotnet</span> <span class="hljs-string">nuget</span> <span class="hljs-string">push</span> <span class="hljs-string">artifacts/*.symbols.nupkg</span> <span class="hljs-string">--api-key</span> <span class="hljs-string">$&#123;&#123;secrets.NUGET_API_KEY&#125;&#125;</span> <span class="hljs-string">--source</span> <span class="hljs-string">https://api.nuget.org/v3/index.json</span><br></code></pre></td></tr></table></figure><p>开发人员从远程仓库拉取dev分支代码。<br>开发人员进行开发，并推送分支。<br>做dev到master分支的拉取请求。<br>拉取请求合并到master分支后，创建新的release并打标签 <code>v.*.*.*</code>。<br>github actions 的触发方式为打了tag且为v开头的。<br>下面就是进行编译、获取打的标签、打包、并推送到nuget，版本号就是前面打的tag。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时序图&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot; mermaid&quot;&gt;sequenceDiagram
  Dev -&amp;gt;&amp;gt;+ Github :拉取代码
  Github --&amp;gt;&amp;gt;- Dev : git clone -b dev
  Dev -&amp;gt;</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="运维" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term=".net" scheme="https://oujun.work/tags/net/"/>
    
    <category term="github" scheme="https://oujun.work/tags/github/"/>
    
    <category term="actions" scheme="https://oujun.work/tags/actions/"/>
    
    <category term="nuget" scheme="https://oujun.work/tags/nuget/"/>
    
  </entry>
  
  <entry>
    <title>常用的代码剪辑</title>
    <link href="https://oujun.work/2022/02/07/some-code-excerpts.html"/>
    <id>https://oujun.work/2022/02/07/some-code-excerpts.html</id>
    <published>2022-02-07T01:52:51.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><h2 id="System-Text-Json-Serialization"><a href="#System-Text-Json-Serialization" class="headerlink" title="System.Text.Json.Serialization"></a>System.Text.Json.Serialization</h2><h3 id="JsonExtensionData-处理溢出-JSON"><a href="#JsonExtensionData-处理溢出-JSON" class="headerlink" title="JsonExtensionData 处理溢出 JSON"></a>JsonExtensionData 处理溢出 JSON</h3><p>反序列化时，可能会在 JSON 中收到不是由目标类型的属性表示的数据。可以将这些无法由目标类型的属性表示的数据储存在一个Dictionary&lt;string, JsonElement&gt;字典里面。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 储存反序列化时候的溢出数据</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">JsonExtensionData</span>]<br><span class="hljs-keyword">public</span> Dictionary&lt;<span class="hljs-built_in">string</span>, JsonElement&gt; ExtensionData &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br></code></pre></td></tr></table></figure><h3 id="JsonInclude-包含特定public字段和非公共属性访问器"><a href="#JsonInclude-包含特定public字段和非公共属性访问器" class="headerlink" title="JsonInclude 包含特定public字段和非公共属性访问器"></a>JsonInclude 包含特定public字段和非公共属性访问器</h3><p>在序列化或反序列化时，使用 JsonSerializerOptions.IncludeFields 全局设置或 <code>[JsonInclude]</code> 特性来包含字段（必须是public），当应用于某个属性时，指示非公共的 getter 和 setter 可用于序列化和反序列化。 不支持非公共属性。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">JsonInclude</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> age = <span class="hljs-number">1000</span>;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">JsonInclude</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">private</span> <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; <br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JSON&quot;&gt;&lt;a href=&quot;#JSON&quot; class=&quot;headerlink&quot; title=&quot;JSON&quot;&gt;&lt;/a&gt;JSON&lt;/h1&gt;&lt;h2 id=&quot;System-Text-Json-Serialization&quot;&gt;&lt;a href=&quot;#System-Text-Jso</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term=".Net" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/"/>
    
    <category term="小技巧" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/Net/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="C#" scheme="https://oujun.work/tags/C/"/>
    
    <category term="开发" scheme="https://oujun.work/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="CSharp" scheme="https://oujun.work/tags/CSharp/"/>
    
  </entry>
  
  <entry>
    <title>出行设计</title>
    <link href="https://oujun.work/2022/02/02/travel-design.html"/>
    <id>https://oujun.work/2022/02/02/travel-design.html</id>
    <published>2022-02-02T14:24:07.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<div class="markmap-container" style="height:768px">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;选购&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;通勤&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;省力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;距离&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;时间&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;存放&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;骑行&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;出行方便&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;健身效果&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;短距旅游&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;方便&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;距离&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;长途&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;选择&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;自行车&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;不需要充电&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;存放方便，跟共享单车停一起就可以&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;但是有共享单车后是否还需要买一台&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;天冷不方便&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;高碳钢：便宜、重&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;铝合金：&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;碳纤维：轻，但是贵&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;电动车&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;省力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;需要充电&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;上海需要上牌&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;需要头盔&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;价格其实与好一点的自行车差不多&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;天冷也不方便&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;品牌&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;续航&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;外观&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;上牌&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;摩托车&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;机动车&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;汽油车&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;选择性很多&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;续航要比电动汽车长，充电桩还不是随处都有&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[41,42]},&quot;v&quot;:&quot;不用考虑气温因素，南方、东北都没问题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;部分城市很难拿到牌照&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[43,44]},&quot;v&quot;:&quot;需要考驾照&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;手动挡驾照&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[45,46]},&quot;v&quot;:&quot;自动挡驾照&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;电动汽车&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[47,48]},&quot;v&quot;:&quot;选择性不是很多&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;南方城市冬天不到零下，有充电桩就很方便，也经济实惠&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[49,50]},&quot;v&quot;:&quot;北方冬天不大适合&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;大部分城市拿牌照容易&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[51,52]},&quot;v&quot;:&quot;需要考驾照&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;手动挡驾照&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[53,54]},&quot;v&quot;:&quot;自动挡驾照&quot;}]}]}]}]}]}"></svg></div>]]></content>
    
    
      
      
    <summary type="html">
&lt;div class=&quot;markmap-container&quot; style=&quot;height:768px&quot;&gt;
  &lt;svg data=&quot;{&amp;quot;t&amp;quot;:&amp;quot;heading&amp;quot;,&amp;quot;d&amp;quot;:1,&amp;quot;p&amp;quot;:{&amp;quot;l</summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="架构" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="思维导图" scheme="https://oujun.work/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>我常用的工具</title>
    <link href="https://oujun.work/2021/12/30/tools.html"/>
    <id>https://oujun.work/2021/12/30/tools.html</id>
    <published>2021-12-30T07:35:02.000Z</published>
    <updated>2024-01-31T03:35:57.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h1><h1 id="Azure-DevOps"><a href="#Azure-DevOps" class="headerlink" title="Azure DevOps"></a>Azure DevOps</h1><p><a href="https://docs.microsoft.com/zh-cn/azure/devops/?view=azure-devops">Azure DevOps 文档</a></p><h1 id="Net开发"><a href="#Net开发" class="headerlink" title=".Net开发"></a>.Net开发</h1><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><p><a href="https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/">.NET 微服务：适用于容器化 .NET 应用程序的体系结构</a></p><p><a href="https://docs.microsoft.com/zh-cn/azure/architecture/patterns/cqrs">CQRS 模式是什么？</a></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/">使用 DDD 和 CQRS 模式降低微服务中的业务复杂性</a></p><p><a href="https://github.com/dotnet-architecture/eShopOnContainers">微软的微服务架构示例</a></p><p><a href="https://docs.microsoft.com/zh-cn/azure/architecture/microservices/">微软微服务体系</a></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/microservice-application-layer-web-api-design">设计微服务应用层和 Web API</a></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/microservice-application-layer-implementation-web-api">使用 Web API 实现微服务应用层</a></p><p><a href="https://docs.microsoft.com/zh-cn/azure/architecture/guide/architecture-styles/event-driven">事件驱动的架构样式</a></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/domain-events-design-implementation">域事件：设计和实现</a></p><p><a href="https://docs.microsoft.com/zh-cn/adaptive-cards/">自适应卡片</a></p><p><a href="https://adaptivecards.io/designer/">自适应卡片设计器</a></p><p><a href="https://www.infoq.cn/article/g6bk78djx_wukxps0kxm">当 DDD 遇上 DCI（Data, Context, Interactive）架构模式</a></p><h2 id="net-core-开发"><a href="#net-core-开发" class="headerlink" title=".net core 开发"></a>.net core 开发</h2><p><a href="https://docs.hangfire.io/en/latest/index.html">hangfire</a></p><p><a href="https://identityserver4docs.readthedocs.io/zh_CN/latest/index.html">identityserver4</a></p><p><a href="https://github.com/jbogard/MediatR/wiki">MediatR</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/net-api/6.x/index.html">ElasticSearch.net API</a></p><p><a href="https://www.rabbitmq.com/dotnet.html">Rabbitmq.Net API</a></p><p><a href="https://docs.automapper.org/en/stable/Getting-started.html">AutoMapper</a></p><p><a href="https://ocelot.readthedocs.io/en/latest/introduction/gettingstarted.html">Ocelot</a></p><p><a href="https://miniprofiler.com/">miniprofiler</a></p><p><a href="https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-6.0&viewFallbackFrom=aspnetcore-2.1&tabs=visual-studio#queued-background-tasks">在 ASP.NET Core 中使用托管服务实现后台任务</a></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/standard/collections/thread-safe/how-to-create-an-object-pool">使用 ConcurrentBag 创建目标池</a></p><p><a href="https://github.com/microsoft/RulesEngine">RulesEngine,微软的规则引擎</a></p><p><a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/">约定式提交(一种用于给提交信息增加人机可读含义的规范)</a></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p><a href="https://help.aliyun.com/document_detail/99880.html">链路追踪</a></p><p><a href="https://docs.docker.com/get-started/">Docker</a></p><p><a href="https://kubernetes.io/zh/docs/home/">K8s</a></p><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">git-scm</a></p><p><a href="https://docs.microsoft.com/zh-cn/azure/devops/repos/git/gitworkflow?view=azure-devops">Azure Repos Git 教程</a></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><a href="https://benchmarkdotnet.org/">性能测试</a></p><p><a href="https://xunit.net/">xUnit单元测试</a></p><p><a href="https://www.cnblogs.com/selimsong/p/9306221.html">xUnit单元测试案例</a></p><p><a href="https://github.com/Moq/moq4/wiki/Quickstart">Moq</a></p><p><a href="https://github.com/MisterJames/GenFu">GenFu模拟数据生成</a></p><p><a href="https://playwright.dev/dotnet/docs/intro">微软开源的Web测试和自动化</a></p><p><a href="https://github.com/grafana/k6">k6.io 压力测试</a></p><h1 id="Visual-Code-插件"><a href="#Visual-Code-插件" class="headerlink" title="Visual Code 插件"></a>Visual Code 插件</h1><h2 id="Markmap"><a href="#Markmap" class="headerlink" title="Markmap"></a>Markmap</h2><p><a href="https://marketplace.visualstudio.com/items?itemName=gera2ld.markmap-vscode">Markmap</a></p><p><a href="https://github.com/gera2ld/markmap-vscode">markmap-vscode</a> 是一个将Markdown转换为思维导图的工具。</p><p><a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid">Markdown Preview Mermaid Support</a> 在MD文件中支持<a href="https://mermaid-js.github.io/mermaid/#/">Mermaid</a>，Mermaid是一个精美的图表工具</p><h1 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h1><h2 id="slidev-用markdown做ppt"><a href="#slidev-用markdown做ppt" class="headerlink" title="slidev 用markdown做ppt"></a>slidev 用markdown做ppt</h2><p><a href="https://cn.sli.dev/">slidev</a></p><blockquote><p>有很多功能丰富的、通用的、所见即所得的幻灯片制作工具，例如 微软 PowerPoint 或 苹果 Keynote. 它们在制作带有动画、图表和许多其他漂亮的幻灯片方面效果相当好，同时非常直观和容易学习。那么，为什么要费心制作 Slidev 呢？</p><p>Slidev 旨在为开发者提供灵活性和交互性，通过使用他们已经熟悉的工具和技术，使他们的演示文稿更加有趣、更具表现力和吸引力。</p><p>当使用所见即所得的编辑器时，人们很容易被样式选项所干扰。Slidev 通过分离内容和视觉效果来弥补这一点。这使你能够一次专注于一件事，同时也能够重复使用社区中的主题。Slidev 并不寻求完全取代其他幻灯片制作工具。相反，它专注于迎合开发者社区的需求。</p></blockquote><p><a href="https://cn.sli.dev/guide/why.html#slidev">文档</a></p><h2 id="mingrammer-com"><a href="#mingrammer-com" class="headerlink" title="mingrammer.com"></a>mingrammer.com</h2><p><a href="https://github.com/mingrammer/diagrams">https://github.com/mingrammer/diagrams</a></p><p>在Python代码中绘制云系统架构图。用来对新的系统架构设计进行原型设计或者描述现有的系统体系结构。</p><h2 id="Mermaid"><a href="#Mermaid" class="headerlink" title="Mermaid"></a>Mermaid</h2><p><a href="https://mermaid-js.github.io/mermaid/#/">Mermaid</a></p><p>Mermaid 允许您使用文本和代码创建图表和可视化效果。</p><p>它是一个基于Javascript的图表工具，可以呈现Markdown启发的文本定义，以动态创建和修改图表。</p><pre><code class=" mermaid">classDiagram    Class01 &lt;|-- AveryLongClass : Cool    Class03 *-- Class04    Class05 o-- Class06    Class07 .. Class08    Class09 --&gt; C2 : Where am i?    Class09 --* C3    Class09 --|&gt; Class07    Class07 : equals()    Class07 : Object[] elementData    Class01 : size()    Class01 : int chimp    Class01 : int gorilla    Class08 &lt;--&gt; C2: Cool label</code></pre><h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h1><p><a href="https://docs.microsoft.com/zh-cn/dotnet/machine-learning/tutorials/">Microsoft ML.NET 教程</a></p><h1 id="游戏-媒体"><a href="#游戏-媒体" class="headerlink" title="游戏&amp;媒体"></a>游戏&amp;媒体</h1><p><a href="https://dos.zczc.cz/">在线DOS游戏</a></p><p><a href="https://github.com/nilaoda/BBDown">一款命令行式哔哩哔哩下载器</a></p><p><a href="https://github.com/xingshaocheng/architect-awesome">后端架构师技术图谱</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目管理&quot;&gt;&lt;a href=&quot;#项目管理&quot; class=&quot;headerlink&quot; title=&quot;项目管理&quot;&gt;&lt;/a&gt;项目管理&lt;/h1&gt;&lt;h1 id=&quot;Azure-DevOps&quot;&gt;&lt;a href=&quot;#Azure-DevOps&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="软件开发" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    <category term="架构" scheme="https://oujun.work/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/%E6%9E%B6%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>开发日常</title>
    <link href="https://oujun.work/2021/10/16/DevelopmentDaily.html"/>
    <id>https://oujun.work/2021/10/16/DevelopmentDaily.html</id>
    <published>2021-10-16T01:28:34.000Z</published>
    <updated>2024-01-31T03:35:57.053Z</updated>
    
    <content type="html"><![CDATA[<p>业务方，产品，开发的互相认知总是不一样的。</p><p>0月15日 周一<br>开发：有需求可以提前说，这样能提前准备开发这边的排期。<br>产品：好的<br>0月19日 周五<br>产品：这个需求业务方已经提了两个月了，今天来催了，问怎么还没上线。<br>开发：开需求会了吗？<br>产品：今天下午开，这周要上线的。<br>……需求评审中……<br>预计工时40个小时，开发只有一个人可供排期</p><p>0月22日 周一<br>产品X：业务方需求提了两个月了，怎么还没上线，你们开发为什么没有产出？</p><hr><p>产品：这个很着急，业务方提了三个月了，天天问什么时候上线<br>开发：什么时候能评需求<br>产品：下周吧，下周能做完吧？<br>开发：下周不是才评需求吗？<br>产品：嗯下周评完就能做吧。<br>开发：嗯，评完就可以开工了。<br>产品To总监：下周上线</p><p>第二周周四评审<br>产品：这次的改动比较大，之前业务方验收后上线了，但是他们用了几天感觉不想要这样了，所以这次整个改一下，改动不大，就是几个调整<br>开发：涉及到哪些？<br>产品：涉及到业务线1里的一部分，和业务线2里的一部分，还有业务线3和4里的一部分，主要是修改业务线5，然后加了一个业务线6，顺便把业务线7里的数据在业务线1234里都展示一下，历史数据也要处理，并且这次的修改只针对A公司，其他的公司不能看到这些变更，很简单，就是针对A公司进行一下定制。<br>开发：业务方的预期上线时间是什么时候？<br>产品：最晚下周一。<br>开发：现在开发这边全占满了，没有人能现在处理。<br>产品：但是xxx说了，这个是这周必须要的。</p><hr><p>产品：帮我拉个数据<br>业务方：帮我拉个数据<br>产品：帮我来个数据，之前的那个就行，再加两个字段<br>业务方：帮我拉个数据，我要这个，这个，这个，这个，还有这个，给我放到一张表里，<br>    开发：这列数据我们没有，公司没给我们<br>    业务方：但是我们需要这个啊<br>    开发：你们可以提供给我们，然后我们给你放进去<br>    业务方：不行，这列数据挺敏感的不能给你们</p><hr><p>09:30<br>业务方：给我改个数据<br>开发：这个数据改完后会导致统计不准的<br>业务方：为啥？<br>开发：报表是已经出来的了，那部分是不能动的，XXX老师要看的。<br>业务方：哦，知道了，没问题，改吧。</p><p>10:00<br>业务方ToXXX老师：咱们开发的系统报表根本不能用，数据都对不上。</p><hr><p>XXX：我是xxx门店的，我有个合同的收款数填错了要改一下<br>开发：谁让你找我们改的？<br>XXX：你们不是后台吗？<br>开发：我们是开发，不是后台，有问题找你的中心总<br>XXX：哦，好。</p><p>XXXToXXX老师：咱们开发的系统不能用，填的数据都不对。</p><hr><p>中午<br>产品：我这有个表，你看一下咱们这上面的东西都有什么<br>开发：这个是要做什么的<br>产品：xxx那边要接数据，看一下咱们有什么，他们有什么对一下。<br>开发：好</p><p>下午<br>产品1：数据对接好了吗？能接过来吗？<br>开发：解释中……<br>产品1：这个公司那边很着急，已经两个月了，天天提，昨天有把我们骂了一顿问为什么还没接。<br>开发：是啊，为啥这么久了还没接啊？这块的产品谁跟的啊<br>产品1：这块是我跟的<br>开发：需求和设计呢？<br>产品1：这块还没出来呢，这个什么时候能接进来？<br>开发：我要直接接什么啊<br>产品1：我知道，这块的需求设计还没出来的，但是咱们什么时候能上线？<br>开发：我要看到具体需求后才能知道要做什么啊，数据能接，但是接到什么场景下我要知道啊。<br>产品1：那行我知道了<br>5分钟后<br>产品2：xxx那边的数据为啥接不了？<br>开发：谁说接不了？<br>产品2：刚才不是说接不了吗？<br>开发：没有啊，我说的是我要看到具体需求后才能知道要做什么啊，数据能接，但是接到什么场景下我要知道啊。<br>产品2：那我知道了<br>5分钟后<br>产品领导：xxx的数据为啥接不了，公司那边很着急，接不了你要给个理由啊。<br>开发：我没说接不了啊，我说的是我要看到具体需求后才能知道要做什么啊，数据能接，但是接到什么场景下我要知道啊。<br>产品领导：那这周能上吗？<br>开发：不一定，抓紧给我需求让我知道往哪接，接了后要干什么<br>产品领导：行，那我知道了<br>5分钟后<br>开发领导：xxx的数据怎么接不了？有什么问题吗？<br>开发：没需求<br>开发领导：需求不是早定了吗？<br>开发：刚才说还没出来呢。<br>开发领导：那你知道要做什么吗？<br>开发：产品也没说，就让我看了下能接哪些数据，也没说接到哪也没说接了要做什么。<br>开发领导：……</p><hr><p>假期中<br>业务方A：给我拉个数据<br>开发：我不在家，晚上才能回去，回去给你拉<br>业务方A：大概什么时候能回来？很着急<br>开发：不一定，我在外面很远<br>业务方A：那好<br>5分钟后<br>产品：给我拉个数据<br>开发：你这个怎么和业务方A要的一样，我在外面，晚上才能回去。<br>产品：就是那个<br>开发：他刚给我打的电话，我在外面，晚上才能回去<br>产品：……<br>5分钟后<br>产品领导：xxx给业务方A拉个数据<br>开发：我不在家，晚上才能回去<br>5分钟后<br>开发领导：业务方A要的啥<br>开发：解释数据<br>开发领导：你现在给拉一下<br>开发：我不在家，晚上才能回去，你也可以给他拉一下。<br>下午5点<br>业务方A：你什么时候回来<br>开发：如果快的话9点左右吧<br>5分钟后<br>产品：业务方A的数据给他拉了吗<br>开发：我还没到呢<br>开发：开发领导，你先帮他拉一下<br>开发领导：<br>9点半<br>开发：业务方A，我到了，给你数据。</p><hr><p>产品：我找你确认个事，就是咱们的业务1不满足A公司的需求，他们很多数据不填，要把这个地方改一下，可以吗？<br>开发：这个不行，咱们主打的就是数据真实性，这么模糊的填写，连买的东西是什么都看不出来，没法作业啊，而且，A公司的他们一共才10几个人，总不能为了这10几个人，让其他6000多人不用作业啊。<br>产品：他们这个数据拿不到，虽然有能拿到的，但是你只要把这个地方的限制去掉，然后把这4项删除，然后他们没有这两项，其他的都没变，业务1里的业务点1和3和4都不变，还有业务2里的2，3，5，6，7的能力放进来，然后再把数据源上加一个限制就行了，并且，业务1的后续关联的业务4业务5业务6业务7也这个也都要，但就是里面的内容跟这些不一样。<br>开发：不行，这个限制会导致业务1和业务2都不能用的，你这样的话是一个独立的业务，而且你这个定义和内容完全跟这两块业务没关系啊，完全就是个新业务，就按照新功能设计，这样能做到数据隔离，不影响现在的作业系统，而且开发周期也会快。<br>产品：哦，那我明白了，我去设计一个新的产品。<br>一周后<br>产品：我找你确认个事，我不那么做了，【指页面中业务1，业务2，业务3的后面】我就在这加个选项卡好加吧？别的都不动。<br>开发：那好加，那你这个选项卡里放什么啊？<br>产品：就是那天说的那个，因为他们这个数据拿不到，有能拿到的，但是你只要把业务1这个地方的限制去掉，然后把这4项删除，然后他们没有这两项，其他的我都不变，业务1里的业务点1和3和4都不变，我还要，还有业务2里的2，3，5，6，7的能力放进来，然后再把数据源上加一个限制就行了,限制不加也行，虽然他们现在也是这么用的，并且，业务1的后续关联的业务4业务5业务6业务7也这个也都要，但就是里面的内容跟这些不一样，这样是不是就简单了？<br>开发：那你这个东西放哪呢？<br>产品：就放这个啊，你再加个选项卡就行了，很简单的。<br>开发：对，但是你这不还是一个新的业务吗，跟业务1和业务2都不一样。<br>产品：对，但是我就要个选项卡给它放这就行了。<br>开发：你没明白，你这个选项卡叫什么，它不在业务1里，也不在业务2里，并且跟这俩的内容和限制条件也不一样，后续的流程也不不一样，我总要有个操作和数据存放的地方吧？<br>产品：你说底层实现啊<br>开发：就算不说底层的，你这个地方和其他的哪都不挨着，既不是业务1也不是业务2啊<br>产品：我以为放个选项卡就行了呢，你的意思还是要设计一套新的是吧。<br>开发：对啊，在不影响我业务1和业务2的使用的情况下，无法兼容你的这套东西，所以这肯定是一个新的产品。<br>产品：啊，这样啊，你这么说我就明白了。</p><p>开发2：这个产品不是带着设计聘过来的吗？<br>开发：设计呢？</p><hr><p>开发1：国内有哪个岛适合养老<br>开发2：我想回家放羊</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;业务方，产品，开发的互相认知总是不一样的。&lt;/p&gt;
&lt;p&gt;0月15日 周一&lt;br&gt;开发：有需求可以提前说，这样能提前准备开发这边的排期。&lt;br&gt;产品：好的&lt;br&gt;0月19日 周五&lt;br&gt;产品：这个需求业务方已经提了两个月了，今天来催了，问怎么还没上线。&lt;br&gt;开发：开需求会</summary>
      
    
    
    
    
    <category term="开发" scheme="https://oujun.work/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="日常" scheme="https://oujun.work/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="产品" scheme="https://oujun.work/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>给Hexo Theme Fluid 主题增加相册功能</title>
    <link href="https://oujun.work/2021/08/01/Hexo-Theme-Fluid-Add-Gallery.html"/>
    <id>https://oujun.work/2021/08/01/Hexo-Theme-Fluid-Add-Gallery.html</id>
    <published>2021-08-01T11:17:26.000Z</published>
    <updated>2024-01-31T03:35:57.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Fluid主题中与图集功能，但是直接用来做相册效果并不大好，不知道是不是我的用法的问题，使用了图集的相册页面fancybox会失效，但是hexo也没有相册插件，很多都是直接的相册主题，当然，主打轻盈的hexo用来做相册，也许违背了它的初衷。随后在Fluid的文档中发现了hexo 5的新功能，<a href="https://hexo.fluid-dev.com/posts/hexo-injector/">注入器</a></p><h1 id="注入器"><a href="#注入器" class="headerlink" title="注入器"></a>注入器</h1><p>Hexo 注入器是 Hexo 5 版本加入的一项新功能，注入器可以将静态代码片段注入生成的HTML 的 <head> 和 <body> 中。这部分不做过多的介绍了。</p><p>有了这个功能，便可以在不破坏原主题的情况下增加功能，而且以后即使更换主题也不受影响。</p><h2 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h2><p>在根目录下创建一个<code>scripts</code>文件夹，该文件夹与<code>source</code>和<code>themes</code>处于同一层级，然后在<code>scripts</code>目录下创建一个<code>injector.js</code>文件，其中编辑其内容为:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;head_end&#x27;</span>, <br><span class="hljs-string">`</span><br><span class="hljs-string">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css&quot;&gt;</span><br><span class="hljs-string">&lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/justifiedGallery.min.css&quot; /&gt;</span><br><span class="hljs-string">`</span>,<br><span class="hljs-string">&#x27;gallery&#x27;</span>)<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;body_end&#x27;</span>, <br><span class="hljs-string">`</span><br><span class="hljs-string">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">  &lt;script src=&quot;/assets/jquery.justifiedGallery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">  &lt;script src=&quot;/assets/gallery.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">`</span>,<br><span class="hljs-string">&#x27;gallery&#x27;</span>)<br></code></pre></td></tr></table></figure><p>这里的<code>/assets/</code>路径是我在<code>source</code>文件夹下创建的，里面用来放一些css文件和js文件。</p><p>最后一个参数<code>&#39;gallery&#39;</code>表示的是用在那个布局下，可以任意写，这个布局体现在<code>index.md</code>中的<code>layout:</code>,例如:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 相册<br>date: 2021-07-29 15:52:59<br><span class="hljs-section">layout: gallery</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>这段代码的意思是在<code>&lt;/head&gt;</code>前面插入两个css文件的引用和在<code>&lt;/body&gt;</code>前面插入三个js文件的引用，其中<a href="https://miromannino.github.io/Justified-Gallery/">justifiedGallery</a>是自动生成瀑布流的插件，下载下来后都放到<code>/source/assets</code>下，接下来编辑<code>gallery.js</code></p><h2 id="gallery-js"><a href="#gallery-js" class="headerlink" title="gallery.js"></a>gallery.js</h2><p>理想状态是自动读取目录下的图片，然后生成相册，后来发现那样有些麻烦，我的风格就是用最简单的方式快捷实现需求并且容易维护，所以采用了一些常见的使用json的方式来实现，这个文件中就是找到主题中的<code>&lt;article class=&quot;page-content&quot;&gt;</code>部分，然后使用js插入从json中读出来的照片，输出成a标签和图片表情，并支持fancybox图集的形式，然后调用前面引用的<code>justifiedGallery</code>来生成瀑布流。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    el = $(<span class="hljs-string">&quot;article.page-content&quot;</span>);<br>    <span class="hljs-keyword">if</span> (el !== <span class="hljs-literal">undefined</span>) &#123;<br>        el.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;data.json&#x27;</span>)<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.<span class="hljs-title function_">json</span>())<br>            .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>                galleryContent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>                galleryContent.<span class="hljs-property">id</span> = <span class="hljs-string">&quot;gallery-content&quot;</span>;<br>                galleryContent.<span class="hljs-property">class</span> = <span class="hljs-string">&quot;justified-gallery&quot;</span>;<br>                <span class="hljs-keyword">function</span> <span class="hljs-title function_">renderGallery</span>(<span class="hljs-params">node</span>) &#123;<br>                    <span class="hljs-keyword">if</span> (node.<span class="hljs-property">contents</span> !== <span class="hljs-literal">undefined</span> &amp;&amp; node.<span class="hljs-property">contents</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>                        node.<span class="hljs-property">contents</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">sd</span> =&gt;</span> &#123;<br>                            imgUrl = node.<span class="hljs-property">name</span> + <span class="hljs-string">&#x27;/&#x27;</span> + sd.<span class="hljs-property">name</span>;<br>                            imgThumbUrl = node.<span class="hljs-property">name</span> + <span class="hljs-string">&#x27;/thumbnails/thumb_&#x27;</span> + sd.<span class="hljs-property">name</span>;<br>                            galleryContent.<span class="hljs-property">innerHTML</span> += <span class="hljs-string">`</span><br><span class="hljs-string">                                &lt;a  href=&quot;`</span>+ imgUrl + <span class="hljs-string">`&quot; data-fancybox=&quot;images&quot;&gt;</span><br><span class="hljs-string">                                    &lt;img src=&quot;`</span>+ imgThumbUrl + <span class="hljs-string">`&quot;&gt;</span><br><span class="hljs-string">                                &lt;/a&gt;</span><br><span class="hljs-string">                            `</span>;<br>                        &#125;);<br>                    &#125;<br>                &#125;<br>                data.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> <span class="hljs-title function_">renderGallery</span>(d) );<br>                el.<span class="hljs-title function_">append</span>(galleryContent);<br>                $(<span class="hljs-string">&#x27;#gallery-content&#x27;</span>).<span class="hljs-title function_">justifiedGallery</span>(&#123; <span class="hljs-attr">rowHeight</span>: <span class="hljs-number">150</span>, <span class="hljs-attr">margins</span>: <span class="hljs-number">5</span> &#125;);<br>            &#125;);<br>    &#125;<br>&#125;)();<br><br><br></code></pre></td></tr></table></figure><h1 id="相册的用法"><a href="#相册的用法" class="headerlink" title="相册的用法"></a>相册的用法</h1><h2 id="创建相册页面"><a href="#创建相册页面" class="headerlink" title="创建相册页面"></a>创建相册页面</h2><p>上面的准备工作基本上就做完了，接下来就是使用了，我们先创建一个<code>hexo new page gallery</code>,然后手动增加一行<code>layout: gallery</code>就是下面这个样子。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 相册<br>date: 2021-07-29 15:52:59<br><span class="hljs-section">layout: gallery</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><h2 id="添加相册缩略图"><a href="#添加相册缩略图" class="headerlink" title="添加相册缩略图"></a>添加相册缩略图</h2><p>然后我们在gallery下创建一个文件夹比如<code>harbin</code>然后将我们分类的照片都放进去，因为我使用的是github，而且，照片都是原图，一个页面中直接显示会特别的慢，于是我就自己创建缩略图，这是需要用到<code>apt install imagemagick</code>，然后再<code>harbin</code>文件夹中创建一个文件<code>convert_thumb.sh</code>填入如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>for i in *.jpg<br>do<br>    echo &quot;生成缩略图 $i ...&quot;<br>    convert -thumbnail 480 $i ./thumbnails/thumb_$i<br>done<br></code></pre></td></tr></table></figure><p>每当harbin中新增图片的时候就执行一下它，就自动在<code>thumbnails</code>下创建了<code>thumb_</code>开头的缩略图了。</p><h2 id="生成data-json"><a href="#生成data-json" class="headerlink" title="生成data.json"></a>生成data.json</h2><p>我想到了<code>tree</code>正好新版本的有<code>tree -J</code> 可以直接生成<code>data.json</code>,在<code>gallery</code>文件夹下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tree 图片文件夹/ -I &#x27;*.sh&#x27; -J &gt; data.json<br></code></pre></td></tr></table></figure><p>我们得到了data.json文件，还需要稍微编辑一下，其实也可以直接用的，作为那种分类相册，我这里就直接编辑成单个相册的，所以去掉外层的没用信息，去掉非图片的内容，想下面这样的结构：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>  <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;directory&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;harbin&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;contents&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      ...<br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>我还去掉了缩略图文件的部分，因为也用不上。</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>至此，发布后就可以使用了，默认展示瀑布流是用的缩略图，单击打开的fancybox使用的是原图，注入器这样还可以有更多的玩法的，并且，由于懒的原因，我也没有更加的细化，以后可能会将这个改造单页面中的分类相册的形式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Fluid主题中与图集功能，但是直接用来做相册效果并不大好，不知道是不是我的用法的问题，使用了图集的相册页面fancybox会失效，但是he</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://oujun.work/tags/Hexo/"/>
    
    <category term="主题" scheme="https://oujun.work/tags/%E4%B8%BB%E9%A2%98/"/>
    
    <category term="相册" scheme="https://oujun.work/tags/%E7%9B%B8%E5%86%8C/"/>
    
  </entry>
  
</feed>
