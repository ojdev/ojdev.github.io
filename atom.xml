<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>狐狸的后山</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ojdev.github.io/"/>
  <updated>2021-01-13T10:53:06.884Z</updated>
  <id>https://ojdev.github.io/</id>
  
  <author>
    <name>欧俊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于在Windows中使用Terminal连接SSH登录远程机器中的docker容器中使用kubectl管理集群的那些事</title>
    <link href="https://ojdev.github.io/2021/01/13/%E5%9C%A8docker%E4%B8%AD%E4%BD%BF%E7%94%A8kubectl/"/>
    <id>https://ojdev.github.io/2021/01/13/在docker中使用kubectl/</id>
    <published>2021-01-13T10:23:08.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>不知道为什么我的<code>Windows 10</code>安装了<code>wsl2</code>后，会莫名其妙的失踪，各种检查都没问题，我怀疑可能处在<code>软raid</code>的问题上，但是不的又不影响。但是这又影响到了我日常的工作，所以我就想，在<code>nas</code>上用<code>docker</code>部署一个<code>kubectl</code>，然后通过远程访问，这样不用在本地安装任何东西了。</p><p>经过将近一天的实验，终于搞定了，用W<code>indows Terminal</code>作为终端，远程通过<code>ssh</code>连接到<code>nas</code>运行<code>docker exec</code>进入容器的终端，中间经历了如何安装<code>bash-completion</code>的过程，最后几乎完美。</p><p>镜像选用<a href="https://hub.docker.com/_/bash">https://hub.docker.com/_/bash</a>,13.6MB十分小巧。</p><p><code>kubectl</code>直接<a href="https://kubernetes.io/zh/docs/tasks/tools/install-kubectl/">https://kubernetes.io/zh/docs/tasks/tools/install-kubectl/</a>下载到<code>nas</code>的一个路径中例如我放在了<code>/nas/opt/kubectl/</code>下面。</p><h1 id="docker-compose-yaml的内容"><a href="#docker-compose-yaml的内容" class="headerlink" title="docker-compose.yaml的内容"></a>docker-compose.yaml的内容</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">kubectltest:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bash:5.1.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kubectltest</span></span><br><span class="line">    <span class="attr">user:</span> <span class="number">0</span><span class="string">:0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">KUBECONFIG=/.kube/config</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;apk add bash-completion &amp;&amp; echo &#x27;source /usr/share/bash-completion/bash_completion&#x27;&gt; ~/.bashrc &amp;&amp; mkdir /etc/bash_completion.d &amp;&amp; kubectl completion bash &gt;/etc/bash_completion.d/kubectl &amp;&amp; tail -f /dev/null&quot;</span>]</span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/kubectl/config/test:/.kube</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/kubectl/kubectl:/usr/local/bin/kubectl</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.3&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">128M</span></span><br><span class="line">  <span class="attr">kubectlpre:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bash:5.1.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kubectlpre</span></span><br><span class="line">    <span class="attr">user:</span> <span class="number">0</span><span class="string">:0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">KUBECONFIG=/.kube/config</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;apk add bash-completion &amp;&amp; echo &#x27;source /usr/share/bash-completion/bash_completion&#x27;&gt; ~/.bashrc &amp;&amp; mkdir /etc/bash_completion.d &amp;&amp; kubectl completion bash &gt;/etc/bash_completion.d/kubectl &amp;&amp; tail -f /dev/null&quot;</span>]</span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/kubectl/config/pre:/.kube</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/kubectl/kubectl:/usr/local/bin/kubectl</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.3&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">128M</span></span><br></pre></td></tr></table></figure><p><code>bash</code>的镜像里竟然直接带了<code>apk</code>的包管理器这是我没想到的，真的小巧灵活好用，上面command里:</p><ol><li>装bash-completion</li><li>把source /usr/share/bash-completion/bash_completion写入到 ~/.bashrc，每次登陆后就可以直接使用kubectl自动提示</li><li>创建目录 mkdir /etc/bash_completion.d 用来存放自动提示文件</li><li>kubectl completion bash &gt;/etc/bash_completion.d/kubectl 写入自动提示</li><li>tail -f /dev/null 保持容器运行</li></ol><p><code>/nas/opt/kubectl/config/pre</code>存放的是<code>config</code>文件,我平时要管理多个集群，所以我这里又多个目录。</p><h1 id="Windows-Terminal-配置"><a href="#Windows-Terminal-配置" class="headerlink" title="Windows Terminal 配置"></a>Windows Terminal 配置</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2534&#125;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;测试环境&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;ssh -t root@192.168.0.250 \&quot;/bin/docker exec -it kubectltest bash\&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;ms-appx:///ProfileIcons/&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;.png&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;colorScheme&quot;</span>: <span class="string">&quot;Vintage&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2535&#125;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;预发布环境&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;ssh -t root@192.168.0.250 \&quot;/bin/docker exec -it kubectlpre bash\&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;ms-appx:///ProfileIcons/&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;.png&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;colorScheme&quot;</span>: <span class="string">&quot;One Half Light&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>重点在哪个<code>ssh -t</code>，不然会进不去，这样就完成了一个在本地打开终端直接进入到<code>nas</code>里的<code>docker</code>容器中进行<code>kubectl</code>管理集群的套娃操作。</p><h1 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h1><ol><li>远程连接的时候<code>ssh</code>的<code>-t</code>参数是<code>tty</code>的意思，不加这个参数后面的<code>docker exec -it</code>会报<code>the input device is not a TTY</code>错，进不去的。</li><li><code>docker-compose.yml</code>中的<code>command</code>节点中多条命令用<code>&amp;&amp;</code>分隔，如果是<code>&amp;</code>分隔，或造成命令并行执行，前一个还没结束，后一个就执行完了。</li></ol><h1 id="遗憾"><a href="#遗憾" class="headerlink" title="遗憾"></a>遗憾</h1><p>如果能用<code>webshell</code>直接使用<code>docker exec</code>就更好了，即节省了本地空间，又可以给组内的人一起使用。找到了一个<code>docker-exec-web-control</code>项目，是3年前的了，跑起来后并不能用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知道为什么我的&lt;code&gt;Windows 10&lt;/code&gt;安装了&lt;code&gt;wsl2&lt;/code&gt;后，会莫名其妙的失踪，各种检查都没问题，我怀疑可能处在&lt;code&gt;软raid&lt;/code&gt;的问题上，但是不的又不影响。但是这又影响到了我日常的工作，所以我就想，在&lt;code
      
    
    </summary>
    
      <category term="DevOps" scheme="https://ojdev.github.io/categories/DevOps/"/>
    
    
      <category term="Docker" scheme="https://ojdev.github.io/tags/Docker/"/>
    
      <category term="kubectl" scheme="https://ojdev.github.io/tags/kubectl/"/>
    
      <category term="远程管理" scheme="https://ojdev.github.io/tags/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>家庭服务管理：NAS</title>
    <link href="https://ojdev.github.io/2021/01/07/nas/"/>
    <id>https://ojdev.github.io/2021/01/07/nas/</id>
    <published>2021-01-07T04:28:09.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-一个NAS都应该能做什么"><a href="#1-一个NAS都应该能做什么" class="headerlink" title="1 一个NAS都应该能做什么"></a>1 一个NAS都应该能做什么</h1><p>我是一个经历了家庭互联网从无到有的人，小的时候家里有个电视就算是富裕家庭了，一般的家庭还仅限于有个收音机；后来逐渐的，电视，彩色电视，电话，录像机，那个时候还有一种叫录像厅的地方呢，又租录像带的地方，5毛钱一周；然后出现了VCD，DVD，大哥大，BB机，掌中宝娱乐的东西月亮来越丰富。</p><p>之后我到外面上高中，那是2002年，那个时候已经有网吧了，但是电脑还不是普通家庭可以承受的。</p><p>等到我上了大学的时候，就到了2005年，彼时，小灵通还有一席之地，网吧遍地开花，上网一个电话，车接车送，包夜5元还送面包和可乐。但是学校里有笔记本的同学依然是少数，很多时候大家还是用U盘和MP3，MP4来互相拷贝东西，移动硬盘由于造假比较高，并不普及，而且，120G的都算是大容量存储了。</p><p>等毕业后，移动硬盘算是比较普及的，但是依然不大，320G和500G的都算大容量了，因为那个年代，资源的体积也是很小的。</p><p>逐渐的，很多东西变成了消费品，手机的普及，家庭宽带的普及，3G的出现和4G的升级，互联网才开始完全平民化，我个人来讲，3G的出现时一个转折点，4G的出现让很多想法得以实现。资源的质量也越来越高，以前的120p的资源，到后来的480，然后进化到720p，1080p;后来之间开始普及的2k，4k，蓝光等。存储空间也开始越来越便宜，从1T的hdd到现在消费级别的1T的ssd。</p><p>手机，电视，电脑，这是家庭的网络基础互联装备，以前一个硬盘到处插不觉得麻烦，现在建个网路共享我都觉得不方便，所以逐渐的，开始了NAS的路线。</p><p>NAS所需的功能，和是否需要NAS都是看个人和家庭的需求是否有必要，否则就是吃灰的产品。那么一个NAS，对我来讲需要一下的功能。</p><h2 id="1-1-流媒体"><a href="#1-1-流媒体" class="headerlink" title="1.1 流媒体"></a>1.1 流媒体</h2><p>彼时靠文件夹来分辨时什么电影，什么电视剧等等，资源混在一起，或者分成不同目录，甚至不同的硬盘装不同的东西，但是看的时候依然麻烦，而且目前网页观看也成为了大家容易接收的方式，以前电脑必装的千千静听，realplayer,xmplaoer,potplayer等等播放器，如今也变的少有人问。所以，流媒体服务就成为了一个比骄傲基础的功能，应该能够做到，海报，简介，自动下载字幕，播放，分类这些基础的功能，下面是能够满足这几项条件的推荐。</p><ul><li>Jellyfin</li></ul><p>免费，开源，.Net Core，有TV端，Android端，网页端，PC端，而且，都免费，但是有点小缺点，就是硬解，遇到不支持的格式的就会强制硬解，而且使用服务端硬解，而不会使用本地硬解。</p><ul><li>Emby</li></ul><p>Jellyfin就是从这分家的，因为Emby有收费订阅，TV端就需要订阅，其他的几乎一样。据说硬解能力比Jellyfin强。</p><ul><li>Plex</li></ul><p>这是个很强的产品，大部分都推荐的，但是，订阅后体检更好。TV，手机端都需要订阅后才能用，这个好像是本地硬解，不占用服务器资源，只用了一次，所以不是很确定。</p><ul><li>elfilm</li></ul><p><a href="http://getelfilm.com/">http://getelfilm.com/</a></p><h2 id="1-2-下载"><a href="#1-2-下载" class="headerlink" title="1.2 下载"></a>1.2 下载</h2><ul><li>qBittorrent</li></ul><p>同时满足了BT下载和挂PT的需求，以前一直都是使用aria2的，但是aria2下载BT和PT需要单独的配置，不能一个端直接满足，所以，最后还是使用了这个。</p><ul><li>aria2</li></ul><p>老牌下载工具</p><ul><li>百度云</li></ul><p>也可以有。</p><h2 id="1-3-Home-Assistant"><a href="#1-3-Home-Assistant" class="headerlink" title="1.3 Home Assistant"></a>1.3 Home Assistant</h2><p>基础的家庭物联网工具，我是比较早接触智能家居设备的，这也导致了我家的产品比较割裂，空气净化器是，空调是格力的，扫地机是小米的，电视是乐视的，可视猫眼是叮咚，门锁是美的，有了HomeAssistant后，可以将其中一部分整合到上面。</p><h2 id="1-4-旁路网关"><a href="#1-4-旁路网关" class="headerlink" title="1.4 旁路网关"></a>1.4 旁路网关</h2><p>流畅的网络体验。</p><h2 id="1-5-文件共享"><a href="#1-5-文件共享" class="headerlink" title="1.5 文件共享"></a>1.5 文件共享</h2><p>Linux下比较流行的就是SMB，但是下载看来，好像并不是常用的了。</p><h2 id="1-6-可扩展性"><a href="#1-6-可扩展性" class="headerlink" title="1.6 可扩展性"></a>1.6 可扩展性</h2><h3 id="1-6-1-Docker"><a href="#1-6-1-Docker" class="headerlink" title="1.6.1 Docker"></a>1.6.1 Docker</h3><h4 id="1-6-1-1-Home-Assistant"><a href="#1-6-1-1-Home-Assistant" class="headerlink" title="1.6.1.1 Home Assistant"></a>1.6.1.1 Home Assistant</h4><p>家庭物联网</p><h4 id="1-6-1-2-qBittorrent"><a href="#1-6-1-2-qBittorrent" class="headerlink" title="1.6.1.2 qBittorrent"></a>1.6.1.2 qBittorrent</h4><p>既满足bt又能满足pt</p><h4 id="1-6-1-3-Jellyfin"><a href="#1-6-1-3-Jellyfin" class="headerlink" title="1.6.1.3 Jellyfin"></a>1.6.1.3 Jellyfin</h4><p>多端免费的媒体管理，自动刮削，硬解。</p><h4 id="1-6-1-4-签到"><a href="#1-6-1-4-签到" class="headerlink" title="1.6.1.4 签到"></a>1.6.1.4 签到</h4><p>免去了每天手动签到的麻烦过程</p><h4 id="1-6-1-5-百度云"><a href="#1-6-1-5-百度云" class="headerlink" title="1.6.1.5 百度云"></a>1.6.1.5 百度云</h4><h3 id="1-6-2-虚拟机"><a href="#1-6-2-虚拟机" class="headerlink" title="1.6.2 虚拟机"></a>1.6.2 虚拟机</h3><h4 id="1-6-2-1-windows"><a href="#1-6-2-1-windows" class="headerlink" title="1.6.2.1 windows"></a>1.6.2.1 windows</h4><p>挂游戏</p><h4 id="1-6-2-2-linux"><a href="#1-6-2-2-linux" class="headerlink" title="1.6.2.2 linux"></a>1.6.2.2 linux</h4><p>我用来ssh，远程管理k8s。</p><h2 id="1-7-云"><a href="#1-7-云" class="headerlink" title="1.7 云"></a>1.7 云</h2><ul><li>Nextcloud</li></ul><h2 id="1-8-ZeroTier"><a href="#1-8-ZeroTier" class="headerlink" title="1.8 ZeroTier"></a>1.8 ZeroTier</h2><ul><li>异地访问</li><li>VPN直连</li></ul><h2 id="1-9-选用什么系统？"><a href="#1-9-选用什么系统？" class="headerlink" title="1.9 选用什么系统？"></a>1.9 选用什么系统？</h2><h3 id="1-9-1-群晖"><a href="#1-9-1-群晖" class="headerlink" title="1.9.1 群晖"></a>1.9.1 群晖</h3><h4 id="1-9-1-1-黑群晖"><a href="#1-9-1-1-黑群晖" class="headerlink" title="1.9.1.1 黑群晖"></a>1.9.1.1 黑群晖</h4><p>内网穿透、稳定的应用（也不一定）、同步、备份。<br>虽然免费，但是升级什么的比较麻烦。</p><h4 id="1-9-1-2-白群晖"><a href="#1-9-1-2-白群晖" class="headerlink" title="1.9.1.2 白群晖"></a>1.9.1.2 白群晖</h4><p>内网穿透、稳定的应用（也不一定）、同步、备份、稳定、可升级、贵。</p><p>我觉得性价比不高。</p><h3 id="1-9-2-ProxmoxVE（推荐★★★★★）"><a href="#1-9-2-ProxmoxVE（推荐★★★★★）" class="headerlink" title="1.9.2 ProxmoxVE（推荐★★★★★）"></a>1.9.2 ProxmoxVE（推荐★★★★★）</h3><p>其本质上是一个Debian系统，用起来熟悉。</p><h4 id="1-9-2-1-zfs存储"><a href="#1-9-2-1-zfs存储" class="headerlink" title="1.9.2.1 zfs存储"></a>1.9.2.1 zfs存储</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ls -l /dev/disk/by-id/</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx 1 root root  9 Dec 30 10:29 ata-SCWW_SSD_16G_0000000000000 -&gt; ../../sda</span><br><span class="line">lrwxrwxrwx 1 root root 10 Dec 30 10:29 ata-SCWW_SSD_16G_0000000000000-part1 -&gt; ../../sda1</span><br><span class="line">lrwxrwxrwx 1 root root 10 Dec 30 10:29 ata-SCWW_SSD_16G_0000000000000-part2 -&gt; ../../sda2</span><br><span class="line">lrwxrwxrwx 1 root root 10 Dec 30 10:29 ata-SCWW_SSD_16G_0000000000000-part3 -&gt; ../../sda3</span><br><span class="line">lrwxrwxrwx 1 root root  9 Dec 30 10:29 ata-ST99999999-******-****** -&gt; ../../sdc</span><br><span class="line">lrwxrwxrwx 1 root root  9 Dec 30 10:29 ata-TOSHIBA_******_****** -&gt; ../../sdb</span><br><span class="line"></span><br><span class="line"><span class="comment">#raid-0</span></span><br><span class="line">zpool create -f -o ashift=12 nas /dev/disk/by-id/ata-ST99999999-******-****** /dev/disk/by-id/ata-TOSHIBA_******_******</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加新硬盘</span></span><br><span class="line">zpool attach nas /dev/disk/by-id/ata-ST88888888-******-******</span><br></pre></td></tr></table></figure><p>上面完成后会在根目录下生成一个nas文件夹，就是存储池的空间了。</p><p>软raid<br>创建存储池<br>做为目录</p><h4 id="1-9-2-2-软路由"><a href="#1-9-2-2-软路由" class="headerlink" title="1.9.2.2 软路由"></a>1.9.2.2 软路由</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk 100 /nas/20201229-Ipv4P-Mini-x86-64-generic-squashfs-combined-efi.img nas-local</span><br></pre></td></tr></table></figure><h4 id="1-9-2-3-lxc"><a href="#1-9-2-3-lxc" class="headerlink" title="1.9.2.3 lxc"></a>1.9.2.3 lxc</h4><p>做软路由<br>虚拟机</p><h3 id="1-9-3-FreeNAS（推荐★★★）"><a href="#1-9-3-FreeNAS（推荐★★★）" class="headerlink" title="1.9.3 FreeNAS（推荐★★★）"></a>1.9.3 FreeNAS（推荐★★★）</h3><p>免费</p><h3 id="1-9-4-OMV（OpenMediaVault）"><a href="#1-9-4-OMV（OpenMediaVault）" class="headerlink" title="1.9.4 OMV（OpenMediaVault）"></a>1.9.4 OMV（OpenMediaVault）</h3><p>免费、功能过于基础。</p><h3 id="1-9-5-Windows-Server（推荐★★★★）"><a href="#1-9-5-Windows-Server（推荐★★★★）" class="headerlink" title="1.9.5 Windows Server（推荐★★★★）"></a>1.9.5 Windows Server（推荐★★★★）</h3><p>免费，这点可能很多人不知道，Windows Server Core是有免费版本的。只是没有桌面环境，但是已经Windows Server了，桌面环境除了浪费空间和资源外，真的就没什么用了。</p><p>HyperV可以直接使用<a href="https://www.microsoft.com/zh-cn/windows-server/windows-admin-center">Windows Admin Center</a>可以直接进行管理，也可以使用Windows10 的hyper-V远程管理。</p><p>硬件直通对硬件本身要求较高，但是一般也够用了。</p><p>用起来操作很熟悉。</p><h3 id="1-9-6-Ubuntu-Server"><a href="#1-9-6-Ubuntu-Server" class="headerlink" title="1.9.6 Ubuntu Server"></a>1.9.6 Ubuntu Server</h3><h3 id="1-9-7-UNRAID"><a href="#1-9-7-UNRAID" class="headerlink" title="1.9.7 UNRAID"></a>1.9.7 UNRAID</h3><p>据说硬件直通性能非常好，但是收费，虽然有破解版。</p><h3 id="1-9-8-ESXI"><a href="#1-9-8-ESXI" class="headerlink" title="1.9.8 ESXI"></a>1.9.8 ESXI</h3><p>老牌。</p><h2 id="1-10-硬件上最好有什么？"><a href="#1-10-硬件上最好有什么？" class="headerlink" title="1.10 硬件上最好有什么？"></a>1.10 硬件上最好有什么？</h2><h3 id="1-10-1-网卡"><a href="#1-10-1-网卡" class="headerlink" title="1.10.1 网卡"></a>1.10.1 网卡</h3><ul><li>千兆</li><li>万兆<h3 id="1-10-2-Raid卡"><a href="#1-10-2-Raid卡" class="headerlink" title="1.10.2 Raid卡"></a>1.10.2 Raid卡</h3></li><li>多硬盘，也可以用软raid<h3 id="1-10-3-热插拔"><a href="#1-10-3-热插拔" class="headerlink" title="1.10.3 热插拔"></a>1.10.3 热插拔</h3></li><li>多盘位<h3 id="1-10-4-USB3"><a href="#1-10-4-USB3" class="headerlink" title="1.10.4 USB3"></a>1.10.4 USB3</h3></li><li>打印机<h3 id="1-10-5-DC电源"><a href="#1-10-5-DC电源" class="headerlink" title="1.10.5 DC电源"></a>1.10.5 DC电源</h3></li><li>静音<h3 id="1-10-6-1-N块硬盘"><a href="#1-10-6-1-N块硬盘" class="headerlink" title="1.10.6 1+N块硬盘"></a>1.10.6 1+N块硬盘</h3></li><li>组RAID</li></ul><h1 id="2-NAS服务管理"><a href="#2-NAS服务管理" class="headerlink" title="2 NAS服务管理"></a>2 NAS服务管理</h1><h2 id="2-1-Jellyfin"><a href="#2-1-Jellyfin" class="headerlink" title="2.1 Jellyfin"></a>2.1 Jellyfin</h2><h3 id="2-1-1-电影多版本管理"><a href="#2-1-1-电影多版本管理" class="headerlink" title="2.1.1 电影多版本管理"></a>2.1.1 电影多版本管理</h3><p>以<code>Wonder Woman 1984</code>这部电影为例，我的电影都是放在<code>/nas/movies</code>里的,所以目录结构是这样的:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">movies/</span><br><span class="line">└── Wonder.Woman.1984.2020</span><br><span class="line">    ├── Wonder.Woman.1984.2020 - 1080P.mkv</span><br><span class="line">    ├── Wonder.Woman.1984.2020 - 1080P.china.srt</span><br><span class="line">    └── Wonder.Woman.1984.2020 - 2160p.mp4</span><br><span class="line">    └── Wonder.Woman.1984.2020 - 8k.mp4</span><br><span class="line">    └── Wonder.Woman.1984.2020 - 不是导演剪辑版.mp4</span><br><span class="line">    └── Wonder.Woman.1984.2020 - 山寨版.mp4</span><br></pre></td></tr></table></figure><p>根据<code>jellyfin</code>文档显示，当多个不同格式的版本合并起来的时候，需要让文件名与文件夹名保持一直然后再后面加<code>&#123;空格&#125;&#123;连字符&#125;&#123;空格&#125;&#123;版本标签&#125;</code>的形式，这样jellyfin就可以进行识别，在电影的界面中就可以进行版本的切换选择，在这一点上不如plex方便了。 其中标签是可以自定义的，连字符不支持<code>.</code>和空格。</p><p>** 官方的文档中推荐的文件夹名是<code>Wonder.Woman.1984 (2020)</code> ，但是实际使用中我发现<code>Wonder.Woman.1984.2020</code>也是可以的，在文件管理上，名字中带有空格对我来讲会不大习惯，所以可以根据自己习惯选择对名称的管理。</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://jellyfin.org/docs/general/server/media/movies.html">https://jellyfin.org/docs/general/server/media/movies.html</a></li></ul><h3 id="2-1-2-字幕中的方块"><a href="#2-1-2-字幕中的方块" class="headerlink" title="2.1.2 字幕中的方块"></a>2.1.2 字幕中的方块</h3><p>一般的解决方式都是在字幕中进行设置，这种方式是使用转码烧录的形式，对cpu和内存都会进行消耗，对于性能比较低的nas来说，压力很大，比如我的j1900矿渣。目前有一个简单的解决办法，升级到<code>&gt;Jellyfin 10.7.0</code>的版本，目前还是<code>rc</code>版，这个版本支持加载自定义的字体了<code>控制台&gt;播放&gt;备用字体文件路径</code>，就解决了。</p><h2 id="2-2-docker-compose"><a href="#2-2-docker-compose" class="headerlink" title="2.2 docker-compose"></a>2.2 docker-compose</h2><h3 id="2-2-1-安装docker"><a href="#2-2-1-安装docker" class="headerlink" title="2.2 1 安装docker"></a>2.2 1 安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install apt-transport-https</span><br><span class="line">apt upgrade -y</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/debian <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a><h3 id="2-2-2-安装docker-compose"><a href="#2-2-2-安装docker-compose" class="headerlink" title="2.2 2 安装docker-compose"></a>2.2 2 安装docker-compose</h3></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install docker-ce docker-compose</span><br></pre></td></tr></table></figure><h3 id="2-2-3-前期准备"><a href="#2-2-3-前期准备" class="headerlink" title="2.2 3 前期准备"></a>2.2 3 前期准备</h3><p>创建子网隔离，非必须。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create --subnet 10.10.10.0/24 pve-subnet</span><br></pre></td></tr></table></figure><p>该处的<code>pve-subnet</code>对应下面<code>docker-compose.yml</code>文件中<code>networks</code>节点下的<code>name</code>,可以忽略，<code>docker-compose</code>会自动建立。</p><h3 id="2-2-4-为什么使用docker-compose"><a href="#2-2-4-为什么使用docker-compose" class="headerlink" title="2.2 4 为什么使用docker-compose"></a>2.2 4 为什么使用docker-compose</h3><p>docker虽然部署与管理变的容易，但是当遇到版本升级的时候就需要重新使用命令行进行一次部署，然而很多时候我都懒得进行本分，目前工作中使用的是k8s，在家用nas上我觉得实在是没必要，于是比较传统的<code>docker-compose</code>就是一个很好的解决方案。<br>每当有版本升级的时候只要修改<code>docker-compose.yml</code>文件中对应的镜像标签，然后重新docker-compose up -d就自动进行拉取部署升级，不会影响其他未修改配置的镜像，就方便很多了。</p><h2 id="2-3-Home-Assistant"><a href="#2-3-Home-Assistant" class="headerlink" title="2.3 Home Assistant"></a>2.3 Home Assistant</h2><h3 id="2-3-1-调用本地图片"><a href="#2-3-1-调用本地图片" class="headerlink" title="2.3.1 调用本地图片"></a>2.3.1 调用本地图片</h3><p>在<code>configuration.yaml</code>文件的位置建立一个<code>www</code>文件夹，将要引用的文件放进去，在配置文件中使用<code>/local</code>对应的就是<code>www</code>文件夹中的文件，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> blueprints</span><br><span class="line">│   └── automation</span><br><span class="line">│       └── homeassistant</span><br><span class="line">│           ├── motion_light.yaml</span><br><span class="line">│           └── notify_leaving_zone.yaml</span><br><span class="line">├── configuration.yaml</span><br><span class="line">├── deps</span><br><span class="line">├── groups.yaml</span><br><span class="line">├── home-assistant.log</span><br><span class="line">├── home-assistant_v2.db</span><br><span class="line">├── scenes.yaml</span><br><span class="line">├── scripts.yaml</span><br><span class="line">├── secrets.yaml</span><br><span class="line">├── tts</span><br><span class="line">└── www</span><br><span class="line">    └── floorplan.png</span><br></pre></td></tr></table></figure><p>如果要在配置中调用<code>www/floorplan.png</code>则对应的配置文件为:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">picture-elements</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">/local/floorplan.png</span></span><br><span class="line"><span class="attr">elements:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-badge</span></span><br><span class="line">    <span class="attr">entity:</span> <span class="string">binary_sensor.updater</span></span><br><span class="line">    <span class="attr">style:</span></span><br><span class="line">      <span class="attr">top:</span> <span class="number">65</span><span class="string">%</span></span><br><span class="line">      <span class="attr">left:</span> <span class="number">38</span><span class="string">%</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-水位流量采集"><a href="#2-3-2-水位流量采集" class="headerlink" title="2.3.2 水位流量采集"></a>2.3.2 水位流量采集</h3><p>我在天气好的时候会出去钓鱼，但是松花江如果在汛期的时候涨水，有些地方就去不了了，为了不耽误时间，我发现松辽水利网每天8点会发布一次当前的水位流量，所以我进行了采集，这样出门前看一下水位和流速来判断可以去哪个地方钓鱼，避免白跑一趟。</p><p>在<code>configuration.yaml</code>下面加入下面的内容，就可以在面板中加载进来了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sensor:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">scrape</span></span><br><span class="line">    <span class="attr">resource:</span> <span class="string">http://www.slwr.gov.cn/swjgzfw/sssq.asp</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">slwr</span> <span class="string">liuliang</span></span><br><span class="line">    <span class="attr">select:</span> <span class="string">&#x27;script&#x27;</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">scan_interval:</span> <span class="number">3600</span></span><br><span class="line">    <span class="attr">value_template:</span> <span class="string">&gt;-</span></span><br><span class="line">      &#123;&#123; <span class="string">(value</span> <span class="string">|</span> <span class="string">replace</span> <span class="string">(&quot;cvt(&quot;</span>,<span class="string">&quot;&quot;</span><span class="string">)</span> <span class="string">|</span> <span class="string">replace</span> <span class="string">(&quot;);&quot;</span>,<span class="string">&quot;&quot;</span><span class="string">)</span> <span class="string">|</span> <span class="string">replace</span> <span class="string">(&quot;&#x27;&quot;</span>,<span class="string">&quot;&quot;</span><span class="string">)</span> <span class="string">)</span> &#125;&#125;</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">scrape</span></span><br><span class="line">    <span class="attr">resource:</span> <span class="string">http://www.slwr.gov.cn/swjgzfw/sssq.asp</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">slwr</span> <span class="string">shuiwei</span></span><br><span class="line">    <span class="attr">select:</span> <span class="string">&#x27;font&#x27;</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">8</span></span><br><span class="line">    <span class="attr">scan_interval:</span> <span class="number">3600</span></span><br></pre></td></tr></table></figure><h3 id="2-3-3-小米扫地机器人"><a href="#2-3-3-小米扫地机器人" class="headerlink" title="2.3.3 小米扫地机器人"></a>2.3.3 小米扫地机器人</h3><p>第一二代的小米扫地机，使用的是<code>Token</code>的方式加入的，目前有一个简单的工具<a href="https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor">https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor</a> 运行后输入账号密码就可以获取到局域网中的<code>IP</code>和<code>Token</code>、<code>设备Id</code>，我们这里使用<code>IP</code>和<code>Token</code>就够了。<br>获取到信息后，在<code>configuration.yaml</code>下面加入下面的内容，就可以在面板中加载进来了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vacuum:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">xiaomi_miio</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.69</span></span><br><span class="line">    <span class="attr">token:</span> <span class="string">**********************************</span></span><br></pre></td></tr></table></figure><h3 id="2-3-4-格力宁韵空调"><a href="#2-3-4-格力宁韵空调" class="headerlink" title="2.3.4 格力宁韵空调"></a>2.3.4 格力宁韵空调</h3><p><a href="https://github.com/RobHofmann/HomeAssistant-GreeClimateComponent">https://github.com/RobHofmann/HomeAssistant-GreeClimateComponent</a><br>下载最新版本解压后如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">|   climate.yaml</span><br><span class="line">|   configuration.yaml</span><br><span class="line">|   info.md</span><br><span class="line">|   LICENSE</span><br><span class="line">|   README.md</span><br><span class="line">|</span><br><span class="line">+---.github</span><br><span class="line">|   \---ISSUE_TEMPLATE</span><br><span class="line">|           bug_report.md</span><br><span class="line">|           feature_request.md</span><br><span class="line">|</span><br><span class="line">\---custom_components</span><br><span class="line">    \---gree</span><br><span class="line">            climate.py</span><br><span class="line">            manifest.json</span><br><span class="line">            __init__.py</span><br></pre></td></tr></table></figure><p>如果<code>configuration.yaml</code>同级目录下没有<code>custom_components</code>则直接复制进去，如果已经存在，则复制下面的<code>gree</code>到<code>custom_components</code>下，然后在复制<code>climate.yaml</code>到<code>configuration.yaml</code>同级目录,之后编辑``configuration.yaml<code>同级目录加入一行</code>climate: !include climate.yaml`。</p><p>使用<code>格力+</code>接入空调，这样就能在路由器中看到空调的<code>IP</code>和<code>MAC</code>，下面会用到，虽然我是在苏宁购买的，但是苏宁的app实在是不好用，于是下载了<code>格力+</code>，在添加设备的时候直接选择<code>宁韵</code>，然后重置空调的<code>wifi</code>，就可以连接了，如果连不上，那么修改<code>wifi</code>里的<code>2.4G</code>的<code>无线模式</code>为<code>11gb</code>开头的模式。</p><p>之后编辑<code>climate.yaml</code>中的内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">gree</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">起一个名字，例如ningyun_ac</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">空调的IP地址</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7000</span></span><br><span class="line">  <span class="attr">mac:</span> <span class="string">&#x27;空调的MAC地址，可以是-分隔，也可以是:分隔&#x27;</span></span><br><span class="line">  <span class="attr">target_temp_step:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lights:</span> <span class="string">input_boolean.first_ac_lights</span></span><br><span class="line">  <span class="attr">health:</span> <span class="string">input_boolean.first_ac_health</span></span><br><span class="line">  <span class="attr">sleep:</span> <span class="string">input_boolean.first_ac_sleep</span></span><br><span class="line">  <span class="attr">powersave:</span> <span class="string">input_boolean.first_ac_powersave</span></span><br></pre></td></tr></table></figure><h3 id="2-3-x-lovelace"><a href="#2-3-x-lovelace" class="headerlink" title="2.3.x lovelace"></a>2.3.x lovelace</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">我的家</span></span><br><span class="line"><span class="attr">views:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">panel:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">Home</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">&#x27;hass:home-assistant&#x27;</span></span><br><span class="line">    <span class="attr">badges:</span> []</span><br><span class="line">    <span class="attr">cards:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">        <span class="attr">cards:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">weather-forecast</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">weather.bao_li_shang_cheng</span></span><br><span class="line">            <span class="attr">secondary_info_attribute:</span> <span class="string">wind_speed</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">horizontal-stack</span></span><br><span class="line">            <span class="attr">cards:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">entity</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.slwr_liuliang</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">水位</span></span><br><span class="line">                <span class="attr">unit:</span> <span class="string">米</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">entity</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.slwr_shuiwei</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">流量</span></span><br><span class="line">                <span class="attr">unit:</span> <span class="string">立方米</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">picture-elements</span></span><br><span class="line">        <span class="attr">elements:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">vacuum.xiaomi_vacuum_cleaner</span></span><br><span class="line">            <span class="attr">style:</span></span><br><span class="line">              <span class="attr">top:</span> <span class="number">65</span><span class="string">%</span></span><br><span class="line">              <span class="attr">left:</span> <span class="number">35</span><span class="string">%</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">climate.ningyun_ac</span></span><br><span class="line">            <span class="attr">style:</span></span><br><span class="line">              <span class="attr">top:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">              <span class="attr">left:</span> <span class="number">35</span><span class="string">%</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">/local/floorplan.png</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">        <span class="attr">cards:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">thermostat</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">climate.ningyun_ac</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">格力宁韵</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">picture-glance</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">/local/img/vacuum.png</span></span><br><span class="line">            <span class="attr">entities:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">vacuum.xiaomi_vacuum_cleaner</span></span><br><span class="line">            <span class="attr">tap_action:</span></span><br><span class="line">              <span class="attr">action:</span> <span class="string">more-info</span></span><br><span class="line">            <span class="attr">hold_action:</span></span><br><span class="line">              <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">            <span class="attr">title:</span> <span class="string">小米</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">vacuum.xiaomi_vacuum_cleaner</span></span><br></pre></td></tr></table></figure><h2 id="2-4-syncthing"><a href="#2-4-syncthing" class="headerlink" title="2.4 syncthing"></a>2.4 syncthing</h2><p>资源占用小，内网发现，全球发现，内网穿透。</p><p>要注意的是从其他设备同步过来的文件夹，默认情况下会出现在<code>/config</code>下，</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="linux下rename命令进行批量重命名"><a href="#linux下rename命令进行批量重命名" class="headerlink" title="linux下rename命令进行批量重命名"></a>linux下rename命令进行批量重命名</h3><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qbittorrent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/linuxserver/qbittorrent:amd64-latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qbittorrent</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">UMASK_SET=022</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBUI_PORT=8008</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/qbittorrent/config:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas:/downloads</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6969</span><span class="string">:6969</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6969</span><span class="string">:6969/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8008</span><span class="string">:8008</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">200M</span></span><br><span class="line">  <span class="attr">home-assistant:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">homeassistant/home-assistant:2020.12.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">home-assistant</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/opt/home-assistant/config:/config</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">&#x27;host&#x27;</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">200M</span></span><br><span class="line">  <span class="attr">syncthing:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/linuxserver/syncthing</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">syncthing</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">syncthing</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/nas/syncthing:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8384</span><span class="string">:8384</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">22000</span><span class="string">:22000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21027</span><span class="string">:21027/udp</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">256M</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">default:</span></span><br><span class="line">    <span class="attr">external:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">pve-subnet</span></span><br></pre></td></tr></table></figure><p>启动<code>start.sh</code>文件里，直接使用<code>bash start.sh</code>启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --compatibility -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><p>停止了<code>stop.sh</code>文件里，直接使用<code>bash stop.sh</code>停止。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --compatibility down</span><br></pre></td></tr></table></figure><p>增加<code>--compatibility</code>参数是因为docker不是swam的模式的情况下，<code>deploy</code>节点下对资源的限制是不起作用的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-一个NAS都应该能做什么&quot;&gt;&lt;a href=&quot;#1-一个NAS都应该能做什么&quot; class=&quot;headerlink&quot; title=&quot;1 一个NAS都应该能做什么&quot;&gt;&lt;/a&gt;1 一个NAS都应该能做什么&lt;/h1&gt;&lt;p&gt;我是一个经历了家庭互联网从无到有的人，小的时
      
    
    </summary>
    
      <category term="家庭服务" scheme="https://ojdev.github.io/categories/%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="NAS" scheme="https://ojdev.github.io/tags/NAS/"/>
    
      <category term="Jellyfin" scheme="https://ojdev.github.io/tags/Jellyfin/"/>
    
      <category term="Proxmox VE" scheme="https://ojdev.github.io/tags/Proxmox-VE/"/>
    
      <category term="PVE" scheme="https://ojdev.github.io/tags/PVE/"/>
    
      <category term="docker" scheme="https://ojdev.github.io/tags/docker/"/>
    
      <category term="docker-compose" scheme="https://ojdev.github.io/tags/docker-compose/"/>
    
      <category term="homeassistan" scheme="https://ojdev.github.io/tags/homeassistan/"/>
    
      <category term="小米" scheme="https://ojdev.github.io/tags/%E5%B0%8F%E7%B1%B3/"/>
    
      <category term="格力" scheme="https://ojdev.github.io/tags/%E6%A0%BC%E5%8A%9B/"/>
    
      <category term="qBittorrent" scheme="https://ojdev.github.io/tags/qBittorrent/"/>
    
      <category term="松花江" scheme="https://ojdev.github.io/tags/%E6%9D%BE%E8%8A%B1%E6%B1%9F/"/>
    
  </entry>
  
  <entry>
    <title>架构蓝皮书(基础版)</title>
    <link href="https://ojdev.github.io/2019/07/16/Architecture/"/>
    <id>https://ojdev.github.io/2019/07/16/Architecture/</id>
    <published>2019-07-16T05:00:00.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工欲善其事，必先利其器"><a href="#工欲善其事，必先利其器" class="headerlink" title="工欲善其事，必先利其器"></a>工欲善其事，必先利其器</h1><h2 id="云"><a href="#云" class="headerlink" title="云"></a>云</h2><p>首先，当一个团队开始的时候需要有装备，硬件装备是桌椅板凳电脑网络，开发过程中需要测试环境，代码管理工具等。此时，一个局域网内的私有云就够了。但是考虑到外出和在家办公的场景，那么<a href="https://www.aliyun.com/">Aliyun</a>、Google云等这类的线上云是一个更好的选择，而且，再做CI/CD的时候会更方便一些。然而弊端就是需要额外的支出。</p><p>代码管理工具，一般是<a href="https://github.com/">GitHub</a>，<a href="https://about.gitlab.com/">GitLab</a>，<a href="https://azure.microsoft.com/zh-cn/services/devops/">Azure DevOps</a>，这里推荐Azure DevOps。</p><h2 id="敏捷"><a href="#敏捷" class="headerlink" title="敏捷"></a>敏捷</h2><p>一个团队，再项目进程中需要一个合理的管理，节点日期，任务管理分配，时间计算等，一个有效率的团队不应该是一个大的团队，即使有了大的团队，也应该根据不同的场景进行拆分，目前看来，一个敏捷团队再3人以上，7人一下应该是比较合理的，7人以上应该也没问题，但是个人感觉，效率可能会有个折扣。</p><p>敏捷团队要做什么？按照以往的文章与成书中描述，是透明，检验，适应。</p><h3 id="透明"><a href="#透明" class="headerlink" title="透明"></a>透明</h3><p>透明是指在开发环节中保持高度的可见性，所有的成员都应该知道和理解进度和要做的内容。</p><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><p>开发过程中要做到足够的检验，用以确保开发过程中能够及时的发现重大偏差以及错误。</p><h3 id="适应"><a href="#适应" class="headerlink" title="适应"></a>适应</h3><p>在上面的检验中发现了重大的偏差以及错误，那么应该即使的调整并纠正，来检查偏差以及错误带来的损失。</p><h3 id="敏捷怎么做"><a href="#敏捷怎么做" class="headerlink" title="敏捷怎么做"></a>敏捷怎么做</h3><p>敏捷中有3个角色，分别是PO（产品负责人），SM（敏捷大师），Dev（开发人员）。</p><h4 id="产品负责人"><a href="#产品负责人" class="headerlink" title="产品负责人"></a>产品负责人</h4><h4 id="开发团队"><a href="#开发团队" class="headerlink" title="开发团队"></a>开发团队</h4><h4 id="敏捷大师"><a href="#敏捷大师" class="headerlink" title="敏捷大师"></a>敏捷大师</h4><h4 id="误区"><a href="#误区" class="headerlink" title="误区"></a>误区</h4><p>敏捷模式不是万能的，而且不应该为了敏捷而敏捷，在开发过程中，应该根据团队自身情况对敏捷进行调整，例如由PO担任SM的角色也是可以的。</p><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>微服务，将业务划分为最小单位，彼此独立，充分的解耦，语言无关性，一个最小化的服务可以是任意的语言进行开发，采用http或者rpc在服务之间进行交互。部署简单，对某一个服务进行升级的时候不会影响整个环境，甚至在某些集群中可以做到无感切换。</p><p>敏捷是最适合微服务开发的一种模式。</p><h1 id="Azure-DevOps"><a href="#Azure-DevOps" class="headerlink" title="Azure DevOps"></a>Azure DevOps</h1><p><a href="https://azure.microsoft.com/zh-cn/services/devops/">Azure DevOps</a>免费提供线上的版本，好处是一直使用到最新的版本，但是没有足够的本地化，当然也免去了多余的费用。</p><p>另外，<a href="https://azure.microsoft.com/zh-cn/services/devops/">Azure DevOps</a>还提供了<a href="https://go.microsoft.com/fwlink/?LinkId=2041267&clcid=0x804">本地服务器版本</a>,下载后直接在本地的服务器安装就可以使用了。</p><blockquote><p>它能做什么</p><ol><li>它提供了交互较好的板管理，并且很大程度上可以进行自定义</li><li>它有完整的长篇故事，积压工作项，任务，bug的管理</li><li>并且仓储支持Git以及VSTS自身的仓储管理</li><li>而且可以安装很多插件</li><li>还有WebHook可以有一系列的事件触发</li><li>可以接入很多第三方服务</li></ol></blockquote><p>对于使用Visual Studio进行开发的团队，Azure DevOps是一个不二选择。</p><h1 id="DDD"><a href="#DDD" class="headerlink" title="DDD"></a>DDD</h1><p>DDD,被称作为领域驱动设计，做了这么久，其实最大的难点在于聚合根的设计上，总是会出现不恰当的存在。</p><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h1 id="CQRS"><a href="#CQRS" class="headerlink" title="CQRS"></a>CQRS</h1><h2 id="EventSource"><a href="#EventSource" class="headerlink" title="EventSource"></a>EventSource</h2><h1 id="Net-Core"><a href="#Net-Core" class="headerlink" title=".Net Core"></a>.Net Core</h1><h2 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h2><p>.Net Core默认已经支持了健康检查，只要在代码中开启功能就可以了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IServiceProvider <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    services.AddHealthChecks();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app</span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    app.UseHealthChecks(<span class="string">&quot;/hc&quot;</span>, <span class="keyword">new</span> HealthCheckOptions</span><br><span class="line">    &#123;</span><br><span class="line">        ResultStatusCodes =</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="meta">Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Healthy</span>] = StatusCodes.Status200OK,</span><br><span class="line">            [<span class="meta">Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Degraded</span>] = StatusCodes.Status200OK,</span><br><span class="line">            [<span class="meta">Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Unhealthy</span>] = StatusCodes.Status503ServiceUnavailable</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endregion</span>    ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CQRS-1"><a href="#CQRS-1" class="headerlink" title="CQRS"></a>CQRS</h2><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><h2 id="多版本API"><a href="#多版本API" class="headerlink" title="多版本API"></a>多版本API</h2><h2 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h2><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><h3 id="消息中心"><a href="#消息中心" class="headerlink" title="消息中心"></a>消息中心</h3><h2 id="Gateway"><a href="#Gateway" class="headerlink" title="Gateway"></a>Gateway</h2><h1 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h1><h2 id="Docker-Swarm"><a href="#Docker-Swarm" class="headerlink" title="Docker Swarm"></a>Docker Swarm</h2><h2 id="kubernetes"><a href="#kubernetes" class="headerlink" title="kubernetes"></a>kubernetes</h2><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><a href="https://github.com/ojdev/NetCoreTemplate">一个框架</a> 它不一定是对的，但是它有参考价值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;工欲善其事，必先利其器&quot;&gt;&lt;a href=&quot;#工欲善其事，必先利其器&quot; class=&quot;headerlink&quot; title=&quot;工欲善其事，必先利其器&quot;&gt;&lt;/a&gt;工欲善其事，必先利其器&lt;/h1&gt;&lt;h2 id=&quot;云&quot;&gt;&lt;a href=&quot;#云&quot; class=&quot;header
      
    
    </summary>
    
      <category term="DevOps" scheme="https://ojdev.github.io/categories/DevOps/"/>
    
    
      <category term="架构" scheme="https://ojdev.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>windows-terminal</title>
    <link href="https://ojdev.github.io/2019/06/25/windows-terminal/"/>
    <id>https://ojdev.github.io/2019/06/25/windows-terminal/</id>
    <published>2019-06-25T06:04:35.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows-terminal"><a href="#windows-terminal" class="headerlink" title="windows-terminal"></a>windows-terminal</h2><p>windows-terminal发布了，虽然只是预览版，目前还是很简单的部分功能，从windows商店中直接搜windows-terminal就能安装，前提是windows10已经升级1903.</p><h2 id="1903-中的-wsl"><a href="#1903-中的-wsl" class="headerlink" title="1903 中的 wsl"></a>1903 中的 wsl</h2><p>经过一个下午的摸索，大致了解了一些简单的用法，推荐安装wsl版的debian或者ubuntu，开启linux子系统后在windows商店中搜索ubuntu或者debian安装就可以了。安装完成后启动一下，推荐debian，小巧，一共73m，ubuntu18要200多m。</p><p>wsl终端体验也很好，cmd中使用ssh登录经常会出现乱行的问题，wsl中则没有这个现象，而且，目前的wsl中很多操作可以对windows本身进行修改。缺什么也可以指直接使用linux的方式安装，而写windows的秋季更新中的wsl 2.0docker可以与windows中的互通。</p><p>这样一来也免了安装cygwin或者chocolatey了。</p><p>新版的vscode好像也只是直接使用wsl来进行控制台操作了，不过目前好像还是预览版中的功能。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>因为目前没有配置界面，所有的设置都是一个json文档，所以这里稍微的解释一下配置方法。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;globals&quot;</span> : </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;alwaysShowTabs&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;defaultProfile&quot;</span> : <span class="string">&quot;&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40&#125;&quot;</span>, <span class="comment">//profiles节点中的guid，表示默认打开那个命令行</span></span><br><span class="line">        <span class="attr">&quot;initialCols&quot;</span> : <span class="number">120</span>,</span><br><span class="line">        <span class="attr">&quot;initialRows&quot;</span> : <span class="number">30</span>,</span><br><span class="line">        <span class="attr">&quot;keybindings&quot;</span> : </span><br><span class="line">        [</span><br><span class="line">            <span class="comment">//这部分是快捷键</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;requestedTheme&quot;</span> : <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;showTabsInTitlebar&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;showTerminalTitleInTitlebar&quot;</span> : <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;profiles&quot;</span> : </span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;acrylicOpacity&quot;</span> : <span class="number">0.5</span>, <span class="comment">//毛玻璃效果的透明度，推荐0.75</span></span><br><span class="line">            <span class="attr">&quot;background&quot;</span> : <span class="string">&quot;#012456&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;closeOnExit&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span> : <span class="string">&quot;Campbell&quot;</span>, <span class="comment">//对应schemes节点中的配色方案，默认这个算是好看的，其他的还是难看了点</span></span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span> : <span class="string">&quot;powershell.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorShape&quot;</span> : <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontFace&quot;</span> : <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontSize&quot;</span> : <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span> : <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span>, <span class="comment">//id用来做标识</span></span><br><span class="line">            <span class="attr">&quot;historySize&quot;</span> : <span class="number">9001</span>,</span><br><span class="line">            <span class="attr">&quot;icon&quot;</span> : <span class="string">&quot;ms-appx:///ProfileIcons/&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;.png&quot;</span>, <span class="comment">//图标这中间的id不需要与guid对应。</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;Windows PowerShell&quot;</span>, <span class="comment">//显示的名字</span></span><br><span class="line">            <span class="attr">&quot;padding&quot;</span> : <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;snapOnInput&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span> : <span class="string">&quot;%USERPROFILE%&quot;</span>,  <span class="comment">//默认打开命令行窗口定位到的路径</span></span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span> : <span class="literal">true</span>  <span class="comment">//是否打开毛玻璃效果</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;acrylicOpacity&quot;</span> : <span class="number">0.75</span>,</span><br><span class="line">            <span class="attr">&quot;closeOnExit&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span> : <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span> : <span class="string">&quot;cmd.exe&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorShape&quot;</span> : <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontFace&quot;</span> : <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontSize&quot;</span> : <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span> : <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;historySize&quot;</span> : <span class="number">9001</span>,</span><br><span class="line">            <span class="attr">&quot;icon&quot;</span> : <span class="string">&quot;ms-appx:///ProfileIcons/&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;cmd&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;padding&quot;</span> : <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;snapOnInput&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span> : <span class="string">&quot;%USERPROFILE%&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span> : <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;acrylicOpacity&quot;</span> : <span class="number">0.75</span>,</span><br><span class="line">            <span class="attr">&quot;closeOnExit&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span> : <span class="string">&quot;One Half Dark&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span> : <span class="string">&quot;wsl.exe -d Debian&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorShape&quot;</span> : <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontFace&quot;</span> : <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontSize&quot;</span> : <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span> : <span class="string">&quot;&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e40&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;historySize&quot;</span> : <span class="number">9001</span>,</span><br><span class="line">            <span class="attr">&quot;icon&quot;</span> : <span class="string">&quot;ms-appx:///ProfileIcons/&#123;9acb9455-ca41-5af7-950f-6bca1bc9722f&#125;.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;Debian&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;padding&quot;</span> : <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;snapOnInput&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span> : <span class="string">&quot;%USERPROFILE%&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span> : <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;acrylicOpacity&quot;</span> : <span class="number">0.75</span>,</span><br><span class="line">            <span class="attr">&quot;closeOnExit&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span> : <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span> : <span class="string">&quot;wsl.exe -d Debian -u root&quot;</span>,  <span class="comment">//用root用户的形式启动wsl</span></span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorShape&quot;</span> : <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontFace&quot;</span> : <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontSize&quot;</span> : <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span> : <span class="string">&quot;&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e41&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;historySize&quot;</span> : <span class="number">9001</span>,</span><br><span class="line">            <span class="attr">&quot;icon&quot;</span> : <span class="string">&quot;ms-appx:///ProfileIcons/&#123;9acb9455-ca41-5af7-950f-6bca1bc9722f&#125;.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;Debian(root)&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;padding&quot;</span> : <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;snapOnInput&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span> : <span class="string">&quot;%USERPROFILE%&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span> : <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//这个条目是我自己添加的</span></span><br><span class="line">            <span class="attr">&quot;acrylicOpacity&quot;</span> : <span class="number">0.75</span>,</span><br><span class="line">            <span class="attr">&quot;closeOnExit&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;colorScheme&quot;</span> : <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span> : <span class="string">&quot;wsl.exe -d Debian -u root -e ssh root@***.***.***.***&quot;</span>,  <span class="comment">//启动一个ssh，如果在wsl中已经做了免密登录，则会直接进入ssh中</span></span><br><span class="line">            <span class="attr">&quot;cursorColor&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cursorShape&quot;</span> : <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontFace&quot;</span> : <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fontSize&quot;</span> : <span class="number">10</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span> : <span class="string">&quot;&#123;c6eaf9f4-32a7-5fdc-b5cf-066e8a4b1e42&#125;&quot;</span>,<span class="comment">//id修改一下，随便改一下就可以，只要满足guid规则。</span></span><br><span class="line">            <span class="attr">&quot;historySize&quot;</span> : <span class="number">9001</span>,</span><br><span class="line">            <span class="attr">&quot;icon&quot;</span> : <span class="string">&quot;ms-appx:///ProfileIcons/&#123;9acb9455-ca41-5af7-950f-6bca1bc9722f&#125;.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;ssh(root)&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;padding&quot;</span> : <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;snapOnInput&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span> : <span class="string">&quot;%USERPROFILE%&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;useAcrylic&quot;</span> : <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;schemes&quot;</span> : </span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;background&quot;</span> : <span class="string">&quot;#0C0C0C&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;black&quot;</span> : <span class="string">&quot;#0C0C0C&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;blue&quot;</span> : <span class="string">&quot;#0037DA&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightBlack&quot;</span> : <span class="string">&quot;#767676&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightBlue&quot;</span> : <span class="string">&quot;#3B78FF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightCyan&quot;</span> : <span class="string">&quot;#61D6D6&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightGreen&quot;</span> : <span class="string">&quot;#16C60C&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightPurple&quot;</span> : <span class="string">&quot;#B4009E&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightRed&quot;</span> : <span class="string">&quot;#E74856&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightWhite&quot;</span> : <span class="string">&quot;#F2F2F2&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;brightYellow&quot;</span> : <span class="string">&quot;#F9F1A5&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;cyan&quot;</span> : <span class="string">&quot;#3A96DD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;foreground&quot;</span> : <span class="string">&quot;#F2F2F2&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;green&quot;</span> : <span class="string">&quot;#13A10E&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;purple&quot;</span> : <span class="string">&quot;#881798&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;red&quot;</span> : <span class="string">&quot;#C50F1F&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;white&quot;</span> : <span class="string">&quot;#CCCCCC&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;yellow&quot;</span> : <span class="string">&quot;#C19C00&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//其他配色方案</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;windows-terminal&quot;&gt;&lt;a href=&quot;#windows-terminal&quot; class=&quot;headerlink&quot; title=&quot;windows-terminal&quot;&gt;&lt;/a&gt;windows-terminal&lt;/h2&gt;&lt;p&gt;windows-termin
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
      <category term="windows-terminal" scheme="https://ojdev.github.io/tags/windows-terminal/"/>
    
      <category term="wsl" scheme="https://ojdev.github.io/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>在AzureDevops中集成SonarQube</title>
    <link href="https://ojdev.github.io/2019/06/12/SonarQube/"/>
    <id>https://ojdev.github.io/2019/06/12/SonarQube/</id>
    <published>2019-06-12T02:48:13.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.sonarqube.org/">SonarQube</a>是管理代码质量的一个平台，有商业版也可以本地部署。</p><h2 id="部署SonarQube"><a href="#部署SonarQube" class="headerlink" title="部署SonarQube"></a>部署SonarQube</h2><blockquote><p><a href="http://www.sonarqube.org/">SonarQube</a>需要Jdk的支持；</p><p>ElasticSearch是可选的；</p><p>数据库使用jdbc；</p></blockquote><p>本内容使用Docker进行部署</p><h2 id="docker-compose-yaml"><a href="#docker-compose-yaml" class="headerlink" title="docker-compose.yaml"></a>docker-compose.yaml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">CodeQuality.SonarQube:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sonarqube:lts</span>  <span class="comment">##新版，7.x只能对master分支进行分析，需要商业授权</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">codequality-sonarqube</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SONARQUBE_JDBC_USERNAME=$&#123;DB_POSTGRESQL_USER&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SONARQUBE_JDBC_PASSWORD=$&#123;DB_POSTGRESQL_PASS&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SONARQUBE_JDBC_URL=jdbc:postgresql://$&#123;DB_POSTGRESQL_URL_AND_PORT&#125;/sonar</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;2303:9000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;2302:9002&quot;</span>    </span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/etc/timezone:/etc/timezone&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/etc/localtime:/etc/localtime&quot;</span>          </span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><p>这里使用了pgsql。</p><p>部署完成后要进行配置，用admin进行登录，点击右上角头像，选择我的账户-&gt;安全</p><p>在令牌下输入一个令牌名选择”生成”,复制生成的令牌。<br><img src="/images/2019/06/12/1.png"></p><h2 id="AzureDevops"><a href="#AzureDevops" class="headerlink" title="AzureDevops"></a>AzureDevops</h2><p>在AzureDevops中安装<a href="https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube">SonarQube</a></p><p>进入azure devops中，进入项目，进入到设置中的服务连接，新建服务连接中找到SonarQube服务连接，输入任意的名称，Server Url输入http://[部署的地址]:2303,Token输入刚刚生成的令牌，保存即可。<br><img src="/images/2019/06/12/2.png"><br>以.net core生成PR审阅的时候顺便做代码质量检测举例，其他的项目有些麻烦。</p><ol><li>在生成定义中添加任务<code>Prepare Analysis Configuration</code></li><li>在<code>SonarQube Server Endpoint</code>中选择我们刚刚创建的服务连接</li><li>ProjectKey中填入一个名字，推荐使用<code>$(Build.Repository.Name)</code>用仓储的名字</li><li>Project Name可以留空</li><li>Project Version写一个版本号，推荐使用<code>PR$(Build.BuildNumber)</code><br>以上推荐做成任务组。</li></ol><p>继续添加.net core生成过程，Restore、Build、Test、项目路径要选择成解决方案文件。</p><p>然后添加任务<code>Run Code Analysis</code></p><p>添加任务<code>Publish Quality Gate Result</code></p><p>这样，在每次PR生成的时候就会自动去做代码质量检测，商业版授权，会将检测中的不合理内容直接更新到PR中，非商业代理则需要登录SonarQube去查看。</p><p>一下是实际的应用</p><h2 id="定义任务组"><a href="#定义任务组" class="headerlink" title="定义任务组"></a>定义任务组</h2><p><img src="/images/2019/06/12/3.png"><br><img src="/images/2019/06/12/4.png"></p><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p><img src="/images/2019/06/12/5.png"><br><img src="/images/2019/06/12/6.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.sonarqube.org/&quot;&gt;SonarQube&lt;/a&gt;是管理代码质量的一个平台，有商业版也可以本地部署。&lt;/p&gt;
&lt;h2 id=&quot;部署SonarQube&quot;&gt;&lt;a href=&quot;#部署SonarQube&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="DevOps" scheme="https://ojdev.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://ojdev.github.io/tags/DevOps/"/>
    
      <category term="Azure DevOps" scheme="https://ojdev.github.io/tags/Azure-DevOps/"/>
    
      <category term="SonarQube" scheme="https://ojdev.github.io/tags/SonarQube/"/>
    
  </entry>
  
  <entry>
    <title>k8s的环境搭建</title>
    <link href="https://ojdev.github.io/2019/06/03/kubernetes-for-debian/"/>
    <id>https://ojdev.github.io/2019/06/03/kubernetes-for-debian/</id>
    <published>2019-06-03T09:31:00.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>依然是模拟环境，使用windows10的hyperV。</p><p>在虚拟机中安装debian9，只要核心的那种，开openssh的。</p><p>更新debian</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure><h2 id="开启root的ssh登录"><a href="#开启root的ssh登录" class="headerlink" title="开启root的ssh登录"></a>开启root的ssh登录</h2><p>修改<code>/etc/ssh/sshd_config</code>中的 <code>PermitRootLogin</code>为<code>PermitRootLogin yes</code>，保存<br>然后重启<code>/etc/init.d/ssh restart</code><br>非必须</p><h2 id="关闭交换内存"><a href="#关闭交换内存" class="headerlink" title="关闭交换内存"></a>关闭交换内存</h2><blockquote><p>kubernetes 的想法是将实例紧密包装到尽可能接近100％。 所有的部署应该与 CPU 和内存限制固定在一起。 所以如果调度程序发送一个 pod 到一台机器，它不应该使用交换，设计者不想交换，因为它会减慢速度，所以关闭 swap 主要是为了性能考虑。当然为了一些节省资源的场景，比如运行容器数量较多，可添加 kubelet 参数 –fail-swap-on=false 来解决。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a </span><br><span class="line">nano /etc/fstab</span><br></pre></td></tr></table></figure><p>找到swap was on /dev/sda3 during installation<br>把下面的/dev开头的注释掉</p><p>或者在init的时候使用参数<code>kubeadm init --ignore-preflight-errors Swap</code></p><h2 id="然后安装k8s的aliyun源"><a href="#然后安装k8s的aliyun源" class="headerlink" title="然后安装k8s的aliyun源"></a>然后安装<a href="https://opsx.alibaba.com/mirror?lang=zh-CN">k8s的aliyun源</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF  </span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br><span class="line">apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h2 id="添加docker源"><a href="#添加docker源" class="headerlink" title="添加docker源"></a>添加docker源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF&gt;/etc/apt/sources.list.d/docker.list</span><br><span class="line">deb [arch=amd64] https://download.docker.com/linux/debian stretch stable</span><br><span class="line">EOF</span><br><span class="line">apt update</span><br><span class="line">apt install -y docker-ce</span><br></pre></td></tr></table></figure><h2 id="添加docker的aliyun镜像源参考"><a href="#添加docker的aliyun镜像源参考" class="headerlink" title="添加docker的aliyun镜像源参考"></a>添加docker的aliyun镜像源<a href="https://kubernetes.io/docs/setup/cri/">参考</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt;/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://********.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>重启系统，让所有配置生效。</p><h2 id="开始集群初始化"><a href="#开始集群初始化" class="headerlink" title="开始集群初始化"></a>开始集群初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><p><code>--image-repository</code>指定拉取镜像的地址，避免从google无法访问的情况<br>成功后的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.17.183.236:6443 --token 4xr9ys.yxaxewry4xarkghy \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:3a73933bfd0fb5e2fe2e045292a395d55c652e9e8a141111335b1710350f9d37</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建成功后根据提示进行操作，记录最下面的链接语句，以备其他节点接入。</p><h2 id="安装Helm"><a href="#安装Helm" class="headerlink" title="安装Helm"></a>安装Helm</h2><p>先去<a href="https://github.com/helm/helm/releases">Helm</a>的releases页面查看当前最高的版本号，目前最高的是2.14.1</p><h3 id="下载并安装"><a href="#下载并安装" class="headerlink" title="下载并安装"></a>下载并安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O -L https://get.helm.sh/helm-v2.14.1-linux-amd64.tar.gz</span><br><span class="line">tar -zxvf helm-v2.14.1-linux-amd64.tar.gz</span><br><span class="line">mv linux-amd64/helm /usr/local/bin/helm</span><br></pre></td></tr></table></figure><p>创建tiller的serviceaccount和clusterrolebinding</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create serviceaccount --namespace kube-system tiller</span><br><span class="line">kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller</span><br><span class="line">helm init --history-max 200  --service-account tiller --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br></pre></td></tr></table></figure><h2 id="安装Istio"><a href="#安装Istio" class="headerlink" title="安装Istio"></a>安装Istio</h2><p>先去<a href="https://github.com/istio/istio/releases">Istio</a>的releases页面查看当前最高的版本号，目前最高的是1.2.0</p><h3 id="下载并安装-1"><a href="#下载并安装-1" class="headerlink" title="下载并安装"></a>下载并安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.0 sh -</span><br></pre></td></tr></table></figure><p>或者下载还未正式提供的版本1.2.1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O -L https://github.com/istio/istio/archive/1.2.1.tar.gz</span><br><span class="line">tar -zxvf 1.2.1.tar.gz</span><br><span class="line">cd istio-1.2.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;依然是模拟环境，使用windows10的hyperV。&lt;/p&gt;
&lt;p&gt;在虚拟机中安装debian9，只要核心的那种，开openssh的。&lt;/p&gt;
&lt;p&gt;更新debian&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="DevOps" scheme="https://ojdev.github.io/categories/DevOps/"/>
    
    
      <category term="k8s" scheme="https://ojdev.github.io/tags/k8s/"/>
    
      <category term="debian9" scheme="https://ojdev.github.io/tags/debian9/"/>
    
  </entry>
  
  <entry>
    <title>在windows上创建kubernetes集群</title>
    <link href="https://ojdev.github.io/2019/05/22/kubernetes-for-minikube/"/>
    <id>https://ojdev.github.io/2019/05/22/kubernetes-for-minikube/</id>
    <published>2019-05-22T08:59:56.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote><p>Windows 10 Pro 1903<br><a href="https://github.com/kubernetes/minikube">Minikube</a><br>代理环境（127.0.0.1:1080）</p></blockquote><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="下载minikube"><a href="#下载minikube" class="headerlink" title="下载minikube"></a>下载minikube</h2><p><a href="https://github.com/kubernetes/minikube/releases/tag/v1.1.0">Release</a><br>下载最新的版本，保存到F:\k8s文件夹中，并重命名为<code>mikikube</code></p><p>在小娜哪里搜索env，选择<code>编辑系统环境变量</code>,在path节点中增加<code>F:\k8s</code>；增加新的环境变量<code>MINIKUBE_HOME</code>值为<code>F:\\k8s</code>(注意是双斜杠)</p><p>打开命令提示行，推荐<a href="https://github.com/microsoft/terminal">terminal</a></p><p>对minikube进行配置:</p><p>使用hyperv创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube config <span class="built_in">set</span> vm-driver hyperv</span><br></pre></td></tr></table></figure><ul><li>如果使用linux真机可以指定vm-driver为none，这样就不需要配置交换机</li></ul><p>hyperV的交换机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube config <span class="built_in">set</span> hyperv-virtual-switch <span class="string">&quot;Default Switch&quot;</span></span><br></pre></td></tr></table></figure><p> 有空格需要用双引号包起来</p><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><p>开始创建集群</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start --profile k8s-master --image-mirror-country cn --memory 1024 --cpus 2 --registry-mirror https://*******.mirror.aliyuncs.com</span><br></pre></td></tr></table></figure><p> 带参数–image-mirror-country cn，设置成cn就贴心的将镜像拉取送google改到了杭州aliyun<br> –registry-mirror的镜像地址则会直接给docker</p><p> 可能会失败好几遍，每次失败就<code>minikube delete</code>然后重新创建就可以了</p><p> 最后成功内容如下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> * minikube v1.1.0 on windows (amd64)</span><br><span class="line">* checking main repository and mirrors <span class="keyword">for</span> images</span><br><span class="line">* using image repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line">* Creating hyperv VM (CPUs=2, Memory=2048MB, Disk=20000MB) ...</span><br><span class="line">* Configuring environment <span class="keyword">for</span> Kubernetes v1.14.2 on Docker 18.09.6</span><br><span class="line">* Pulling images ...</span><br><span class="line">* Launching Kubernetes ...</span><br><span class="line">* Verifying: apiserver proxy etcd scheduler controller dns</span><br><span class="line">* Done! kubectl is now configured to use <span class="string">&quot;minikube&quot;</span></span><br></pre></td></tr></table></figure><h1 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h1> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube dashboard</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Windows 10 Pro 1903&lt;br&gt;&lt;a href=&quot;https://github.com/kubern
      
    
    </summary>
    
      <category term="DevOps" scheme="https://ojdev.github.io/categories/DevOps/"/>
    
    
      <category term="k8s" scheme="https://ojdev.github.io/tags/k8s/"/>
    
      <category term="hyperV" scheme="https://ojdev.github.io/tags/hyperV/"/>
    
      <category term="minikube" scheme="https://ojdev.github.io/tags/minikube/"/>
    
      <category term="kubernetes" scheme="https://ojdev.github.io/tags/kubernetes/"/>
    
      <category term="windows10" scheme="https://ojdev.github.io/tags/windows10/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ.EventBus.AspNetCore</title>
    <link href="https://ojdev.github.io/2019/05/06/rabbitmq-eventbus-netcore/"/>
    <id>https://ojdev.github.io/2019/05/06/rabbitmq-eventbus-netcore/</id>
    <published>2019-05-06T05:52:00.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.nuget.org/packages/RabbitMQ.EventBus.AspNetCore"><img src="https://img.shields.io/nuget/v/RabbitMQ.EventBus.AspNetCore.svg?style=popout" alt="NuGet"></a>  <a href="https://www.nuget.org/packages/RabbitMQ.EventBus.AspNetCore"><img src="https://img.shields.io/nuget/dt/RabbitMQ.EventBus.AspNetCore.svg?style=popout" alt="NuGet"></a></p><p><code>RabbitMQ.EventBus.AspNetCore</code>是一个基于官方<code>RabbitMQ.Client</code>的二次封装包，专门针对<code>Net Core</code>项目进行开发，在<code>微服务</code>中进行消息的传递使用起来比较方便。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>断线重连机制</li><li>可扩展</li><li>消费失败自动打回</li></ol><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><h4 id="1-注册"><a href="#1-注册" class="headerlink" title="1. 注册"></a>1. 注册</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> assemblyName = <span class="keyword">typeof</span>(Startup).GetTypeInfo().Assembly.GetName().Name;</span><br><span class="line">    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);</span><br><span class="line">    services.AddRabbitMQEventBus(()=&gt;<span class="string">&quot;amqp://guest:guest@192.168.0.252:5672/&quot;</span>, eventBusOptionAction: eventBusOption =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        eventBusOption.ClientProvidedAssembly(assemblyName);</span><br><span class="line">        eventBusOption.EnableRetryOnFailure(<span class="literal">true</span>, <span class="number">5000</span>, TimeSpan.FromSeconds(<span class="number">30</span>));</span><br><span class="line">        eventBusOption.RetryOnFailure(TimeSpan.FromMilliseconds(<span class="number">100</span>));</span><br><span class="line">        eventBusOption.AddLogging(LogLevel.Warning);</span><br><span class="line">    &#125;);</span><br><span class="line">    services.AddButterfly(butterfly =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        butterfly.CollectorUrl = <span class="string">&quot;http://192.168.0.252:6401&quot;</span>;</span><br><span class="line">        butterfly.Service = <span class="string">&quot;RabbitMQEventBusTest&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-订阅消息"><a href="#2-订阅消息" class="headerlink" title="2. 订阅消息"></a>2. 订阅消息</h4><h5 id="2-1-自动订阅消息"><a href="#2-1-自动订阅消息" class="headerlink" title="2.1 自动订阅消息"></a>2.1 自动订阅消息</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IHostingEnvironment env, IServiceTracer tracer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseDeveloperExceptionPage();</span><br><span class="line">    &#125;</span><br><span class="line">    app.RabbitMQEventBusAutoSubscribe();</span><br><span class="line">    app.UseMvc();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2-手动订阅消息"><a href="#2-2-手动订阅消息" class="headerlink" title="2.2 手动订阅消息"></a>2.2 手动订阅消息</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IHostingEnvironment env, IRabbitMQEventBus eventBus</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseDeveloperExceptionPage();</span><br><span class="line">    &#125;</span><br><span class="line">    eventBus.Serialize&lt;EventMessage, EventMessageHandler&gt;();</span><br><span class="line">    app.UseMvc();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-发消息"><a href="#3-发消息" class="headerlink" title="3. 发消息"></a>3. 发消息</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="meta-string">&quot;api/[controller]&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventBusController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IRabbitMQEventBus _eventBus;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EventBusController</span>(<span class="params">IRabbitMQEventBus eventBus</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _eventBus = eventBus ?? <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(eventBus));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// GET api/values</span></span><br><span class="line">    [<span class="meta">HttpGet</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Send</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _eventBus.Publish(<span class="keyword">new</span></span><br><span class="line">        &#123;</span><br><span class="line">            Body = <span class="string">&quot;发送消息&quot;</span>,</span><br><span class="line">            Time = DateTimeOffset.Now</span><br><span class="line">        &#125;, exchange: <span class="string">&quot;RabbitMQ.EventBus.Simple&quot;</span>, routingKey: <span class="string">&quot;rabbitmq.eventbus.test&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-订阅消息"><a href="#4-订阅消息" class="headerlink" title="4. 订阅消息"></a>4. 订阅消息</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">EventBus(Exchange = <span class="meta-string">&quot;RabbitMQ.EventBus.Simple&quot;</span>, RoutingKey = <span class="meta-string">&quot;rabbitmq.eventbus.test&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">EventBus(Exchange = <span class="meta-string">&quot;RabbitMQ.EventBus.Simple&quot;</span>, RoutingKey = <span class="meta-string">&quot;rabbitmq.eventbus.test1&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">EventBus(Exchange = <span class="meta-string">&quot;RabbitMQ.EventBus.Simple&quot;</span>, RoutingKey = <span class="meta-string">&quot;rabbitmq.eventbus.test2&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MessageBody</span> : <span class="title">IEvent</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Body &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTimeOffset Time &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MessageBodyHandle</span> : <span class="title">IEventHandler</span>&lt;<span class="title">MessageBody</span>&gt;, <span class="title">IDisposable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;MessageBodyHandle&gt; _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MessageBodyHandle</span>(<span class="params">ILogger&lt;MessageBodyHandle&gt; logger</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _logger = logger ?? <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(logger));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;释放&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Task <span class="title">Handle</span>(<span class="params">EventHandlerArgs&lt;MessageBody1&gt; args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        _logger.Information(args.Original);</span><br><span class="line">        _logger.Information(args.Redelivered);</span><br><span class="line">        _logger.Information(args.Exchange);</span><br><span class="line">        _logger.Information(args.RoutingKey);</span><br><span class="line"></span><br><span class="line">        _logger.Information(args.Event.Body);</span><br><span class="line">        <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/RabbitMQ.EventBus.AspNetCore&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/RabbitMQ.EventBus.AspNetCo
      
    
    </summary>
    
      <category term="知识储备" scheme="https://ojdev.github.io/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
      <category term="RabbitMQ" scheme="https://ojdev.github.io/tags/RabbitMQ/"/>
    
      <category term=".net core" scheme="https://ojdev.github.io/tags/net-core/"/>
    
      <category term="EventBus" scheme="https://ojdev.github.io/tags/EventBus/"/>
    
      <category term="Asp.Net Core" scheme="https://ojdev.github.io/tags/Asp-Net-Core/"/>
    
  </entry>
  
  <entry>
    <title>开发过程中需要用到的工具以及相关知识目录</title>
    <link href="https://ojdev.github.io/2019/05/05/develop-tools-and-faq/"/>
    <id>https://ojdev.github.io/2019/05/05/develop-tools-and-faq/</id>
    <published>2019-05-05T14:50:00.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<ul><li>框架类</li><li><ul><li><a href="https://www.elastic.co/cn/products/stack/elasticsearch-sql">ElasticSearch SQL</a></li></ul></li><li><ul><li><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-rest.html">文档</a></li></ul></li></ul></li><li><ul><li><a href="https://github.com/elastic/elastic-charts">Elastic Charts</a> </li></ul></li><li><ul><li><ul><li><a href="https://elastic.github.io/elastic-charts/">演示</a></li></ul></li></ul></li><li>知识类</li><li><ul><li><a href="https://github.com/kulend/Dnc.Api.Throttle">适用于Dot Net Core的WebApi接口限流框架</a></li></ul></li><li><ul><li><a href="https://harttle.land/2017/04/04/using-http-cache.html">使用 HTTP 缓存：Etag, Last-Modified 与 Cache-Control</a></li></ul></li><li><ul><li><a href="https://docs.microsoft.com/zh-cn/aspnet/core/performance/caching/distributed?view=aspnetcore-2.2">分布式缓存在 ASP.NET Core 中</a></li></ul></li><li><ul><li><a href="https://docs.microsoft.com/zh-cn/aspnet/core/security/cors?view=aspnetcore-2.2">启用 ASP.NET Core 中的跨域请求 (CORS)</a></li></ul></li><li>工具类</li><li><ul><li><a href="http://naotu.baidu.com/">百度脑图</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;框架类&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.elastic.co/cn/products/stack/elasticsearch-sql&quot;&gt;ElasticSearch SQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="知识储备" scheme="https://ojdev.github.io/categories/%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/"/>
    
    
  </entry>
  
  <entry>
    <title>金庸武侠编年史</title>
    <link href="https://ojdev.github.io/2012/08/14/jinyong/"/>
    <id>https://ojdev.github.io/2012/08/14/jinyong/</id>
    <published>2012-08-14T08:28:56.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>公元前476年 西施送入吴国；范蠡遇到阿青，阿青传越国剑士剑法。</p><p>公元前473年 越国灭掉吴国；范蠡与西施隐居，阿青离去。</p><p>526年 南北朝时期，印度高僧菩提达摩来到中国，在嵩山少林寺面壁九年，创立中国禅宗。 隋朝末年，李靖将《易筋经》中的武学奥秘，尽数领悟。</p><p>694年 明教传至中土。 唐朝末叶，嘉兴剑术名家改良越女剑法。</p><p>877年 丐帮建立。</p><p>936年—946年 少林寺法慧禅师练成了一指禅。</p><p>1030年 慕容博出生。</p><p>1047年 慕容博伤黄眉僧。</p><p>1051年 扫地僧到少林寺。</p><p>1060年 萧峰出生。</p><p>1061年 雁门关外乱石谷大战。</p><p>1062年 萧远山到少林偷研武功。</p><p>1063年 丁春秋暗算师门。</p><p>1064年 慕容复出生。</p><p>1065年 波斯“山中老人”霍山自创“乾坤大挪移”。</p><p>1069年 虚竹出生。</p><p>1071年 段誉出生。</p><p>1072年 慕容博伤崔百泉。</p><p>1074年 阿朱出生。</p><p>1077年 慕容博诈死。</p><p>1083年 萧峰接任丐帮帮主。</p><p>1090年 鸠摩智单挑天龙寺六僧。</p><p>1091年 萧峰离开丐帮。</p><p>1092年 聚贤庄大战。</p><p>1093年 无崖子去世；虚竹接任逍遥派掌门，同年被西夏招为驸马；少林寺门外混战；扫地僧讲经说法。</p><p>1094年 大理段正明禅位侄子段誉；萧峰自尽。</p><p>1110年 黄裳雕版印行万寿道藏。</p><p>1112年 王重阳出生。</p><p>1120年 黄裳向明教的高手挑战。</p><p>1127年—1130年 少林寺灵兴禅师花了三十九年练成了一指禅。</p><p>1140年 独孤求败创独孤九剑第九式破气式。</p><p>1158年 段智兴出生。</p><p>1162年 柯镇恶（江南七怪之首）出生。</p><p>1163年 周伯通出生。</p><p>1164年 黄裳完成九阴真经。洪七公出生。</p><p>1168年 欧阳锋出生。</p><p>1170年 独孤求败郁寂而终。</p><p>1171年 黄药师出生。</p><p>1173年 曲灵风出生。</p><p>1178年 裘千仞出生。</p><p>1183年 金轮法王出生。</p><p>1184年 朱子柳出生。</p><p>1186年 陈玄风 欧阳克出生。</p><p>1190年 火工头陀大开杀戒。</p><p>1196年 王重阳再入古墓，于棺上刻下部分九阴真经，并留“玉女心经，欲胜全真；重阳一生，不弱于人” 的文字，后某日无名僧与王重阳斗酒参阅九阴创九阳；宦官创葵花宝典。</p><p>1200年 第一次华山论剑。</p><p>1203年 重阳真人拜访段皇爷，废了欧阳峰20年蛤蟆功；王重阳仙逝。</p><p>1205年 郭靖出生</p><p>1206年 裘千仞伤瑛姑幼子。</p><p>1208年 黄蓉出生。</p><p>1220年 小龙女出生。 1223年 穆念慈比武招亲。</p><p>1225年 第二次华山论剑；成吉思汗去世。</p><p>1224年 杨过出生。</p><p>1244年 洪七公、欧阳峰去世。</p><p>1244年 杨过小龙女双剑合壁初试锋芒挫败金轮法王；杨过学弹指神通。</p><p>1244年 郭襄出生；杨过断臂，初入独孤求败剑冢。</p><p>1247年 张三丰出生。</p><p>1257年 明教石教主圣火令为丐帮所夺。</p><p>1259年 杨过飞石击毙蒙哥大汗；第三次华山论剑。</p><p>1262年 郭襄游少林。</p><p>1273年 一代大侠郭靖和黄蓉战死襄阳。</p><p>1296年 金毛狮王谢逊出生。</p><p>1317年 谢逊离开师父成昆，加入明教。</p><p>1318年 武当六弟子殷梨亭出生。</p><p>1323年 成昆杀谢逊一家。</p><p>1336年 谢逊及张翠山夫妇至冰火岛。</p><p>1337年 张三丰九十大寿；张无忌出生。</p><p>1338年 元兵剿灭袁州明教义军，常遇春、彭莹玉侥幸逃脱。</p><p>1339年 周芷若出生。</p><p>1340年 汝阳王女儿敏敏特穆尔出生，元帝封其“绍敏郡主”。</p><p>1341年 小昭出生。</p><p>1346年 张三丰百岁大寿；张翠山殷素素夫妇自尽。</p><p>1351年 张无忌得九阳神功。</p><p>1357年 六大派围攻光明顶；张无忌任明教教主；张三丰首创太极神功。</p><p>1358年 小昭远走波斯。 1359年 少林屠狮英雄会；白眉鹰王殷天正去世。</p><p>1360年 张无忌隐退，光明左使杨逍继任为明教第三十五代教主。</p><p>1400年 莆田少林寺得葵花宝典。</p><p>1401年 岳肃蔡子峰偷录葵花宝典；渡元禅师习辟邪剑法。</p><p>1402年 华山派分气宗剑宗。</p><p>1406年 日月神教十长老破五岳剑派剑法。</p><p>1420年 日月教袭武当山，张三丰手抄一部《太极拳经》和青年时佩带的真武剑被抢。</p><p>1458年 武当派开山祖师张三丰仙逝，享年212岁。（据《古今太极拳谱及源流阐秘》李师融先生的考证）</p><p>1479年 华山派气宗剑宗之争。</p><p>1486年 任盈盈出生。</p><p>1493年 东方不败篡日月神教教主之位；任我行被囚地牢。</p><p>1503年 余沧海灭福威镖局。</p><p>1504年 令狐冲学得独孤九剑。</p><p>1505年 任我行重夺日月神教教主。</p><p>1506年 任我行去世。</p><p>1509年 令狐冲任盈盈喜结良缘。</p><p>1610年 金蛇郎君夏雪宜惨遭灭门之祸。</p><p>1612年 金蛇郎君夏雪宜得到云南五仙教的镇教“三宝”。</p><p>1623年 袁承志出生。</p><p>1643年 袁承志被推举为七省江湖首领，同年率众人挫毁西洋红夷大炮。</p><p>1644年 袁承志助阿九挫败成王与曹化淳篡位阴谋；李自成攻入北京，明亡；吴三桂降清；李岩夫妇自杀身亡。</p><p>1645年 袁承志、夏青青避居海外。</p><p>1655年 韦小宝出生。</p><p>1669年 康熙韦小宝擒鳌拜。</p><p>1670年 韦小宝出任天地会青木堂香主。</p><p>1698年 武当派掌门陆菲青出生。</p><p>1733年 陈家洛出生。</p><p>1753年腊月，苗人凤和胡一刀决战；胡斐出生。</p><p>1780年三月十五日，苗人凤和胡斐决战。</p><p>1927年二月六日 金庸出生。</p><p>我也是网上转来的，所有有没有不对的地方，我还真不知道，毕竟金庸大师的小说没看多少，而电视剧都是改编自小说，改了很多地方的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;公元前476年 西施送入吴国；范蠡遇到阿青，阿青传越国剑士剑法。&lt;/p&gt;
&lt;p&gt;公元前473年 越国灭掉吴国；范蠡与西施隐居，阿青离去。&lt;/p&gt;
&lt;p&gt;526年 南北朝时期，印度高僧菩提达摩来到中国，在嵩山少林寺面壁九年，创立中国禅宗。 隋朝末年，李靖将《易筋经》中的武学奥
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>回忆遐想，秋</title>
    <link href="https://ojdev.github.io/2012/08/13/recollect-1/"/>
    <id>https://ojdev.github.io/2012/08/13/recollect-1/</id>
    <published>2012-08-13T08:23:13.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>不知不觉的就来了。上个月热的要命，办公室不大，6个电脑开5个，空调等于没有用，那制冷的能力根本抵消不了这5个电脑的散热能力，还有四个活人身上散发的热量。天天的先开窗然后关窗开空调，可是依然热的要死的。天天中午最热的那阵子都要去外面的仓买（注：小卖店、小超市、买东西的地方）去买冰棒来凉快一下。</p><p>这几年每年都会注意一下天气的变化，总结出来就是，冬天越来越短了，夏天越来越热了，冬天越来越暖了，夏天雨越来越少了。我记得小的时候，夏天最热的时候是在8月份的时候，这个时候地里已经挂锄了，没有地里的活了，于是三五成群的小伙伴就本着村东面的大河去洗澡，说去洗澡其实就是去玩水。那时候亚布力滑雪场还没有大规模的修建，所以也没有水污染，水是清澈见底的，脚踩在河边的沙子上是烫的，然后下到水里是凉凉的，踩着河卵石的脚底痒痒的，不时有小鱼从脚边蹿过去，还记得有一次在水里扑腾着，一个小朋友“啊”的一声，站了起来，手里抓着一条鱼，他说不知道什么东西钻他手里了，一害怕就抓起来了。</p><p>以前的夏天躲避炎热的方法很多很多，如果不去下水那么随便找一棵大树下面坐着也很凉爽，或者我是个爱吓跑的，就走街串巷，农村的树多，所以很多地方走，路都是被树荫遮盖着的。即使在屋里里面，也凉爽，我现在想来，也许是农村都是低矮的平房，没有钢筋混凝土的高楼，所以也不会吸收那么大的热量，所以不热。坐着屋里，看着外面的蓝天，清澈无比。</p><p>后来随着时间的推移，农村也在变化，亚布力滑雪场大建，上游水库蓄水，然后还有开木器场的，化塑料的，修路的要在河里采河沙，一切都变了，路边的树没了。河里的水永远的都浑浊的，我想，即使是黄河，也不过如此的颜色吧。也就是在那几年我知道了一个词叫做沙尘暴，第二年纠正了这个词叫扬沙。</p><p>印象非常深刻，是在四五月份的时候，路边的草已经发芽了，但是头一年路边的花干枯的杆茎没处理，所以还在路边，那天早上出门到处都是黄澄澄的，屋里的灯从外面隔着玻璃看都是淡蓝色的光，很诡异，我就出门了，想看看外面都什么样了，走在公路上，能见度只有三五十米的样子，用手扫一下路边的花茎，一股子灰就扬了起来，不知道为什么，那时候感觉就是末日的感觉，可我竟然还挺开心的。</p><p>回家后开了电视才知道，是沙尘暴来了。原来这就是沙尘暴，自打那年之后，每一年都没落下过，每一年都会有扬沙的天气。</p><p>也是在那些年之后，炎热的夏天我也只是抱这个鱼竿到河边找个地方躲着钓鱼而不再下水了。</p><p>破坏自然环境的都是人们自己，那个小村子也是，为了微小的一次利益，遗留下来的是长久的伤害，现在可能很多地方都有小龙虾，麻辣小龙虾这道菜。小的时候我见过那东西，我们叫蝲蛄。村子那山里小河流汇集的河里就有，而且很多，随便翻个石头可能都看得到，但自打有一年，几个人想吃鱼了，于是带着一包药从最上游的地方撒下去之后，就什么都没了。那一次他们的确实惠了，但是自此，小龙虾在那里就绝迹了，知道大约五六年之后，才听说有人在河里抓到过一只。山上的树少了，河水也小了，物种也少了。</p><p>今年的秋天我感觉来的格外的早，上周开始就觉得冷了，虽然我同事还是高呼热死了，但是我已经感觉到了凉意，尤其是早晚的时候，很突然，回想一下自打有了《2012》这部电影后，很多人就没安生过，整天纠结末日来了怎么办，还有整天吵着盼着末日赶快来的。当然，也有我这样无所谓的。毕竟，若电影里那是事实，一般来说也是躲不掉的吧，所以，对于必输的结果去耗费时间琢磨他干嘛。生活中的很多事情和很多选择不也是这样吗，只是有时候明明知道了结果但是还是抱着一线的侥幸而已。这几年来，地震，海啸，从来没断过，我大中华也在经历了天灾后通过微博爆出了更多的人祸，想想这几年发生的，汶川地震、青海地震、还有各个城市的造海运动，然后去年的728，今年的启东还有四川那个什么来着。天灾人祸不断，所以末日之的是自然的末日还是其他的末日呢？</p><p>写了这么多，就如标题一样，只是遐想和回忆。</p><p>秋天来了，感觉来的太早了，如此而已。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知不觉的就来了。上个月热的要命，办公室不大，6个电脑开5个，空调等于没有用，那制冷的能力根本抵消不了这5个电脑的散热能力，还有四个活人身上散发的热量。天天的先开窗然后关窗开空调，可是依然热的要死的。天天中午最热的那阵子都要去外面的仓买（注：小卖店、小超市、买东西的地方）去
      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>教练终于承认，曾给叶诗文服用一种叫做一氧化二氢的液体</title>
    <link href="https://ojdev.github.io/2012/08/03/yeshiwen-h2o/"/>
    <id>https://ojdev.github.io/2012/08/03/yeshiwen-h2o/</id>
    <published>2012-08-03T08:24:45.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>叶诗文的教练终于承认了！曾给叶诗文服用一种叫做一氧化二氢的液体！</p><p>一氧化二氢是有危害的，是危险品，下面来列举一下一氧化二氢都有什么样的危害：</p><ol><li>又叫做“氢氧基酸”，是酸雨的主要成分；</li><li>对泥土流失有促进作用；</li><li>对温室效应有推动作用；</li><li>它是腐蚀的成因；</li><li>过多的摄取可能导致各种不适；</li><li>皮肤与其固体形式长时间的接触会导致严重的组织损伤；</li><li>被吸入肺部可以致命；</li><li>处在气体状态时，它能引起严重灼伤；</li><li>在不可救治的癌症病人肿瘤中已经发现该物质；</li><li>对此物质上瘾的人离开它168小时便会死亡；</li></ol><p>看到了吗，这是一个很可怕的东西啊！在看看一氧化二氢都被应用到什么地方：</p><ol><li>各式各样的残忍的[动物]研究；</li><li>[美国海军]有秘密的一氧化二氢的传播网；</li><li>全世界的[河流]及[湖泊]都被一氧化二氢污染；</li><li>常常配合杀虫剂使用；洗过以后，[农产品]仍然被这种物质污染；</li><li>在一些“[垃圾食品]”和其它食品中的[食品添加剂</li></ol><p>教练为什么要给叶诗文服用这么危险的东西呢？这么危险的东西在比赛中到底起到了什么作用呢？这个所谓的一氧化二氢到底是什么秘密武器呢？</p><p>其实我是知道的，因为我也服用过，而且这个东西的依赖性特别的强，我现在已经离不了了。因为依赖性太强，一旦离开这个东西不再服用，人就会死亡。</p><p>现在我就要告诉你们为什么教练要给叶诗文服用这个一氧化二氢，因为：叶诗文渴了。</p><p>为什么渴了就要服用一氧化二氢呢？因为一氧化二氢的化学方程式是这样的H2O，一个氧两个氢气，大家知道氧气和氢气都是可燃的，且燃点很低。同时服用在某些情况下可以让人精神焕发的。</p><p>但是也不可以过量的服用，副作用也是很强的。</p><p>对了这东西还有个俗名，叫做水。</p><p>大家不要喷我啊～</p><p>开个玩笑嘛～</p><p>因为今天在微博上看到了有转发教练承认曾给叶诗文服用一氧化二氢的微博，竟然真的有人去喷啊～</p><p>没文化真可怕啊～</p><p>不过，这倒是让我想起来，初中刚学化学那会发懵，讲到氧化硫，那么有没有一氧化二硫，有没有一氧化二氧气，有没有一氧化二氢，老师说，那就是水</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;叶诗文的教练终于承认了！曾给叶诗文服用一种叫做一氧化二氢的液体！&lt;/p&gt;
&lt;p&gt;一氧化二氢是有危害的，是危险品，下面来列举一下一氧化二氢都有什么样的危害：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;又叫做“氢氧基酸”，是酸雨的主要成分；&lt;/li&gt;
&lt;li&gt;对泥土流失有促进作用；&lt;/li&gt;

      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>7月1日全球增加1秒，出现7:59:60不影响日常生活</title>
    <link href="https://ojdev.github.io/2012/06/30/july-1-2012-1-seconds/"/>
    <id>https://ojdev.github.io/2012/06/30/july-1-2012-1-seconds/</id>
    <published>2012-06-30T08:17:37.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>7月1日将出现7：59：60闰秒调整对市民没影响</p></blockquote><p>据新华社电 （记者帅安宁、周润健）为了让“原子时”与“世界时”协调一致，北京时间7月1日全球将增加一秒，届时，将出现7：59：60的特殊现象。天文专家表示，感兴趣的中国公众可试着在当日7时59分59秒时将自己的电子表或是手机上的时间“拨”慢一秒。</p><p>“世界时”“原子时”要协调</p><p>我国天文教育专家、天津市天文学会理事赵之珩介绍说，为了确定时间，世界上有两种时间计量系统：基于地球自转得出的“世界时”和基于原子振荡周期确定的“原子时”。由于两种时间尺度对秒的定义不一样，随着时间的推移，这两个时间系统之间就会出现差异，所以有了“协调世界时”的概念。</p><p>“协调世界时”以原子时秒长为基础，在时刻上尽量接近于世界时。1972年，国际计量大会决定，当“世界时”与“原子时”之间时刻相差超过0.9秒时，就在协调世界时上加上或减去1秒（正闰秒或负闰秒），以尽量接近世界时，这就是“闰秒”。“闰秒”一般安排在年中或年末的最后时刻，即6月30日或12月31日的最后一分钟。</p><p>今年确定在6月30日23：59：59后面增加一秒，记为23：59：60，然后才是第二天的00：00：00。相对于北京时间，也就是7月1日7：59：59后面增加一秒，出现7：59：60的特殊现象，然后才是8：00：00。</p><p>2012年“多”出一秒，你会拿这一秒做什么？“我会对我爸妈多说一遍‘我爱你们’”“我将用这一秒来睡觉，因为是周末。”“那天是我生日，比别人多过一秒，好幸福！”“上班可以晚起一秒了。”这是网络上一些网友“晒”出的五花八门的回答。</p><p>东亚讯（助理记者 郑玉占） 为了让“原子时”与“世界时”协调一致，北京时间7月1日全球将增加1秒，到时将出现7：59：60的特殊现象。</p><p>长春人造卫星观测站天文科普基地负责人李振军介绍，世界上有两种时间计量系统“世界时”和“原子时”。由于两种时间尺度对秒的定义不一样，随着时间的推移，会出现差异，所以有了“协调世界时”的概念。</p><p>1972年，国际计量大会决定，当“世界时”与“原子时”之间时刻相差超过0.9秒时，就在“协调世界时”上加上或减去1秒，以尽量接近“世界时”，这就是“闰秒”。</p><p>今年确定在6月30日23：59：59后面增加1秒，记为23：59：60，然后才是第二天的00：00：00。而北京时间是在7月1日7：59：59后面增加1秒，出现7：59：60的特殊现象，然后才是8：00：00。</p><p>“多出的1秒钟，只对军事、航天等对时间精确到秒的行业有影响。不会对长春市民的日常生活造成任何影响，市民也不会感觉到。”李振军说。</p><p>博主说：其实我不担心这一秒，我担心的是，我们做的那些程序会不会因为这1秒出现问题？当年千年虫的影响实在是太大了。今年真是多事的一年，但是是很有意义的一年，看来世界末日的说法是真的，但并不是人们意义上的毁灭的概念，而是告别。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;7月1日将出现7：59：60闰秒调整对市民没影响&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;据新华社电 （记者帅安宁、周润健）为了让“原子时”与“世界时”协调一致，北京时间7月1日全球将增加一秒，届时，将出现7：59：60的特殊现象。天文专家表示，
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>梦！</title>
    <link href="https://ojdev.github.io/2012/06/22/dream-1/"/>
    <id>https://ojdev.github.io/2012/06/22/dream-1/</id>
    <published>2012-06-22T08:15:27.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>夢的日语发音是：有妹。我记得是这样的。在这里写这个日语发音是很喜欢《xxxxHolic》中那个女人慵懒的躺着时候嘴角上扬的说出“夢”的发音。</p><p>这阵子身体发虚，虚到不行了，我也知道怎么弄的，可是却不能说出来。</p><p>昨晚本打算好好睡一下，可是半夜的时候又被弄起来。</p><p>所以上午起的很晚，11点多才起来。上午的时候做了一个梦，梦里面回到了以前梦中出现的一个场景。当时在梦里我是清醒的，但是我却没醒过来。</p><p>那个地方冰天雪地的，只有那一个区域，在一个城市中，繁花似锦的，绿意盎然。天空也清澈澄明。本来心情极好的在路边的树下行走，但是却走到了一个小路上，一抬眼，入眼的是一座山，山上竟然有雪。瞬间意识清醒意识到在做梦，但是这个地方梦里出现过两次，第一次是高中的时候，上课睡着的，追着一个女人，要把她拉回来，至于为什么我不知道，就知道要拉她回来，回到哪也不清楚，但是没能做到，然后我独自返回，一瞬间风雪大作，感觉自己要冻僵了，但是我感觉如果不能跨过这座山，那么我就回不去了，可能就醒不过来了，风雪有如刀割一样。不过我还是回来了，走在学校的走廊中，非常的暗，犹如没有光一样的暗，摸索着走回我的班级后，听到老师在讲课，然后醒了过来。</p><p>可是这一次，依然是这个地方，但是却没有人，梦里我回头看了一眼，地面是刚下过雨的痕迹，不很泥泞，但是却湿润。</p><p>于是我义无反顾的走向满是冰雪的山中，刺骨的感觉立刻袭来，不知道为什么，周围一个人都没有，脚下却没有脚印。一下子意识到，是不是这一次，我就回不去了呢。但是也不想回头，就这么漫无目的的走在雪上，头顶有阳光，却依然冰冷的到了心里。手脚还没有冻僵，虽然清醒，但是却不知道该如何走。最后，就这么向着一片挂满雪的树林走去，但是，一瞬间却感觉到了柳暗花明的感觉，林后我回到了街道，回头看，身后依然是山，有林，却冰雪覆盖。</p><p>而前面的街道，也是雨后的痕迹，湿润却不泥泞，踏出一步，发现了自己的脚印。这是陌生的街道，却很熟悉，街道上没有人，抬头看天，却能看清天空，稀疏的云后面就是清澈的蓝天，不知道怎么就想到了以前听到的一句话，只有死人才能看清太阳。我想，我没死，因为我看不到太阳。</p><p>可是刚出去不久，有人追我，我跑不过他，于是又开始了熟悉的一幕，我开始使用四肢奔跑，重有跑进了雪地中。回头看有好多的人，我不知道都是做什么的，一个个的黑色影子，看不清楚面容。于是我继续用四肢继续奔跑，不知方向的跑。</p><p>醒来后我在想梦到底预示着什么，我不知道，也解释不了，但是重复的场景，重复的动作，到底是怎么了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;夢的日语发音是：有妹。我记得是这样的。在这里写这个日语发音是很喜欢《xxxxHolic》中那个女人慵懒的躺着时候嘴角上扬的说出“夢”的发音。&lt;/p&gt;
&lt;p&gt;这阵子身体发虚，虚到不行了，我也知道怎么弄的，可是却不能说出来。&lt;/p&gt;
&lt;p&gt;昨晚本打算好好睡一下，可是半夜的时候又
      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
  </entry>
  
  <entry>
    <title>没事穷折腾：fastboot刷机</title>
    <link href="https://ojdev.github.io/2012/05/28/%E6%B2%A1%E4%BA%8B%E7%A9%B7%E6%8A%98%E8%85%BE%EF%BC%9Afastboot%E5%88%B7%E6%9C%BA/"/>
    <id>https://ojdev.github.io/2012/05/28/没事穷折腾：fastboot刷机/</id>
    <published>2012-05-28T08:04:56.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>我有个HTC G7，没事我就穷折腾，各种刷机，刷过各种第三方，刷过RUU，刷过自己用厨房定制的各种ROM，现在一直在使用CM9。</p><p>所以想用fastboot来刷机，看看怎么刷。首先启动到bootloader界面，然后输入如下命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fastboot +w      清除userdata和cache</span><br><span class="line">fastboot <span class="built_in">erase</span> system</span><br><span class="line">fastboot <span class="built_in">erase</span> boot</span><br></pre></td></tr></table></figure><p>然后使用recovery开始刷新的rom吧。当然还有其他的方式，但是我没那么用过。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash hboot hboot.img      刷hboot</span><br><span class="line">fastboot flash recovery recovery.img      刷recovery</span><br><span class="line">fastboot flash radio radio.img      刷RADIO</span><br><span class="line">fastboot flash boot boot.img      刷BOOT</span><br><span class="line">fastboot flash system system.img      刷system</span><br><span class="line">fastboot flash userdata userdata.img      刷用户数据</span><br><span class="line">fastboot reboot      重启</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我有个HTC G7，没事我就穷折腾，各种刷机，刷过各种第三方，刷过RUU，刷过自己用厨房定制的各种ROM，现在一直在使用CM9。&lt;/p&gt;
&lt;p&gt;所以想用fastboot来刷机，看看怎么刷。首先启动到bootloader界面，然后输入如下命令&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>残篇『十二』</title>
    <link href="https://ojdev.github.io/2012/04/30/canpian-12/"/>
    <id>https://ojdev.github.io/2012/04/30/canpian-12/</id>
    <published>2012-04-30T08:00:08.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>回想从前</p><p>只记得那个柔软的怀抱</p><p>只记得芊芊柔荑</p><p>只怪自己</p><p>没去珍惜</p><p>反倒杀了她</p><p>她会恨我吧</p><p>带着对我的恨</p><p>走过忘川奈何</p><p>我知道</p><p>她不会喝孟婆那碗汤</p><p>孟婆也不会给她喝</p><p>因为她要回来找我</p><p>没办法</p><p>不杀了她</p><p>她也没法回去</p><p>也不会回来杀我</p><p>可是</p><p>我还是错了</p><p>她回去了</p><p>却没有回来杀我</p><p>任我修行中入了妖道</p><p>遭致生灵涂炭</p><p>手里的剑是热的</p><p>沾染了赤尾的血之后</p><p>这把剑再也无法杀人</p><p>也无法让我死</p><p>今天</p><p>我也只能做这样的选择</p><p>从这里跳下去</p><p>但愿孟婆会舍碗汤给我</p><p>———————————————————–</p><p>她跳下去了</p><p>我无法杀她</p><p>所以只能看她跳下去</p><p>我愧对天下</p><p>因无法下手杀她</p><p>导致生灵涂炭</p><p>我的罪孽由我继续来偿</p><p>你跳吧</p><p>从此以往</p><p>你我再无瓜葛</p><p>下一世</p><p>你将获得重生</p><p>而我</p><p>将用以后的无限生命</p><p>每日诵经</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;回想从前&lt;/p&gt;
&lt;p&gt;只记得那个柔软的怀抱&lt;/p&gt;
&lt;p&gt;只记得芊芊柔荑&lt;/p&gt;
&lt;p&gt;只怪自己&lt;/p&gt;
&lt;p&gt;没去珍惜&lt;/p&gt;
&lt;p&gt;反倒杀了她&lt;/p&gt;
&lt;p&gt;她会恨我吧&lt;/p&gt;
&lt;p&gt;带着对我的恨&lt;/p&gt;
&lt;p&gt;走过忘川奈何&lt;/p&gt;
&lt;p&gt;我知道&lt;/p&gt;
&lt;p&gt;她不会
      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
      <category term="残篇" scheme="https://ojdev.github.io/tags/%E6%AE%8B%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>C#方法延迟返回结果</title>
    <link href="https://ojdev.github.io/2012/04/13/C-%E6%96%B9%E6%B3%95%E5%BB%B6%E8%BF%9F%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C/"/>
    <id>https://ojdev.github.io/2012/04/13/C-方法延迟返回结果/</id>
    <published>2012-04-13T07:52:12.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>不知道标题恰不恰当，只不过我的需求是这个样子的：</p><p>例如一个方法A，返回值是bool类型的，但是方法执行过程中，需要另一个方法B执行结束，但是还不能直接调用B方法，可是B是等待外部信号才执行。所以需要延迟一下，等B方法执行了才返回结果。</p><p>找了些资料，找到了AutoResetEvent，可以达到我的目的，但是否是最适合的，就不知道了，由于我的项目中所谓的B方法是RS232端口读数据的，然后解析出来的返回值。并不是时时的，可能有点时间差，于是我采用了下面的方式。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 标志位，用来等待返回</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">AutoResetEvent are = <span class="keyword">new</span> AutoResetEvent(<span class="literal">false</span>);</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 返回结果，可以是任意需要的类型</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="built_in">object</span> result;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/****Begin**/</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 数据的拼装</span></span><br><span class="line"><span class="comment">        * 数据的发送</span></span><br><span class="line"><span class="comment">        **/</span></span><br><span class="line">    Send(<span class="string">&quot;要传输的数据&quot;</span>);</span><br><span class="line">    <span class="comment">/****End****/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//等待信号，-1代表无限等待，可以更改为其他值，单位是毫秒，等待时间过后为超时</span></span><br><span class="line">    are.WaitOne(<span class="number">-1</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">byte</span>[] bytes = Read();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 此处解析bytes中的数据</span></span><br><span class="line"><span class="comment">        * 根据解析出来的数据</span></span><br><span class="line"><span class="comment">        * 得到想要的结果</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//得到需要的结果</span></span><br><span class="line">    result = Encoding.UTF8.GetString(bytes);</span><br><span class="line">    <span class="comment">//给信号</span></span><br><span class="line">    are.Set();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知道标题恰不恰当，只不过我的需求是这个样子的：&lt;/p&gt;
&lt;p&gt;例如一个方法A，返回值是bool类型的，但是方法执行过程中，需要另一个方法B执行结束，但是还不能直接调用B方法，可是B是等待外部信号才执行。所以需要延迟一下，等B方法执行了才返回结果。&lt;/p&gt;
&lt;p&gt;找了些资料
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
      <category term="C#" scheme="https://ojdev.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>毁灭童年！还原童话故事恐怖面目</title>
    <link href="https://ojdev.github.io/2012/03/29/%E6%AF%81%E7%81%AD%E7%AB%A5%E5%B9%B4%EF%BC%81%E8%BF%98%E5%8E%9F%E7%AB%A5%E8%AF%9D%E6%95%85%E4%BA%8B%E6%81%90%E6%80%96%E9%9D%A2%E7%9B%AE/"/>
    <id>https://ojdev.github.io/2012/03/29/毁灭童年！还原童话故事恐怖面目/</id>
    <published>2012-03-29T07:47:21.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>童话从诞生之日起就充满着曲折的情节和阴森的结局。如今，那些带有血腥气息的童话已不适应现代读者的口味，于是，迪斯尼等公司为迎合观众而净化了童话，到处都是大团圆结局。在此，我们对常见的一些快乐结局作出解释，还原它们本来的恐怖面目。</p><p>1、魔笛</p><p>《魔笛》的故事里，那个村庄鼠患泛滥。一个身穿七彩布衣，手持魔笛的男人前来，提出要帮村庄消除鼠害。村民同意，如果真的实现，则愿付出巨大的代价。那男人实现了。他吹奏起魔笛，驱赶了群鼠。但当他回来索要报偿时，村民反悔。笛手决定驱赶孩童。在后来很多版本中，笛手驱赶孩童进入村外的洞穴，有一位村民最终同意付出报酬，他也归还了孩童。而在阴暗的初衷里，笛手引导孩童入河，除了一个掉队的瘸腿小男孩，其他都淹死了。</p><p>2、小红帽</p><p>我们熟知的这则故事的结局是一名樵夫杀死了凶恶的大灰狼，救出了小红帽。其实，最初的法语版本里，夏尔·佩罗笔下的结局并不美满。其中，那个富家姑娘询问大灰狼去她外婆家的路，狼给她指了条错误的道路，最后她不幸被吃。故事结束了，没有樵夫，没有外婆，只有大灰狼和小红帽。故事的寓意便是不要和陌生人讲话。</p><p>3、海的女儿</p><p>迪士尼版本的“海的女儿”是个不折不扣的弥天大谎：爱丽尔人鱼变成了人，和艾利克王子结婚，奇妙的婚礼还在人和鱼族里进行。但是，在安徒生的最初版本里，人鱼目睹王子和公主结合，绝望地离开。魔咒中，只有用剪刀刺死王子，她才能获救。她没有照做，而是跃进大海，变成了泡沫。后来，安徒生对童话稍稍做了温和地修改，新的结尾中，她没有变成泡沫，而是成为了上帝的女儿，在天堂安息。可无论如何，她依然是死去了的。</p><p>4、白雪公主</p><p>众所周知，在白雪公主的故事中，皇后要求猎人杀害她，并将她的心脏带回作证。而猎人不忍心这么做，于是带回了熊的心脏。此处，迪士尼版本没做多大修改，不过还是遗漏了一段很重要的情节：原始的童话版本中，皇后要求当晚食用白雪公主的肝脏！另外，白雪公主并没有因为一个充满法力的吻醒来，她被带回了城堡。至于白雪公主“尸体”的用途并没有交代，留给人们想象的空间。在格林兄弟的版本中，故事结尾，皇后被迫穿上铁靴，跳舞至死。</p><p>5、睡美人</p><p>在我们熟知的睡美人故事里，优雅的公主是由于手触纺锤而沉睡，直到百年之后王子前来吻醒她。他们恋爱、结婚，从此幸福地生活在一起，一切都让人很惊奇且欣喜。但是原始的故事并不甜蜜，只有亲身读过才能相信其悲哀：最初，一名年轻女子由于一种预言（非诅咒）而沉睡。一位国王见状，渴望得到她，并遭强制啪啪了她。九个月后，她在沉睡中生下两个孩子。其中一个孩子吮吸她的手指，活跃了她的神经纤维，她苏醒过来，发现了自己已经遭强制啪啪啪还生了孩子。这可比王子的吻恐怖得多。</p><p>6、侏儒怪</p><p>这则童话和前几则的不同之处在于，修改版本不是处于净化丑恶的初衷，而是将其修改得更加恐怖。在原始故事里，侏儒怪帮助一名面临死亡的女孩，将稻草变成金子供她看病，使她痊愈直至能工作。相应地，他要求女孩交出她生的第一个孩子作为报偿。当这天来临，女孩不愿交出孩子，侏儒怪告诉她，如果能猜出他的名字，也能放了女孩。女孩记起了以前在火堆边无意中听到侏儒怪的呻吟，顺利答出了他的名字。侏儒怪火冒三丈地走掉了。在改编后的版本里，一切更糟糕：侏儒怪肆意践踏和撕扯自己的左右臂膀而死。</p><p>7、金凤花和三只熊的故事</p><p>在这个温馨的故事里，可爱的女孩金凤花发现了三只熊的屋子，她溜进屋子，偷吃食物，坐在椅子上，最后竟然在小熊的床上睡着了。当小熊们回家时，她醒过来，惊愕地从窗户逃走了。原始的故事（可追溯到1837年）有两个不同之处：一是熊发现了女孩之后，撕碎并吞咽了她。二是女孩企图逃跑时变成了老巫婆的面貌。故事的结尾告诉人们，金凤花要不就是缺胳膊断腿，要不就是由于她的恶行被抓去感化所了，总之不是好事儿。</p><p>8、奇幻森林历险记</p><p>从奇幻森林历险记的流行版本里，我们知道两个在森林里迷路的孩子最终找到了一间华美的屋子。屋子里居住着一名女巫，她要求他们为他做劳役。在一次准备美餐的过程中，他们结束了奴役生活：他们发现来路，将女巫扔进火炉，逃走了。在更早的法语版本里（名为《迷路的孩子》），没有女巫，而是魔鬼。一开始坏心肠的老魔鬼被孩子愚弄（和后来的故事一样），但是后来他摆脱了孩子，将锯木架整合起来，要把其中一个孩子榨成肉酱。孩子们假装不懂怎么上架，请魔鬼的妻子来做示范。当她躺倒，孩子扼住她的喉咙威胁魔鬼，才逃出了森林。</p><p>9、没有手的姑娘</p><p>说实话，这个故事的所有版本都很残忍（不管是圣经故事还是原始的故事），尽管情节变化各有不同。最新版本里，魔鬼承诺一个穷人，如果他允许自己拿走任何磨坊后的物什，就让他变富。穷人只知道屋后面有一棵与自己毫不相干的苹果树，就答应了，其实那正是他的爱女。女儿太纯洁了，魔鬼无法带走她，于是魔鬼又要挟女儿，除非女儿允许自己父亲剁碎自己双手，否则将带走父亲。女儿同意了，而他父亲也做了，悲剧就这样酿成了。尽管这不太雅观，但早先的其他一些变体版本更令人发指：女孩剁碎自己的手臂，使自己变得丑陋，以免去强暴之苦。另一种变体是父亲剁碎女儿的双手，因为她拒绝和父亲交媾。</p><p>10、灰姑娘</p><p>现代的灰姑娘故事里，美丽的灰姑娘与王子结合，后母的两个女儿也嫁给了两名伯爵，从此以后，大家相安无事地生活在一起。这个故事的雏形可以追溯到公元一世纪，是关于斯特拉博（古希腊地理学家）的女人罗德庇斯（并不叫仙度瑞拉）。这两个故事除了水晶鞋和南瓜车，其他都很类似。而格林兄弟将美好的寓言转变成阴森的罪恶：在这个版本里，后母的两个女儿削足适履，以哄骗王子她们才是要所要寻找的。鸽子啄出她们的眼睛来警示王子。后半生中，后母的女儿成为瞎乞丐，而灰姑娘在宫廷里庸碌地消遣着时光。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;童话从诞生之日起就充满着曲折的情节和阴森的结局。如今，那些带有血腥气息的童话已不适应现代读者的口味，于是，迪斯尼等公司为迎合观众而净化了童话，到处都是大团圆结局。在此，我们对常见的一些快乐结局作出解释，还原它们本来的恐怖面目。&lt;/p&gt;
&lt;p&gt;1、魔笛&lt;/p&gt;
&lt;p&gt;《魔笛》
      
    
    </summary>
    
      <category term="收集" scheme="https://ojdev.github.io/categories/%E6%94%B6%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>2011年10月14日下午14点哈尔滨地震</title>
    <link href="https://ojdev.github.io/2011/10/14/2011%E5%B9%B410%E6%9C%8814%E6%97%A5%E4%B8%8B%E5%8D%8814%E7%82%B9%E5%93%88%E5%B0%94%E6%BB%A8%E5%9C%B0%E9%9C%87/"/>
    <id>https://ojdev.github.io/2011/10/14/2011年10月14日下午14点哈尔滨地震/</id>
    <published>2011-10-14T06:14:00.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>就在刚才，不到1个小时，中午吃完饭和同事打了一局Dota，很久没玩了，而且昨晚开始有雾，今天的雾更大，之后我坐着，感觉身体不由自主的左右轻微晃，头稍微有点晕，我以为是昨晚没睡好，想着ProcessMap还没画完呢，打算开小差睡一下，然后同时在群里问</p><blockquote><p>××× 14:28:08</p><p>感觉不感觉 脑袋晕？</p><p>× 14:28:23</p><p>感觉了</p><p>× 14:28:42</p><p>刚才我觉得我有点轻微的晃，我以为昨晚没睡好</p></blockquote><p>然后他出来说群里那边有个感觉到地震了，感觉晃，问是不是晕，说不是，是东西晃，有个人从25楼已经跑下去了。</p><p>原来是地震了，我还真是平静，我们几个就讨论，原来只有我和我们领导有感觉，剩下那四个人没感觉到。</p><p>微博的效应真快，我打开微博就看到有说这个的了，据说是俄罗斯6.6级地震，黑龙江这边几个城市有震感。</p><blockquote><p>××× 14:42:23</p><p>俄罗斯这一带 城镇还挺多呢</p><p>×××× 14:45:11</p><p>今天还这是个“好”日子</p><p>××× 14:46:55</p><p>我朋友在交银大厦22楼 整栋大楼都疏散了</p><p>。。。</p><p>说是友谊路那全都是人</p><p>&amp;&amp; 14:47:18</p><p>++14:47:34</p><p>会展那的高层没事</p><p>××× 14:47:54</p><p>有趣</p><p>×××× 14:48:26</p><p>没事，算命的说我能活到死</p></blockquote><p>不过，知道地震了，我还是可以很平静，不知道为什么。没有害怕，没有兴奋，我发现，只要是大事，我都可以很平静的接受，可是一件很小的事情，我反倒可以兴奋一下，高兴一下。</p><p>该来的总会来，不来的，也等不到，心放宽些，才比较快乐，来了什么，欣然接受就好，也许，前面就是柳暗花明呢。</p><p>记于二?一一年十月十四日下午14:14分</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;就在刚才，不到1个小时，中午吃完饭和同事打了一局Dota，很久没玩了，而且昨晚开始有雾，今天的雾更大，之后我坐着，感觉身体不由自主的左右轻微晃，头稍微有点晕，我以为是昨晚没睡好，想着ProcessMap还没画完呢，打算开小差睡一下，然后同时在群里问&lt;/p&gt;
&lt;blockqu
      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
      <category term="地震" scheme="https://ojdev.github.io/tags/%E5%9C%B0%E9%9C%87/"/>
    
      <category term="哈尔滨" scheme="https://ojdev.github.io/tags/%E5%93%88%E5%B0%94%E6%BB%A8/"/>
    
  </entry>
  
  <entry>
    <title>MBTI</title>
    <link href="https://ojdev.github.io/2011/08/29/MBTI/"/>
    <id>https://ojdev.github.io/2011/08/29/MBTI/</id>
    <published>2011-08-29T10:18:16.000Z</published>
    <updated>2021-01-13T10:53:06.884Z</updated>
    
    <content type="html"><![CDATA[<p>Psytopic分析：您的性格类型是“ISTP”(内向+实感+思维+知觉)</p><p>容忍，有弹性；是冷静的观察者，但当有问题出现，便迅速行动，找出可行的解决方法。能够分析哪些东西可以使事情进行顺利，又能够从大量资料中，找出实际问题的重心。很重视事件的前因后果，能够以理性的原则把事实组织起来，重视效率。</p><p>ISTP型的人坦率、诚实、讲求实效，他们喜欢行动而非漫谈。他们很谦逊，对于完成工作的方法有很好的理解力。 ISTP型的人擅长分析，所以他们对客观含蓄的原则很有兴趣。他们对于技巧性的事物有天生的理解力，通常精于使用工具和进行手工劳动。他们往往做出有条理而保密的决定。他们仅仅是按照自己所看到的、有条理而直接地陈述事实。 ISTP型的人好奇心强，而且善于观察，只有理性、可靠的事实才能使他们信服。他们重视事实，简直就是有关他们知之甚深的知识的宝库。他们是现实主义者，所以能够很好地利用可获得的资源，同时他们擅于把握时机，这使他们变得很讲求实效。ISTP型的人平和而寡言，往往显得冷酷而清高，而且容易害羞，除了是与好朋友在一起时。他们平等、公正。他们往往受冲动的驱使，对于即刻的挑战和问题具有相当的适应性和反应能力。因为他们喜欢行动和兴奋的事情，所以他们乐于户外活动和运动。</p><p>您适合的领域有：技术领域 证券、金融业、贸易、商业领域 户外、运动、艺术等</p><p>您适合的职业有：</p><p>? 信息服务业经理</p><p>? 计算机程序员</p><p>? 警官</p><p>? 软件开发员</p><p>? 律师助理</p><p>? 消防员</p><p>? 私人侦探</p><p>? 药剂师</p><p>? 证券分析员</p><p>? 银行职员</p><p>? 管理顾问</p><p>? 财务顾问</p><p>? 电子专业人士</p><p>? 技术培训人员</p><p>? 信息服务开发人员</p><p>? 软件开发商</p><p>? 海洋生物学者</p><p>? 后勤与供应经理</p><p>? 经济学者</p><p>? 贸易商</p><p>? 商品经销商</p><p>? 产品代理商（有形产品）</p><p>? 警察</p><p>? 侦探</p><p>? 体育工作者</p><p>? 赛车手</p><p>? 飞行员</p><p>? 雕塑家</p><p>? 手工制作</p><p>? 画家</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Psytopic分析：您的性格类型是“ISTP”(内向+实感+思维+知觉)&lt;/p&gt;
&lt;p&gt;容忍，有弹性；是冷静的观察者，但当有问题出现，便迅速行动，找出可行的解决方法。能够分析哪些东西可以使事情进行顺利，又能够从大量资料中，找出实际问题的重心。很重视事件的前因后果，能够以理
      
    
    </summary>
    
      <category term="狐说八道" scheme="https://ojdev.github.io/categories/%E7%8B%90%E8%AF%B4%E5%85%AB%E9%81%93/"/>
    
    
  </entry>
  
</feed>
